<!--  ==== ==== ==== version 3.4.3 14MAY2019 Author: Scott Sveter ==== ==== ==== -->
<div class="sheet-wrapper">
	<!-- HIDDEN FIELDS -->
	<input type="hidden" name="attr_10" value="10" disabled="disabled" />
	<input type="hidden" name="attr_VS" value="vs:" disabled="disabled" />
	<input type="hidden" name="attr_reeling" value="" />
	<input type="hidden" name="attr_hp_collapse" value="" />
	<input type="hidden" name="attr_hp_check1" value="" />
	<input type="hidden" name="attr_hp_check2" value="" />
	<input type="hidden" name="attr_hp_check3" value="" />
	<input type="hidden" name="attr_hp_check4" value="" />
	<input type="hidden" name="attr_dead" value="" />
	<input type="hidden" name="attr_destroyed" value="" />
	<input type="hidden" name="attr_fp_tired" value="" />
	<input type="hidden" name="attr_fp_collapse" value="" />
	<input type="hidden" name="attr_fp_uncons" value="" />
	<input type="hidden" name="attr_strength_max" value="" />
	<input type="hidden" name="attr_dexterity_max" value="" />
	<input type="hidden" name="attr_intelligence_max" value="" />
	<input type="hidden" name="attr_health_max" value="" />
	<input type="hidden" name="attr_target_form_selection" value="" />
	<input type="hidden" name="attr_target_location_selection" value="" />
	<input type="hidden" name="attr_hit_location_penalty" value="" />
	<input type="hidden" name="attr_hit_location_special" value="" />
	<!-- HIDDEN POINTS INPUTS -->
	<input type="hidden" name="attr_att_points" value="0" />
	<input type="hidden" name="attr_advantages_points" value="0" />
	<input type="hidden" name="attr_disadvantages_points" value="0" />
	<input type="hidden" name="attr_quirks_points" value="0" />
	<input type="hidden" name="attr_racial_points" value="0" />
	<input type="hidden" name="attr_skills_points" value="0" />
	<input type="hidden" name="attr_techniques_points" value="0" />
	<input type="hidden" name="attr_spells_points" value="0" />
	<!-- /HIDDEN FIELDS -->
<div class="heading">
	<input class="sheet-toggle" type="checkbox" title="Heading"/>
					<span class="sheet-checkbox">Heading</span>
<div class="content">
	<div class="sheet-box sheet-identity">
		<div class="sheet-table">
			<div class="sheet-header sheet-header-identity">
				<div class="sheet-cell sheet-col0">Identity</div>
			</div>
			<div class="sheet-row sheet-row-identity">
				<div class="sheet-cell sheet-col0">Name:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_character_name" type="text" placeholder="Character Name"></div>
			</div>
			<div class="sheet-row sheet-row-identity">
				<div class="sheet-cell sheet-col0">Title:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_title_name" type="text" placeholder="Title"></div>
			</div>
			<div class="sheet-row sheet-row-identity">
				<div class="sheet-cell sheet-col0">Religion:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_religion_name" type="text" placeholder="Religion"></div>
			</div>
		</div>
	</div>
	<div class="sheet-box sheet-player">
		<div class="sheet-table">
			<div class="sheet-header sheet-header-player">
				<div class="sheet-cell sheet-col0">Player Information</div>
			</div>
			<div class="sheet-row sheet-row-player">
				<div class="sheet-cell sheet-col0">Player:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_player_name" type="text" placeholder="Player Name"></div>
			</div>
			<div class="sheet-row sheet-row-player">
				<div class="sheet-cell sheet-col0">Campaign:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_campaign_name" type="text" placeholder="Campaign"></div>
			</div>
			<div class="sheet-row sheet-row-player">
				<div class="sheet-cell sheet-col0">Created On:</div>
				<div class="sheet-cell sheet-col1"><input name="attr_creation_date" type="text" placeholder="date" /></div>
			</div>
		</div>
	</div>
	<div class="sheet-box sheet-description">
		<div class="sheet-table">
			<div class="sheet-header sheet-header-description">
				<div class="sheet-cell sheet-col0">Description</div>
			</div>
			<div class="sheet-row sheet-row-descr">
				<div class="sheet-cell sheet-col0">Race:</div>
				<div class="sheet-cell sheet-col1"><input type="text" name="attr_race" placeholder="Race" /></div>
				<div class="sheet-cell sheet-col2">Height:</div>
				<div class="sheet-cell sheet-col3"><input type="text" name="attr_height" placeholder="0" /></div>
				<div class="sheet-cell sheet-col4">Hair:</div>
				<div class="sheet-cell sheet-col5"><input type="text" name="attr_hair" placeholder="Hair" /></div>
			</div>
			<div class="sheet-row sheet-row-descr">
				<div class="sheet-cell sheet-col0">Gender:</div>
				<div class="sheet-cell sheet-col1"><input type="text" name="attr_gender" placeholder="Gender" /></div>
				<div class="sheet-cell sheet-col2">Weight:</div>
				<div class="sheet-cell sheet-col3"><input type="text" name="attr_weight" placeholder="0" /></div>
				<div class="sheet-cell sheet-col4">Eyes:</div>
				<div class="sheet-cell sheet-col5"><input type="text" name="attr_eyes" placeholder="Eyes" /></div>
			</div>
			<div class="sheet-row sheet-row-descr">
				<div class="sheet-cell sheet-col0">Age:</div>
				<div class="sheet-cell sheet-col1"><input type="text" name="attr_age" placeholder="0" /></div>
				<div class="sheet-cell sheet-col2">Size:</div>
				<div class="sheet-cell sheet-col3"><input type="text" name="attr_SM" placeholder="0" /></div>
				<div class="sheet-cell sheet-col4">Skin:</div>
				<div class="sheet-cell sheet-col5"><input type="text" name="attr_skin" placeholder="Skin" /></div>
			</div>
			<div class="sheet-row sheet-row-descr-bottom">
				<div class="sheet-cell sheet-col0">Birthday:</div>
				<div class="sheet-cell sheet-col1"><input type="text" name="attr_birthdate" placeholder="Date" /></div>
				<div class="sheet-cell sheet-col2">TL:</div>
				<div class="sheet-cell sheet-col3"><input type="text" name="attr_tl" placeholder="0" /></div>
				<div class="sheet-cell sheet-col4">Hand:</div>
				<div class="sheet-cell sheet-col5"><input type="text" name="attr_hand" placeholder="Hand" /></div>
			</div>
		</div>
	</div>

	<div class="sheet-box sheet-point-summary">
		<div class="sheet-table">
			<div class="sheet-header sheet-header-point-summary">
				<div class="sheet-cell sheet-col0"><span name="attr_total_points"></span> Points</div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Race:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_racial_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Attributes:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_att_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Advantages:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_advantages_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Disadvantages:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_disadvantages_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Quirks:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_quirks_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Skills:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_skillstechniques_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary">
				<div class="sheet-cell sheet-col0">Spells:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_spells_points" value="0" readonly="readonly"/></div>
			</div>
			<div class="sheet-row sheet-row-point-summary-unspent">
				<div class="sheet-cell sheet-col0">Unspent Pts:</div>
				<div class="sheet-cell sheet-col1 sheet-readonly"><input name="attr_unspentpoints" value="0" readonly="readonly"/></div>
			</div>
		</div>
	</div>

</div>	
</div>	
	
	<div class="sheet-box sheet-status-bar">
		<div class="sheet-header sheet-header-status">
			<div class="sheet-cell sheet-col0">
				Current Move / Dodge
			</div>
			<div class="sheet-cell sheet-col0">
				Current Hit Points
			</div>
			<div class="sheet-cell sheet-col0">
				Current Fatigue
			</div>
			<div class="sheet-cell sheet-col1">
				Current Conditions
			</div>
		</div>
		<div class="sheet-row sheet-row-status sheet-readonly">
			<div class="sheet-cell sheet-col0">
				<span name="attr_current_move"></span> / <span name="attr_dodge_esl"></span>
			</div>
			<div class="sheet-cell sheet-col0">
				<span name="attr_hit_points"></span>
			</div>
			<div class="sheet-cell sheet-col0">
				<span name="attr_fatigue_points"></span>
			</div>
			<div class="sheet-cell sheet-col1">
				<span name="attr_affliction_name"></span>
			</div>
		</div>
	</div>
	
	<!-- ===== ===== ===== ===== TABS ===== ===== ===== ===== -->
	<input type="radio" name="attr_tab" value="1" class="sheet-tab sheet-tab1" checked="checked" /><span>General</span>
	<input type="radio" name="attr_tab" value="2" class="sheet-tab sheet-tab2" /><span>Traits</span>
	<input type="radio" name="attr_tab" value="3" class="sheet-tab sheet-tab3" /><span>Skills</span>
	<input type="radio" name="attr_tab" value="4" class="sheet-tab sheet-tab4" /><span>Combat</span>
	<input type="radio" name="attr_tab" value="5" class="sheet-tab sheet-tab5" /><span>Inventory</span>
	<input type="radio" name="attr_tab" value="6" class="sheet-tab sheet-tab6" /><span>Grimoire</span>
	<input type="radio" name="attr_tab" value="7" class="sheet-tab sheet-tab7" /><span>Rituals</span>
	<input type="radio" name="attr_tab" value="8" class="sheet-tab sheet-tab8" /><span>Notes</span>
	<input type="radio" name="attr_tab" value="0" class="sheet-tab sheet-tab0" /><span title="Sheet Options">y</span>
	<div class="sheet-tab-br"></div>

	<!-- ===== ===== ===== ===== GENERAL TAB ===== ===== ===== ===== -->
	<div class="sheet-tab1">

		<!-- _____ _____ ATTRIBUTE BOX _____ _____ -->
		<div class="sheet-box sheet-attribute">
			<div class="sheet-table">
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">Attributes</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">Mod</div>
						<span class="sheet-tooltip">
							A modifier that will be applied to your attribute.
							<br />
							All derived attributes draw their base from
							your<br />
							unmodified attributes. Therefore this MOD will<br />
							generally only affect direct attribute rolls
							and<br />
							skills rolls.
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Pts</div>
				</div> <!-- .sheet-header -->
				<div class="sheet-main-attribute">
					<div class="sheet-row sheet-row-strength">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Strength (ST):</div>
							<span class="sheet-tooltip">
								Strength
								<br />
								10pts/level
								<br />
								Unmodified <span name="attr_strength_base"></span>
							</span>
						</div>
						<div class="sheet-cell sheet-col1 sheet-readonly">
							<input type="text" name="attr_strength" value="10" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_strength_mod" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_strength_points" value="0" step="10" />
						</div>
						<div class="sheet-cell sheet-col4">
							<button class="sheet-roll-button" type="roll" name="attr_ST_roll" value="!attr @{character_id} Strength [[@{strength} + @{modifier}]]"></button>
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-dexterity">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Dexterity (DX):</div>
							<span class="sheet-tooltip">
								Dexterity
								<br />
								20pts/level
								<br />
								Unmodified: <span name="attr_dexterity_base"></span>
							</span>
						</div>
						<div class="sheet-cell sheet-col1 sheet-readonly">
							<input name="attr_dexterity" value="10" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_dexterity_mod" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_dexterity_points" value="0" step="20" />
						</div>
						<div class="sheet-cell sheet-col4">
							<button class="sheet-roll-button" type="roll" name="attr_DX_roll" value="!attr @{character_id} Dexterity [[@{dexterity} + @{modifier}]]"></button>
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-intelligence">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Intelligence (IQ):</div>
							<span class="sheet-tooltip">
								Intelligence
								<br />
								20pts/level
								<br />
								Unmodified: <span name="attr_intelligence_base"></span>
							</span>
						</div>
						<div class="sheet-cell sheet-col1 sheet-readonly">
							<input name="attr_intelligence" value="10" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_intelligence_mod" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_intelligence_points" value="0" step="20" />
						</div>
						<div class="sheet-cell sheet-col4">
							<button class="sheet-roll-button" type="roll" name="attr_IQ_roll" value="!attr @{character_id} Intelligence [[@{intelligence} + @{modifier}]]"></button>
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-health">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Health (HT):</div>
							<span class="sheet-tooltip">
								Health
								<br />
								10pts/level
								<br />
								Unmodified: <span name="attr_health_base"></span>
						</div>
						<div class="sheet-cell sheet-col1 sheet-readonly">
							<input name="attr_health" value="10" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_health_mod" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_health_points" value="0" step="10" />
						</div>
						<div class="sheet-cell sheet-col4">
							<button class="sheet-roll-button" type="roll" name="attr_HT_roll" value="!attr @{character_id} Health [[@{health} + @{modifier}]]"></button>
						</div>
					</div> <!-- .sheet-row -->
				</div>
				<div class="sheet-row sheet-row-willpower sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Will:</div>
						<span class="sheet-tooltip">
							Willpower
							<br />
							Based on Intelligence
							<br />
							5pts/level
							<br />
							Unmodified: <span name="attr_willpower_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_willpower" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_willpower_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_willpower_points" value="0" step="5" />
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Will" value="!attr @{character_id} Willpower [[@{willpower} + @{modifier}]]"></button>
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-fear">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Fright Check:</div>
						<span class="sheet-tooltip">
							Fright Check
							<br />
							Based on Willpower
							<br />
							2pts/level
							<br />
							Unmodified: <span name="attr_fear_check_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_fear_check" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_fear_check_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Fright" value="!fear @{character_id} ?{Roll Type|Fear |Awe |Confusion } [[@{fear_check} + @{modifier}]] @{fright_check_threshold}"></button>
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-fear">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Threshold:</div>
						<span class="sheet-tooltip">
							Fright Check Threshold
							<br />
							If final modified fright check exceeds threshold,<br/> 
							then reduce modified fright check to threshold level.
							<br />
							Can be modifed by Brave, Rule of 15, etc.
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="number" name="attr_fright_check_threshold" value="13" readonly="readonly" >
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_fright_check_threshold_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						&nbsp;
					</div>
						
				</div>
				<div class="sheet-row sheet-row-basic-speed sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Basic Speed</div>
						<span class="sheet-tooltip">
							Basic Speed
							<br />
							Based on Health and Dexterity
							<br />
							5pts/0.25
							<br />
							Unmodified: <span name="attr_basic_speed_base" value="10"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_basic_speed" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_basic_speed_mod" value="0" step="0.25" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_basic_speed_points" value="0" step="5" />
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-tracker" type="roll" value="/em has a speed of [[@{basic_speed} &{tracker}]]" name="roll_Init"></button>
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Basic Move</div>
						<span class="sheet-tooltip">
							Basic Move
							<br />
							Based on Basic Speed
							<br />
							5pts/level
							<br />
							Unmodified: <span name="attr_basic_move_base" value="0"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_basic_move" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_basic_move_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Enhanced Move</div>
						<span class="sheet-tooltip">
							Enhanced ground move. 
							<br />
							10pts per half level.
							<br />
							Level: <span name="attr_enhanced_ground_move_multiple" value="0"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_enhanced_ground_move" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_enhanced_ground_move_mod" value="0" step=".5" class="editable" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Flight</div>
					</div>
					<div class="sheet-cell sheet-col1">
					    <input type="checkbox" name="attr_flight_checked" value="1" class="sheet-boolean" />
					</div>
					<div class="sheet-cell sheet-col2">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div>
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Air Move</div>
						<span class="sheet-tooltip">
							Base Air Move = Basic Speed * 2 = <span name="attr_basic_air_move_unmodified"></span>
							<br />
							2pts/level, you can use up and down arrows
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_basic_air_move" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_basic_air_move_mod" value="0" step="1" class="editable" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Enhanced Air</div>
						<span class="sheet-tooltip">
							Enhanced Air Move<br />
							Modifier box: steps of .5, you can use up and down arrows.<br />
							Points box: 10 points per half-level, you can use up and down arrows.<br />
							Each level doubles top air move. Half-level is a multiple of 1.5.<br />
							Level: <span name="attr_enhanced_air_move_level" value="0"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_enhanced_air_move" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
					    <input type="number" name="attr_enhanced_air_level" value="0" step=".5" class="editable" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div>
				<div class="sheet-row sheet-row-basic-move sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Amphibious:</div>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="checkbox" name="attr_amphibious_checked" value="1" class="sheet-boolean" />
					</div>
					<div class="sheet-cell sheet-col2">
					&nbsp;
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Water Move</div>
						<span class="sheet-tooltip">
						Basic Move = <span name="attr_basic_water_move_unmodified"></span><br />
						Formula = Basic Move / 5 or Basic Move if amphibious.<br />
						5pts/level, you can use up and down arrows.<br />
						NOTE: Max +2 water move if you have swimming skill.<br />
					</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_basic_water_move" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_basic_water_move_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-move">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Enhanced Water</div>
						<span class="sheet-tooltip">
							Enhanced Water Move<br />
							Modifier box: steps of .5, you can use up and down arrows.<br />
							Points box: 10 points per half-level, you can use up and down arrows.<br />
							Each level doubles top water move. Half-level is a multiple of 1.5.<br />
							Level: <span name="attr_enhanced_water_move_level" value="0"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_enhanced_water_move" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
					    <input type="number" name="attr_enhanced_water_level" value="0" step=".5" class="editable" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div>				
				<div class="sheet-row sheet-row-perception sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Perception:</div>
						<span class="sheet-tooltip">
							Perception
							<br />
							Based on Intelligence
							<br />
							5pts/level
							<br />
							Unmodified: <span name="attr_perception_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_perception" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_perception_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_perception_points" value="0" step="5" />
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Per" value="!attr @{character_id} Perception [[@{perception} + @{modifier}]]"></button>
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-perception">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Vision</div>
						<span class="sheet-tooltip">
							Visual Perception
							<br />
							Based on Perception
							<br />
							2pts/level
							<br />
							Unmodified: <span name="attr_vision_base" ></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_vision" value="10" readonly="readonly" />
						<input type="hidden" name="attr_vision_name" value="Vision" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_vision_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Vision_roll" value="!attr @{character_id} Vision [[@{vision} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-perception">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Hearing</div>
						<span class="sheet-tooltip">
							Audio Perception
							<br />
							Based on Perception
							<br />
							2pts/level
							<br />
							Unmodified: <span name="attr_hearing_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_hearing" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_hearing_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Hearing_roll" value="!attr @{character_id} Hearing  [[@{hearing} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-perception">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Taste & Smell</div>
						<span class="sheet-tooltip">
							Taste & Smell Perception
							<br />
							Based on Perception
							<br />
							2pts/level
							<br />
							Unmodified: <span name="attr_taste_smell_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_taste_smell" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_taste_smell_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_TasteSmell" value="!attr @{character_id} Taste_Smell [[@{taste_smell} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-perception">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Touch</div>
						<span class="sheet-tooltip">
							Touch Perception
							<br />
							Based on Perception
							<br />
							2pts/level
							<br />
							Unmodified: <span name="attr_touch_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_touch" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_touch_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Touch_roll" value="!attr @{character_id} Touch [[@{touch} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-dodge">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Dodge</div>
						<span class="sheet-tooltip">
							Dodge
							<br />
							Based on Basic Speed
							<br />
							Unmodified: <span name="attr_dodge_base" value="0"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_dodge" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_dodge_mod" value="0" step="1" />
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-lift-st sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Lifting ST</div>
						<span class="sheet-tooltip">
							Lifting Strength
							<br />
							Based on Strength
							<br />
							3pts/level
							<br />
							Unmodified: <span name="attr_lift_st_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_lift_st" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_lift_st_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-strike-st">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Striking ST</div>
						<span class="sheet-tooltip">
							Striking Strength
							<br />
							Based on Strength
							<br />
							5pts/level
							<br />
							Unmodified: <span name="attr_striking_st_base"></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_striking_st" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_striking_st_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-basic-damage sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">thr:</div>
						<span class="sheet-tooltip">
							<strong>Thrust Damage</strong>
							<br />
							<div>See page 16 for the complete table.</div>
							<table>
								<thead>
									<tr>
										<th>Strength</th>
										<th>Thrust</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>1</td>
										<td>1d6-6</td>
									</tr>
									<tr>
										<td>2</td>
										<td>1d6-6</td>
									</tr>
									<tr>
										<td>3</td>
										<td>1d6-5</td>
									</tr>
									<tr>
										<td>4</td>
										<td>1d6-5</td>
									</tr>
									<tr>
										<td>5</td>
										<td>1d6-4</td>
									</tr>
									<tr>
										<td>6</td>
										<td>1d6-4</td>
									</tr>
									<tr>
										<td>7</td>
										<td>1d6-3</td>
									</tr>
									<tr>
										<td>8</td>
										<td>1d6-3</td>
									</tr>
									<tr>
										<td>9</td>
										<td>1d6-2</td>
									</tr>
									<tr>
										<td>10</td>
										<td>1d6-2</td>
									</tr>
									<tr>
										<td>11</td>
										<td>1d6-1</td>
									</tr>
									<tr>
										<td>12</td>
										<td>1d6-1</td>
									</tr>
									<tr>
										<td>13</td>
										<td>1d6</td>
									</tr>
								</tbody>
							</table>
							<table>
								<thead>
									<tr>
										<th>Strength</th>
										<th>Thrust</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>14</td>
										<td>1d6</td>
									</tr>
									<tr>
										<td>15</td>
										<td>1d6+1</td>
									</tr>
									<tr>
										<td>16</td>
										<td>1d6+1</td>
									</tr>
									<tr>
										<td>17</td>
										<td>1d6+2</td>
									</tr>
									<tr>
										<td>18</td>
										<td>1d6+2</td>
									</tr>
									<tr>
										<td>19</td>
										<td>2d6-1</td>
									</tr>
									<tr>
										<td>20</td>
										<td>2d6-1</td>
									</tr>
									<tr>
										<td>21</td>
										<td>2d6</td>
									</tr>
									<tr>
										<td>22</td>
										<td>2d6</td>
									</tr>
									<tr>
										<td>23</td>
										<td>2d6+1</td>
									</tr>
									<tr>
										<td>24</td>
										<td>2d6+1</td>
									</tr>
									<tr>
										<td>25</td>
										<td>2d6+2</td>
									</tr>
									<tr>
										<td>26</td>
										<td>2d6+2</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="text" name="attr_thrust" value="1d6-2" />
					</div>
					<div class="sheet-cell sheet-col2">
						<button class="sheet-roll-button" type="roll" value="&{template:GURPSBASIC} {{charactername=@{character_name}}} {{roll_type=Thrust}} {{roll=[[@{thrust}]]}}" name="roll_Damage_Thrust" ></button>
					</div>
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">sw:</div>
						<span class="sheet-tooltip">
							<strong>Swing Damage</strong>
							<br />
							<div>See page 16 for the complete table.</div>
							<table>
								<thead>
									<tr>
										<th>Strength</th>
										<th>Swing</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>1</td>
										<td>1d6-5</td>
									</tr>
									<tr>
										<td>2</td>
										<td>1d6-5</td>
									</tr>
									<tr>
										<td>3</td>
										<td>1d6-4</td>
									</tr>
									<tr>
										<td>4</td>
										<td>1d6-4</td>
									</tr>
									<tr>
										<td>5</td>
										<td>1d6-3</td>
									</tr>
									<tr>
										<td>6</td>
										<td>1d6-3</td>
									</tr>
									<tr>
										<td>7</td>
										<td>1d6-2</td>
									</tr>
									<tr>
										<td>8</td>
										<td>1d6-2</td>
									</tr>
									<tr>
										<td>9</td>
										<td>1d6-1</td>
									</tr>
									<tr>
										<td>10</td>
										<td>1d6</td>
									</tr>
									<tr>
										<td>11</td>
										<td>1d6+1</td>
									</tr>
									<tr>
										<td>12</td>
										<td>1d6+2</td>
									</tr>
									<tr>
										<td>13</td>
										<td>2d6-1</td>
									</tr>
								</tbody>
							</table>
							<table>
								<thead>
									<tr>
										<th>Strength</th>
										<th>Swing</th>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td>14</td>
										<td>2d6</td>
									</tr>
									<tr>
										<td>15</td>
										<td>2d6+1</td>
									</tr>
									<tr>
										<td>16</td>
										<td>2d6+2</td>
									</tr>
									<tr>
										<td>17</td>
										<td>3d6-1</td>
									</tr>
									<tr>
										<td>18</td>
										<td>3d6</td>
									</tr>
									<tr>
										<td>19</td>
										<td>3d6+1</td>
									</tr>
									<tr>
										<td>20</td>
										<td>3d6+2</td>
									</tr>
									<tr>
										<td>21</td>
										<td>4d6-1</td>
									</tr>
									<tr>
										<td>22</td>
										<td>4d6</td>
									</tr>
									<tr>
										<td>23</td>
										<td>4d6+1</td>
									</tr>
									<tr>
										<td>24</td>
										<td>4d6+2</td>
									</tr>
									<tr>
										<td>25</td>
										<td>5d6-1</td>
									</tr>
									<tr>
										<td>26</td>
										<td>5d6</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="text" name="attr_swing" value="1d6" />
					</div>
					<div class="sheet-cell sheet-col2"><button class="sheet-roll-button" type="roll" value="&{template:GURPSBASIC} {{charactername=@{character_name}}} {{roll_type=Swing}} {{roll=[[@{swing}]]}}" name="roll_Damage_Swing" ></button>
					</div>
				</div> <!-- .sheet-row -->
			</div> <!-- .sheet-table -->
		</div> <!-- .sheet-box .sheet-attributes -->
		<!-- _____ _____ LIFTING BOX _____ _____ -->
		<div class="sheet-box sheet-lifting-new">
			<div class="sheet-table">
				<input type="hidden" value="0" name="attr_encumbrance_level" class="sheet-overweight" />
				<div class="sheet-header sheet-header-lifting-new">
					<div class="sheet-cell sheet-col0">Encumbrance, Move & Dodge
					</div>
				</div>
				<div class="sheet-header sheet-header-lifting-new">
					<div class="sheet-cell sheet-col1">Level</div>
					<div class="sheet-cell sheet-col2">Max Load</div>
					<div class="sheet-cell sheet-col3">Move</div>
					<div class="sheet-cell sheet-col3">Fly</div>
					<div class="sheet-cell sheet-col3">Swim</div>
					<div class="sheet-cell sheet-col4">Dodge</div>
				</div>
				<div class="sheet-row sheet-row-lifting-none">
					<div class="sheet-cell sheet-col1">None (0)</div>
					<div class="sheet-cell sheet-col2 sheet-readonly"><span name="attr_lift_0" ></span> lb</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_move_0" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_air_0" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_water_0" ></span></div>
					<div class="sheet-cell sheet-col4 sheet-readonly"><span name="attr_dodge_0" ></span></div>
				</div>
				<div class="sheet-row sheet-row-lifting-light">
					<div class="sheet-cell sheet-col1">Light (1)</div>
					<div class="sheet-cell sheet-col2 sheet-readonly"><span name="attr_lift_1" ></span> lb</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_move_1" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_air_1" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_water_1" ></span></div>
					<div class="sheet-cell sheet-col4 sheet-readonly"><span name="attr_dodge_1" ></span></div>
				</div>
				<div class="sheet-row sheet-row-lifting-medium">
					<div class="sheet-cell sheet-col1">Medium (2)</div>
					<div class="sheet-cell sheet-col2 sheet-readonly"><span name="attr_lift_2" ></span> lb</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_move_2" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_air_2" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_water_2" ></span></div>
					<div class="sheet-cell sheet-col4 sheet-readonly"><span name="attr_dodge_2" ></span></div>
				</div>
				<div class="sheet-row sheet-row-lifting-heavy">
					<div class="sheet-cell sheet-col1">Heavy (3)</div>
					<div class="sheet-cell sheet-col2 sheet-readonly"><span name="attr_lift_3" ></span> lb</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_move_3" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_air_3" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_water_3" ></span></div>
					<div class="sheet-cell sheet-col4 sheet-readonly"><span name="attr_dodge_3" ></span></div>
				</div>
				<div class="sheet-row sheet-row-lifting-xhvy">
					<div class="sheet-cell sheet-col1">X-Heavy (4)</div>
					<div class="sheet-cell sheet-col2 sheet-readonly"><span name="attr_lift_4" ></span> lb</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_move_4" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_air_4" ></span></div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_water_4" ></span></div>
					<div class="sheet-cell sheet-col4 sheet-readonly"><span name="attr_dodge_4" ></span></div>
				</div>
				<div class="sheet-row sheet-row-current-load">
					<div class="sheet-cell sheet-col0">Current Load:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_total_weight" ></span> lb
					</div>
					<div class="sheet-cell sheet-col2">Encumbrance Level:</div>
					<div class="sheet-cell sheet-col3 sheet-readonly"><span name="attr_encumbrance_level" class="sheet-overweight" ></span>
					</div>
				</div>
			</div>
		</div>
		<div class="sheet-box sheet-lifting-new">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-moving">
					<div class="sheet-cell sheet-col0">Lifting & Moving Things
					</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Basic Lift:</div><span class="sheet-tooltip">How much you can lift with one
							hand in one second.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_basic_lift" ></span> lb
					</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">One-Handed Lift:</div><span class="sheet-tooltip">One-Handed Lift: takes two
							seconds.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_one_hand_lift" ></span> lb
					</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Two-Handed Lift:</div><span class="sheet-tooltip">The weight the character can
							lift overhead<br>with both hands in four
							seconds.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_two_hand_lift" ></span> lb
					</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Shove &amp; Knock Over:</div>
						<span class="sheet-tooltip">The weight of an object the
							character can shove<br>and knock over.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_shove_lift" ></span> lb
					</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Running Shove &amp; Knock Over:
						</div><span class="sheet-tooltip">The weight of an
							object the character can shove<br>and knock over
							with a running start.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_run_shove_lift" ></span>
						lb</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Carry On Back:</div><span class="sheet-tooltip">The weight the character can
							carry slung over his/her back.<br />but every second
							that your encumbrance is over 10x BL (that
							is,<br />Extra-Heavy encumbrance), you lose 1
							FP.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_carry_back_lift" ></span>
						lb</div>
				</div>
				<div class="sheet-row sheet-row-moving">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Shift Slightly:</div><span class="sheet-tooltip">The weight of an object that
							the character<br>can shift slightly on a
							floor.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_shift_lift" ></span> lb
					</div>
				</div>
			</div>
		</div>
		<div class="sheet-box sheet-lifting-new">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-jump">
					<div class="sheet-cell sheet-col0">Jump Table</div>
				</div>
				<div class="sheet-row sheet-row-jump">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Skill:</div>
						<span class="sheet-tooltip">
						    Jump Skill. If entered, use Jump skill/2 instead of Basic Move.
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
					    <input type="text" name="attr_jump_skill" value="" class="editable" />
					</div>
					<div class="sheet-cell sheet-col2">
						<div class="sheet-popup">Use ST:</div>
						<span class="sheet-tooltip">
							If Basic Lift (<input type="text" name="attr_display_jump_basic_lift" value="@{lift_0}" disabled="disabled" class="textInline" />) > body weight, use ST/4 instead of Move or Jump skill. 
						</span>
					</div>
					<div class="sheet-cell sheet-col3">
					    <input type="checkbox" name="attr_use_st_for_jump" value="1" class="sheet-boolean" />
					</div>
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Super:</div>
						<span class="sheet-tooltip">
							Super Jump<br />
							Modifier box: steps of 1, you can use up and down arrows.<br />
							Points box: 10 points per level, you can use up and down arrows.<br />
							Each level doubles jump.
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_super_jump_level" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
					    <input type="number" name="attr_super_jump_entered_level" value="0" step="1" class="editable" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div>
				<div class="sheet-row sheet-row-jump">
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">Prep</div>
						<span class="sheet-tooltip">
						    Concentrate for 2 seconds for full jump distances.<br />
						    If no concentration, jump distances are halved.
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="checkbox" name="attr_jump_concentration" value="1" class="sheet-boolean" />
					</div>
					<div class="sheet-cell sheet-col2">
                        feet
					</div>
					<div class="sheet-cell sheet-col3">
						yards
					</div>
					<div class="sheet-cell sheet-col0 ">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col1">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col2">
                        feet
					</div>
					<div class="sheet-cell sheet-col3">
						yards
					</div>
				</div>
				<div class="sheet-row sheet-row-jump">
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">Broad</div>
						<span class="sheet-tooltip">
							Standing Broad Jump Distance.<br />
							First column is base move stat.<br />
							Formula = (2 x Stat To use) - 3 feet<br />
					 		Stat to use: <span name="attr_standing_broad_jump_stat_to_use" value="" ></span><br />
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="text" name="attr_broad_jump_base" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="text" name="attr_broad_jump_distance_feet" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col3">
                    	<input type="text" name="attr_broad_jump_distance_yards" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">Run</div>
						<span class="sheet-tooltip">
							Running Broad Jump.<br />
							Formula = (2 x Stat To use) - 3 feet<br />
					 		Stat to use: <span name="attr_running_broad_jump_stat_to_use" value=""></span><br />
							Max running broad jump distance is twice standing broad jump distance.<br />
							Basic Set Campaigns Page 352.
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" step="1" name="attr_running_jump_yards_moved" value="0" class="editable">
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="text" name="attr_running_jump_distance_feet" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col3">
                    	<input type="text" name="attr_running_jump_distance_yards" value="0" readonly="readonly">
					</div>
				</div>
				<div class="sheet-row sheet-row-jump">
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">High</div>
						<span class="sheet-tooltip">
							High Jump Distance.<br />
							First column is base move stat.<br />
							Formula = (6 x Stat To use) - 10 inches<br />
					 		Stat to use: <span name="attr_standing_high_jump_stat_to_use" value=""></span>
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="text" name="attr_high_jump_base" value="0" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="text" name="attr_high_jump_distance_feet" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col3">
                    	<input type="text" name="attr_high_jump_distance_yards" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">Run</div>
						<span class="sheet-tooltip">
							Running High Jump.<br />
							Formula = (6 x Stat To use) - 10 inches<br />
					 		Stat to use: <span name="attr_running_high_jump_stat_to_use" value=""></span><br />
							Max running high jump distance is twice standing high jump distance.<br />
							Basic Set Campaigns Page 352.
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" step="1" name="attr_running_high_jump_yards_moved" value="0" class="editable">
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="text" name="attr_running_high_jump_distance_feet" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col3">
                    	<input type="text" name="attr_running_high_jump_distance_yards" value="0" readonly="readonly">
					</div>
				</div>
				<div class="sheet-row sheet-row-jump">
					<div class="sheet-cell sheet-col0 ">
						<div class="sheet-popup">JMP MV</div>
						<span class="sheet-tooltip">
							Jump move.<br />
							Greater of Broad Jump Yards / 5 OR Normal Ground Move.<br />
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="text" name="attr_jump_move_speed" value="0" readonly="readonly">
					</div>
					<div class="sheet-cell sheet-col2">
                    	&nbsp;
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
				</div>
			</div>

		</div>
		<div class="sheet-box sheet-stats">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-stats">
					<div class="sheet-cell sheet-col0">FP /HP</div>
					<div class="sheet-cell sheet-col1">Value</div>
					<div class="sheet-cell sheet-col2">Mod</div>
					<div class="sheet-cell sheet-col3">Pts</div>
					<div class="sheet-cell sheet-col4">&nbsp;</div>
				</div> <!-- .sheet-header -->
				<div class="sheet-row sheet-row-current-fatigue-points">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Current FP:</div>
						<span class="sheet-tooltip"><strong>Current Fatigue Points</strong><br />When your fatigue points are low you take penalties.<br />See Page
							426.</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_fatigue_points" value="10" />
					</div>
				</div>
				<div class="sheet-row sheet-row-fatigue-points">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Basic FP:</div><span class="sheet-tooltip"><strong>Fatigue Points</strong><br />Based on Health 3pts/level<br />was Maximum Fatigue Points</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_fatigue_points_max" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_fatigue_points_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_fatigue_points_points" value="0" step="3" />
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Tired:</div><span class="sheet-tooltip">You are very tired. Halve your Move, Dodge,<br />and ST (round up). This does not affect ST<br />based quantities, such as HP and damage.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_fp_tired" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Collapse:</div><span class="sheet-tooltip">0 FP or less – You are on the verge of collapse. If<br />you suffer further fatigue, each FP you lose also<br />causes 1 HP of injury. To do anything besides talk<br />or rest, you must make a Will roll; in combat, roll<br />before each maneuver other than Do Nothing.<br />On a success, you can act normally.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_fp_collapse" ></span>
					</div>
					<div class="sheet-cell sheet-col2">&nbsp;</div>
					<div class="sheet-cell sheet-col3">&nbsp;</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_Will" value="!attr @{character_id} Willpower [[@{willpower} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Unconscious:</div><span class="sheet-tooltip">You fall unconscious. While unconscious, you<br />recover lost FP at the same rate as for normal rest.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_fp_uncons" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-current-hit-points sheet-hr">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Current HP:</div>
						<span class="sheet-tooltip"><strong>Current Hit Points</strong><br />When you're hit points are low,<br />you take penalties. See B419.</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_hit_points" value="10" />
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-hit-points">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Basic HP:</div>
						<span class="sheet-tooltip"><strong>Hit Points</strong><br />Based on Strength 2pts/level<br />was Maximum Hit Points</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input name="attr_hit_points_max" value="10" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_hit_points_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_hit_points_points" value="0" step="2" />
					</div>
				</div> <!-- .sheet-row -->
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Reeling:</div>
						<span class="sheet-tooltip"><strong>Less than 1/3 of your HP remaining.</strong><br />Halve your Basic Speed and Move (round up),<br /> which also reduces your Dodge.</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_reeling" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Collapse:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_hp_collapse" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Check #1:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_hp_check1" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Check #2:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_hp_check2" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Check #3:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_hp_check3" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Check #4:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_hp_check4" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						Dead:
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_dead" ></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Stun</div>
						<span class="sheet-tooltip">
							<strong>Stun check:</strong> recover from physical stun, based on Health.<br />
							High Pain Threshold +3 to check<br />
							Low Pain Threshold -4 to check<br />
							see B420.
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="number" name="attr_stun_check" value="10" readonly="readonly" >
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_stun_check_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_stun_roll" value="!attr @{character_id} Stun-Check [[@{stun_check} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Knock Down</div>
						<span class="sheet-tooltip">
							<strong>Knockdown Check:</strong> based on Health.<br />
							Roll on Major wound, <i>vitals</i> or <i>head</i> strike.<br />
							-5 for major wound, -10 if <i>skull</i> or <i>eye</i>.<br />
							+3 High Pain Threshold<br />
							-4 Low Pain Threshold<br />
							Fail means stunned. If fail by 5 or more, unconscious.<br />
							see B420
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="number" name="attr_knockdown_check" value="10" readonly="readonly" >
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_knockdown_check_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_knockdown_roll" value="!attr @{character_id} Knockdown-Check [[@{knockdown_check} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Unconscious</div>
						<span class="sheet-tooltip">
							<strong>Unconscious Check:</strong> based on Health<br />
							If HP or FP less than zero, roll per turn.<br />
							Hard/Easy to Subdue plus or minus pts/level. Plus or minus one to Unconscious Check per level.<br />
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="number" name="attr_unconscious_check" value="10" readonly="readonly" >
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_unconscious_check_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_unconscious_roll" value="!attr @{character_id} Consciousness-Check [[@{unconscious_check} + @{modifier}]]"></button>
					</div>
				</div>
				<div class="sheet-row sheet-row-thresholds">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Death</div>
						<span class="sheet-tooltip">
							<strong>Death Check:</strong> based on Health.<br />
							On damage taken, Roll if -HP. Another roll for each multiple of -HP.<br />
							Immediate Death at -5xHP<br />
							Hard/Easy to Kill plus or minus 2 pts/level. Plus or minus one to Death Check per level<br />
							Fit +1 to Death Check . Very Fit +2 to Death Check<br />
						</span>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<input type="number" name="attr_death_check" value="10" readonly="readonly" >
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" name="attr_death_check_mod" value="0" step="1" />
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						<button class="sheet-roll-button" type="roll" name="attr_death_roll" value="!attr @{character_id} Death-Check [[@{death_check} + @{modifier}]]"></button>
					</div>
				</div>
				<!-- .sheet-row -->
			</div>
		</div>
	</div> <!-- .sheet-tab1 -->
	<!-- ===== ===== ===== ===== TRAITS TAB ===== ===== ===== ===== -->
	<div class="sheet-tab2">
		<div class="sheet-box sheet-traits">
			<!-- Adv -->
			<div class="sheet-table">
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">Advantages & Perks</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">CR</div>
						<span class="sheet-tooltip">
							Control Rating
							<br />
							<table>
								<tbody>
									<tr>
										<td>Quite rarely (6-)</td>
										<td>1/2x</td>
									</tr>
									<tr>
										<td>Fairly often (9-)</td>
										<td>1x</td>
									</tr>
									<tr>
										<td>Quite often (12-)</td>
										<td>2x</td>
									</tr>
									<tr>
										<td>Almost all the time (15-)</td>
										<td>3x</td>
									</tr>
									<tr>
										<td>Constant (No roll required)</td>
										<td>4x</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Pts</div>
					<div class="sheet-cell sheet-col3">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_traits">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-stats">
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_CR_roll" value="!adv @{character_id} @{rowid} [[@{control_rating} + @{modifier}]] [[@{notes_onoff}]] advantages"></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_name" placeholder="Advantage Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_control_rating" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_points" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input class="text" name="attr_rowid" value="" readonly="readonly"/>
						</div>
					</div>
				</fieldset>
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">Disadvantages</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">CR</div>
						<span class="sheet-tooltip">
							Control Rating
							<br />
							<table>
								<tbody>
									<tr>
										<td>Quite rarely (6-)</td>
										<td>1/2x</td>
									</tr>
									<tr>
										<td>Fairly often (9-)</td>
										<td>1x</td>
									</tr>
									<tr>
										<td>Quite often (12-)</td>
										<td>2x</td>
									</tr>
									<tr>
										<td>Almost all the time (15-)</td>
										<td>3x</td>
									</tr>
									<tr>
										<td>Constant (No roll required)</td>
										<td>4x</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Pts</div>
					<div class="sheet-cell sheet-col3">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_disadvantages">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-stats">
						<input class="hidden" name="attr_rowid" value="" />
						<div class="sheet-cell sheet-col0"><button class="sheet-roll-button" type="roll" name="attr_CR_roll" value="!disad @{character_id} @{rowid} [[@{control_rating} + @{modifier}]] [[@{notes_onoff}]] disadvantages"></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_name" placeholder="Disadvantage Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_control_rating" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_points" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset>
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">Quirks</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">CR</div>
						<span class="sheet-tooltip">
							Control Rating
							<br />
							<table>
								<tbody>
									<tr>
										<td>Quite rarely (6-)</td>
										<td>1/2x</td>
									</tr>
									<tr>
										<td>Fairly often (9-)</td>
										<td>1x</td>
									</tr>
									<tr>
										<td>Quite often (12-)</td>
										<td>2x</td>
									</tr>
									<tr>
										<td>Almost all the time (15-)</td>
										<td>3x</td>
									</tr>
									<tr>
										<td>Constant (No roll required)</td>
										<td>4x</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Pts</div>
					<div class="sheet-cell sheet-col3">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_quirks">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-stats">
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_CR_roll" value="!quirk @{character_id} @{rowid} [[@{control_rating} + @{modifier}]] [[@{notes_onoff}]] quirks"></button>
							<input class="hidden" name="attr_rowid" value="" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_name" placeholder="Quirk Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_control_rating" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_points" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset>
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">Template Traits</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">CR</div>
						<span class="sheet-tooltip">
							Control Rating
							<br />
							<table>
								<tbody>
									<tr>
										<td>Quite rarely (6-)</td>
										<td>1/2x</td>
									</tr>
									<tr>
										<td>Fairly often (9-)</td>
										<td>1x</td>
									</tr>
									<tr>
										<td>Quite often (12-)</td>
										<td>2x</td>
									</tr>
									<tr>
										<td>Almost all the time (15-)</td>
										<td>3x</td>
									</tr>
									<tr>
										<td>Constant (No roll required)</td>
										<td>4x</td>
									</tr>
								</tbody>
							</table>
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Pts</div>
					<div class="sheet-cell sheet-col3">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_racial">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-stats">
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_CR_roll" value="!race @{character_id} @{rowid} [[@{control_rating} + @{modifier}]] [[@{notes_onoff}]] racial"></button>
							<input class="hidden" name="attr_rowid" value="" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_name" placeholder="Template Trait" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_control_rating" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_points" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset> <!-- .repeating_racial -->
			</div> <!-- .sheet-table -->
		</div> <!-- .sheet-box .sheet-traits -->
	</div> <!-- .sheet-tab2 -->
	<!-- ===== ===== ===== ===== SKILLS TAB ===== ===== ===== ===== -->
	<div class="sheet-tab3">
		<!-- _____ _____ SKILLS BOX _____ _____ -->

		<div class="sheet-box sheet-skills">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-skills">
					<div class="sheet-cell sheet-col0">Skills</div>
					<div class="sheet-cell sheet-col1">SL</div>
					<div class="sheet-cell sheet-col1">Attr</div>
					<div class="sheet-cell sheet-col1">Diff</div>
					<div class="sheet-cell sheet-col1">Bonus</div>
					<div class="sheet-cell sheet-col1">Pts</div>
					<div class="sheet-cell sheet-col2">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_skills">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-skills">
						<div class="sheet-cell sheet-col0">
							<input type="hidden" name="attr_rowid" value="" />
							<button class="sheet-roll-button" type="roll" name="attr_Skill_roll" value="!skill @{character_id} @{rowid} [[@{level} + @{modifier}]] [[@{notes_onoff}]] skills" ></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_skillname" placeholder="Skill Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="text" name="attr_level" disabled="disabled" value="[[@{difficulty}*1]]" />
						</div>
						<div class="sheet-cell sheet-col2">
							<select name="attr_base">
								<option value="@{strength}">ST</option>
								<option value="@{dexterity}">DX</option>
								<option value="@{intelligence}">IQ</option>
								<option value="@{health}">HT</option>
								<option value="@{willpower}">Will</option>
								<option value="@{perception}">Per</option>
								<option value="10">10</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col2">
							<select name="attr_difficulty">
								<option value="-1 + @{base} + @{bonus} + (floor((@{points} * 0.25) + 2) * ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) + @{points} * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ) * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ))">
									E</option>
								<option value="-2 + @{base} + @{bonus} + (floor((@{points} * 0.25) + 2) * ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) + @{points} * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ) * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ))">
									A</option>
								<option value="-3 + @{base} + @{bonus} + (floor((@{points} * 0.25) + 2) * ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) + @{points} * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ) * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ))">
									H</option>
								<option value="-4 + @{base} + @{bonus} + (floor((@{points} * 0.25) + 2) * ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) + @{points} * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ) * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ))">
									VH</option>
								<option value="-4 + @{base} + @{bonus} + (floor( (floor( @{points} / 3) * 0.25) + 2) * ceil( ( ( floor( @{points} / 3) - 2 ) + abs( floor( @{points} / 3) - 2) ) / 256 ) + floor( @{points} / 3) * abs( ceil( ( ( floor( @{points} / 3) - 2 ) + abs( floor( @{points} / 3) - 2) ) / 256 ) - 1 ) * abs( ceil( ( ( floor( @{points} / 3) - 2 ) + abs( floor( @{points} / 3) - 2) ) / 256 ) - 1 ))">
									WC</option> <!-- rebuild as sheetworker -->
							</select>
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_bonus" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_points" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1"/>
							</div><span class="sheet-tooltip">Check to dislay notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset>
				<div class="sheet-header sheet-header-techniques">
					<div class="sheet-cell sheet-col0">Technique</div>
					<div class="sheet-cell sheet-col1">Parent Skill</div>
					<div class="sheet-cell sheet-col2">Default</div>
					<div class="sheet-cell sheet-col2">Level</div>
					<div class="sheet-cell sheet-col2">Mx. Lvl</div>
					<div class="sheet-cell sheet-col2">Diff</div>
					<div class="sheet-cell sheet-col2">Bonus</div>
					<div class="sheet-cell sheet-col2">Pts</div>
					<div class="sheet-cell sheet-col3">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_techniques">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-techniques">
						<div class="sheet-cell sheet-col0">
							<input type="hidden" name="attr_rowid" value="" />
							<button class="sheet-roll-button" type="roll" name="attr_Techn_roll" value="!tech @{character_id} @{rowid} [[@{level} + @{modifier}]] [[@{notes_onoff}]] techniques" ></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_skillname" placeholder="Technique Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="text" name="attr_parent_name" placeholder="Parent Skill Name" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_defaultlvl" value="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_level" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_mlevel" value="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<select name="attr_difficulty">
								<option value="0">A</option>
								<option value="-1">H</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_bonus" value="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_points" value="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_ref" placeholder="ref" />
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1"/>
							</div><span class="sheet-tooltip">Check to dislay notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset>
			</div>
		</div>
	</div>
	<!-- ===== ===== ===== ===== COMBAT TAB ===== ===== ===== ===== -->
	<div class="sheet-tab4">
		<!-- _____ _____ PERMANENT MODIFIERS BOX _____ _____ -->
		<div class="sheet-box sheet-combat">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-perm-modifiers">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">PERMANENT COMBAT MODIFIERS OR SETTINGS:
						</div><span class="sheet-tooltip">Several advantages or disadvantages give<br />a permanent modifier to certain combat<br />modifier calculations. These are listed<br />here since they effect Defense, Melee,<br />and Ranged combat calculations.</span>
					</div>
				</div>
				<div class="sheet-header sheet-header-perm-modifiers">
					<div class="sheet-cell sheet-col0-0">
						<div class="sheet-popup">Combat Reflexes:</div><span class="sheet-tooltip"><strong>Combat Reflexes</strong><br />You get +1 to all active defense rolls (see<br />Defending, p. 374), +1 to Fast-Draw skill,<br />and +2 to Fright Checks (see Fright<br />Checks, p. 360). You never “freeze” in a<br />surprise situation, and get +6 on all IQ<br />rolls to wake up, or to recover from<br />surprise or mental “stun.”<br />Your side gets +1 on initiative rolls to<br />avoid a surprise attack – +2 if you are<br />the leader. For details, see Surprise<br />Attacks and Initiative (p. 393).<br />B43</span>
					</div>
					<div class="sheet-cell sheet-col0-1">
						<input type="checkbox" class="sheet-boolean" name="attr_combat_reflexes" value="1" />
					</div>
					<div class="sheet-cell sheet-col0-2">
						<div class="sheet-popup">Trained by a Master:</div><span class="sheet-tooltip"><strong>Trained by a Master</strong><br />You have half the usual penalty to<br />make a Rapid Strike (see Melee Attack<br />Options, p. 370), or to parry more than<br />once per turn (see Parrying, p. 376).<br />These benefits apply to all your<br />unarmed combat skills (Judo, Karate,<br />etc.) and Melee Weapon skills.<br />B93</span>
					</div>
					<div class="sheet-cell sheet-col0-3">
						<input type="checkbox" class="sheet-boolean" name="attr_trained_by_master" value="3" />
					</div>
					<div class="sheet-cell sheet-col0-4">
						<div class="sheet-popup">Weapon Master:</div><span class="sheet-tooltip"><strong>Weapon Master</strong><br />When using a suitable weapon, add +1<br />per die to basic thrust or swing damage if<br />you know the relevant weapon skill at<br />DX+1. Add +2 per die if you know that<br />skill at DX+2 or better.<br />You also have half the usual penalty to<br />make a Rapid Strike (see Melee Attack<br />Options, p. 369), or to parry more than<br />once per turn (see Parrying, p. 376).<br />None of these benefits apply to default use.<br />B99</span>
					</div>
					<div class="sheet-cell sheet-col0-5">
						<input type="checkbox" class="sheet-boolean" name="attr_weapon_master" value="5" />
					</div>
					<div class="sheet-cell sheet-col0-6">
						<div class="sheet-popup">Ambidextrous:</div><span class="sheet-tooltip"><strong>Ambidextrous</strong><br />You can fight or otherwise act<br />equally well with either hand,<br />and never suffer the -4 DX<br />penalty for using the “off” hand<br />B39</span>
					</div>
					<div class="sheet-cell sheet-col0-5">
						<input type="checkbox" class="sheet-boolean" name="attr_ambidextrous" value="4" />
					</div>
				</div>
			</div>
		</div>
		
		<!-- _____ _____ MANUEVER BOX _____ _____ -->
		<div class="sheet-box sheet-combat">
			<div class="sheet-table">
				<div class="sheet-header sheet-manuever-header">
					<div class="sheet-cell sheet-col0">
						<div class="sheet-popup">Manuever</div><span class="sheet-tooltip"><strong>Manuevers:</strong><br />A “maneuver” is an action that you can take<br />on your turn. Each turn, you must choose one.<br />
							<br />Your choice determines what you can do on<br />your turn, and sets your options for active<br />defense and movement. B363</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">Defense</div><span class="sheet-tooltip"><strong>Active Defense:</strong><br />For the purpose of active defenses, your<br />maneuver is considered to be in effect<br /> until you select another maneuver on<br />your next turn.</span>
					</div>
					<div class="sheet-cell sheet-col2">
						Move
					</div>
					<div class="sheet-cell sheet-col3">
						<div class="sheet-popup">Posture</div><span class="sheet-tooltip">Your bodily profile in combat.<br />B364</span>
					</div>
				</div>
				<div class="sheet-row sheet-row-manuever">
					<div class="sheet-cell sheet-col0">
						<input class="sheet-manueverbutton sheet-man1" type="checkbox" name="attr_manuevergroup" value="1" />
						<!-- Basic -->
						<input class="sheet-manueverbutton sheet-man2" type="checkbox" name="attr_manuevergroup" value="2" />
						<!-- Expanded -->
						<div class="sheet-manuevergroup-basic">
							<select name="attr_manuever">
								<option value="DN">Do Nothing</option>
								<option value="Move">Move</option>
								<option value="CP">Change Posture</option>
								<option value="Aim">Aim</option>
								<option value="Eval">Evaluate</option>
								<option value="Atk">Attack</option>
								<option value="Fnt">Feint</option>
								<option value="Conc">Concentrate</option>
								<option value="Rdy">Ready</option>
								<option value="Wait">Wait</option>
								<option value="MA">Move and Attack</option>
								<option value="AoAMDT">AoA: Melee (Determined)</option>
								<option value="AoAMDD">AoA: Melee (Double)</option>
								<option value="AoAMF">AoA: Melee (Feint)</option>
								<option value="AoAMS">AoA: Melee (Strong)</option>
								<option value="AoARD">AoA: Ranged (Determined)</option>
								<option value="AoARS">AoA: Ranged (Suppression Fire)</option>
								<option value="AoDID">AoD: Increased</option>
								<option value="AoDDD">AoD: Double Defense</option>
							</select>
						</div>
						<div class="sheet-manuevergroup-expanded">
							<select name="attr_manuever">
								<option value="DN">Do Nothing</option>
								<option value="Move">Move</option>
								<option value="CP">Change Posture</option>
								<option value="Aim">Aim</option>
								<option value="Eval">Evaluate</option>
								<option value="Atk">Attack</option>
								<option value="Fnt">Feint</option>
								<option value="FMB">Feint: Beat</option>
								<option value="FMDF">Feint: Defensive</option>
								<option value="FMR">Feint: Ruse</option>
								<optgroup label="All out Attack">
									<option value="AoAMDT">AoA: Melee (Determined)</option>
									<option value="AoAMDD">AoA: Melee (Double)</option>
									<option value="AoAMF">AoA: Melee (Feint)</option>
									<option value="AoAML">AoA: Melee (Long)</option>
									<option value="AoAMS">AoA: Melee (Strong)</option>
									<option value="AoARD">AoA: Ranged (Determined)</option>
									<option value="AoARS">AoA: Ranged (Suppression Fire)</option>
								</optgroup>
								<option value="MA">Move and Attack</option>
								<optgroup label="All out Defense">
									<option value="AoDID">AoD: Increased</option>
									<option value="AoDDD">AoD: Double Defense</option>
									<option value="AoDMD">AoD: Mental Defense</option>
								</optgroup>
								<option value="Conc">Concentrate</option>
								<option value="Rdy">Ready</option>
								<option value="Wait">Wait</option>
								<option value="CAMD">Committed Attack: Melee (Determined)</option>
								<option value="CAMS">Committed Attack: Melee (Strong)</option>
								<option value="DAtk">Defensive Attack</option>
							</select>
						</div>
					</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">
						<span name="attr_man_active_defense" value=""></span>
					</div>
					<div class="sheet-cell sheet-col2 sheet-readonly">
						<span name="attr_man_movement" value=""></span>
					</div>
					<input type="hidden" name="attr_man_melee_mod" />
					<input type="hidden" name="attr_man_ranged_mod" />
					<div class="sheet-cell sheet-col3">
						<select name="attr_posture">
							<option value="0" selected="selected">Standing</option>
							<option value="1">Crouching</option>
							<option value="2">Kneeling</option>
							<option value="3">Crawlng</option>
							<option value="4">Sitting</option>
							<option value="5">Lying Down</option>
						</select>
						<input type="hidden" name="attr_posture_name" value="" />
						<input type="hidden" name="attr_posture_attack" value="" />
						<input type="hidden" name="attr_posture_defend" value="" />
						<input type="hidden" name="attr_posture_target" value="" />
						<input type="hidden" name="attr_posture_move" value="" />
					</div>
				</div>
				<div class="sheet-row sheet-row-manuever2">
					<div class="sheet-cell sheet-col0 sheet-readonly">
						<span name="attr_man_description"></span>
					</div>
				</div>
				<div class="sheet-row sheet-row-manuever2">
					<div class="sheet-cell sheet-col0 sheet-readonly">
						<span name="attr_man_notes"></span>
					</div>
				</div>
			</div>
		</div>
		<input type="radio" name="attr_modtab" value="51" class="sheet-modtab sheet-modtab51" checked="checked" /><span>Defense</span>
		<input type="radio" name="attr_modtab" value="52" class="sheet-modtab sheet-modtab52" /><span>Melee</span>
		<input type="radio" name="attr_modtab" value="53" class="sheet-modtab sheet-modtab53" /><span>Ranged</span>
		<input type="radio" name="attr_modtab" value="54" class="sheet-modtab sheet-modtab54" /><span>Combat Tools</span>
		
		<!-- _____ _____ ACTIVE DEFENSE SUB TAB _____ _____ -->
		<div class="sheet-section sheet-section-activedefense">
			
			<!-- _____ _____ ACTIVE DFENSE BOX _____ _____ -->
			<div class="sheet-box sheet-box-active-defense">
				<div class="sheet-table">
					<div class="sheet-header sheet-header-active-defense">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Active Defense</div><span class="sheet-tooltip">An active attempt to avoid an attack: a block, dodge, or parry. See p. 374.</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<div class="sheet-popup">Type</div><span class="sheet-tooltip">There are three “active<br />defenses” that a fighter can<br />use to evade or ward off an<br />attack: Dodge (B374), Parry<br />(B376), and Block (B375).</span>
						</div>
						<div class="sheet-cell sheet-col2">
							<div class="sheet-popup">Mod</div><span class="sheet-tooltip">Enter any permanent<br />modifiers not listed above.<br />ex. Enhanced Dodge.</span>
						</div>
						<div class="sheet-cell sheet-col3">SL</div>
						<div class="sheet-cell sheet-col4">
							<div class="sheet-popup">ESL</div><span class="sheet-tooltip"><strong>effective skill:</strong><br />Your base skill plus<br />or minus any modifiers for<br />the task at hand.<br />B171</span>
						</div>
					</div> <!-- .sheet-header -->
					<div class="sheet-row sheet-row-active-defense sheet-dodge">
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_Dodge_roll" value="!dodge @{character_id} Dodge [[@{dodge_esl} + @{modifier}]]"></button>
						</div>
						<div class="sheet-cell sheet-col1">
							Dodge
						</div>
						<div class="sheet-cell sheet-col2">
							Dodge
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_dodge_bonus" value="0" />
						</div>
						<div class="sheet-cell sheet-col4 sheet-readonly">
							<input name="attr_dodge" value="0" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col5 sheet-readonly">
							<input name="attr_dodge_esl" value="0" readonly="readonly" />
						</div>
					</div> <!-- .sheet-row -->
					<fieldset class="repeating_defense">
						<input class="sheet-toggle" type="checkbox" />
						<span class="sheet-checkbox"></span>
						<div class="sheet-row sheet-row-active-defense">
							<div class="sheet-cell sheet-col0">
								<button class="sheet-roll-button" type="roll" name="attr_defense_roll" value="!def @{character_id} @{rowid} [[@{esl} + @{modifier}]] [[@{notes_onoff}]] defense"></button>
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_name" placeholder="Defense Name" />
							</div>
							<div class="sheet-cell sheet-col2">
							<select name="attr_ad_type">
								<option value="Dodge">Dodge</option>
								<option value="Block">Block</option>
								<option value="Parry">Parry</option>
							</select>
						</div>
							<div class="sheet-cell sheet-col3">
								<input type="number" name="attr_ad_bonus" value="0" />
							</div>
							<div class="sheet-cell sheet-col4">
								<input type="number" name="attr_lvl" value="0"/>
							</div>
							<div class="sheet-cell sheet-col4 sheet-readonly">
								<input name="attr_esl" value="0" readonly="readonly" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-details">
							<div class="sheet-cell sheet-col0">
								<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
								</div><span class="sheet-tooltip">Check to display notes in rolls</span>
							</div>
							<div class="sheet-cell sheet-col1">
								<textarea name="attr_notes" placeholder="notes"></textarea>
							</div>
						</div>
						<div class="sheet-row sheet-row-details-rowid">
							<div class="sheet-cell sheet-col2">
								RowID For Macros:
							</div>
							<div class="sheet-cell sheet-col3">
								<input name="attr_rowid" value="" readonly="readonly" />
							</div>
						</div>
					</fieldset>
				</div>
			</div>
			<!-- _____ _____ ACTIVE DEFENSE MODIFIERS BOX _____ _____ -->
			<div class="sheet-box sheet-AD-modifiers">
				<div class="sheet-table">
					<div class="sheet-header sheet-header-AD-modifiers">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">ACTIVE DEFENSE MODIFIERS:
							</div><span class="sheet-tooltip">When performing a dodge, block, or<br />parry, figure your active defense roll by:<br /><strong>1.</strong> Taking your calculated Dodge, Block,<br />or Parry score. (The Combat Reflexes<br />and Enhanced Defenses advantages<br />increase these values above their base.)<br /><strong>2.</strong> Applying the relevant conditional<br />modifiers below. All modifiers are<br />cumulative.</span><input type="hidden" name="attr_total_ad_mod" value="0" />
						</div>
						<div class="sheet-cell sheet-col1">
							<span name="attr_total_ad_mod"></span>
						</div>
					</div>
					<div class="sheet-row sheet-row-AD-modifiers">
						<div class="sheet-cell sheet-col0-0">
							<div class="sheet-popup">Fencing:</div><span class="sheet-tooltip"><strong>Fencing Weapon:</strong><br />Check box if equipped<br />Halves the cumulative<br />penalty (-4) for multiple<br />parries after the first.</span>
						</div>
						<div class="sheet-cell sheet-col0-1">
							<input type="checkbox" class="sheet-boolean" name="attr_fencing" value="1" />
						</div>
						<div class="sheet-cell sheet-col0-2">
							<div class="sheet-popup">Parrying w/</div><span class="sheet-tooltip">Defender parrying with<br />one of the following.</span>
						</div>
						<div class="sheet-cell sheet-col0-4">Dagger:</div>
						<div class="sheet-cell sheet-col0-3">
							<input type="radio" class="sheet-parrybutton" name="attr_parryweapon" value="-1" />
						</div>
						
						<div class="sheet-cell sheet-col0-4">Whip:</div>
						<div class="sheet-cell sheet-col0-3">
							<input type="radio" class="sheet-parrybutton" name="attr_parryweapon" value="-2" />
						</div>
						
						<div class="sheet-cell sheet-col0-4">Staff:</div>
						<div class="sheet-cell sheet-col0-3">
							<input type="radio" class="sheet-parrybutton" name="attr_parryweapon" value="2" />
						</div>
						
						<div class="sheet-cell sheet-col0-4">N/A:</div>
						<div class="sheet-cell sheet-col0-5">
							<input type="radio" class="sheet-parrybutton" name="attr_parryweapon" value="0" checked="checked" />
						</div>
						
						<div class="sheet-cell sheet-col0-6">
							<div class="sheet-popup">Unarmed parry:</div><span class="sheet-tooltip"><strong>vs. Thrown Attacks:</strong><br />Success by 5+ (or critical success) with an unarmed parry means your target has caught the weapon!</span>
						</div>
						<div class="sheet-cell sheet-col0-7">
							<select name="attr_unarmed_parry">
								<option value="0" selected="selected">w/ Judo or Karate
								</option>
								<option value="-3">vs. swung weapon</option>
								<option value="0">vs. thrust weapon</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col0-8">
							<div class="sheet-popup">Multiple:</div><span class="sheet-tooltip"><strong>Multiple Parries:</strong><br />Enter number of<br />parries -4 to<br />Parry per parry after the<br />first, cumulative</span>
						</div>
						<div class="sheet-cell sheet-col0-9">
							<input type="number" name="attr_multi_parry" value="0" />
						</div>
						<input type="hidden" name="attr_mpp" value="0"/>
					</div>
					<div class="sheet-row sheet-row-AD-modifiers">
						<div class="sheet-cell sheet-col2-0">
							<div class="sheet-popup">Above attacker:</div><span class="sheet-tooltip"><strong>Defender Above attacker</strong><br />difference above attacker </span>
						</div>
						<div class="sheet-cell sheet-col2-1">
							<select name="attr_def_above_atkr">
								<option value="0" selected="selected">&lt;3'</option>
								<option value="1">3'</option>
								<option value="2">4'</option>
								<option value="3">5'</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col2-2">
							<div class="sheet-popup">Afflictions:</div><span class="sheet-tooltip">Any condition that<br />affects the character.</span>
						</div>
						<div class="sheet-cell sheet-col2-3">
							<span class="sheet-readonly" name="attr_affliction_name"></span>
						</div>
						<div class="sheet-cell sheet-col2-4">
							<div class="sheet-popup">Bad footing:</div><span class="sheet-tooltip">-1 or more (GM’s option)</span>
						</div>
						<div class="sheet-cell sheet-col2-5">
							<input type="number" name="attr_ad_bad-foot" value="0" />
						</div>
						<div class="sheet-cell sheet-col2-6">
							<div class="sheet-popup">Can't see attacker:</div><span class="sheet-tooltip">block or parry requires a Hearing -2 roll</span>
						</div>
						<div class="sheet-cell sheet-col2-7">
							<input type="checkbox" class="sheet-boolean" name="attr_ad_cant-see-attacker" value="-4" />
						</div>
						<div class="sheet-cell sheet-col2-8">
							<div class="sheet-popup">Mounted:</div><span class="sheet-tooltip"><strong>Defender Mounted</strong><br />penalty equal to difference<br />between 12 and Riding skill<br />(no penalty for Riding at 12+)</span>
						</div>
						<div class="sheet-cell sheet-col2-9">
							<input type="number" name="attr_ad_mounted" value="0" />
						</div>
						<div class="sheet-cell sheet-col2-10">
							<div class="sheet-popup">Shield DB:</div><span class="sheet-tooltip"><strong>Shield Defense Bonus</strong><br />DB from equipped shield<br />check box below to equip</span>
						</div>
						<div class="sheet-cell sheet-col2-11 sheet-readonly">
							<span name="attr_shield_defense_bonus"></span>
						</div>
					</div>
					<div class="sheet-row sheet-row-AD-modifiers">
						<div class="sheet-cell sheet-col3-0">
							<div class="sheet-popup">Acrobatic Dodge:</div><span class="sheet-tooltip"><strong>Acrobatic Dodge:</strong><br />+2 to Dodge if Acrobatics roll succeeds, -2 if it fails</span>
						</div>
						<div class="sheet-cell sheet-col3-1">
							<input type="checkbox" class="sheet-boolean" name="attr_ad_acrobatic_dodge" value="1" />
							<input type="hidden" name="attr_acro_dodge" value="0" />
						</div>
						<input type="hidden" name="attr_ad_acrobatic_dodge" class="sheet-acroOnOff" />
						<div class="sheet-acroOn">
						<div class="sheet-cell sheet-col3-2">
							<div class="sheet-popup">Yes</div><span class="sheet-tooltip">Acrobatics Roll Successful</span>
						</div>
						<div class="sheet-cell sheet-col3-3">
							<input type="radio" class="sheet-modifier" name="attr_ad_acrobatic_dodge_success" value="2" />
						</div>
						<div class="sheet-cell sheet-col3-3">
							<input type="radio" class="sheet-modifier" name="attr_ad_acrobatic_dodge_success" value="-2" checked="checked" />
						</div>
						<div class="sheet-cell sheet-col3-4">
							<div class="sheet-popup">No</div><span class="sheet-tooltip">Acrobatics Roll Failed</span>
						</div>
						</div>
						<div class="sheet-acroOff">
						<div class="sheet-cell sheet-col3-2 sheet-disable">
							Yes
						</div>
						<div class="sheet-cell sheet-col3-3">
							<input type="radio" class="sheet-modifier" name="attr_dummy" value="2" disabled="disabled" />
						</div>
						<div class="sheet-cell sheet-col3-3">
							<input type="radio" class="sheet-modifier" name="attr_dummy" value="-2" checked="checked" disabled="disabled" />
						</div>
						<div class="sheet-cell sheet-col3-4 sheet-disable">
							No
						</div>
						</div>
					
						<div class="sheet-cell sheet-col3-5">
							<div class="sheet-popup">Dodge and Drop:</div><span class="sheet-tooltip"><strong>Dodge and Drop:</strong><br />+3 to Dodge vs. ranged attack</span>
						</div>
						<div class="sheet-cell sheet-col3-6">
							<input type="checkbox" class="sheet-boolean" name="attr_ad_dodgeanddrop" value="3" />
						</div>
						<div class="sheet-cell sheet-col3-7">
							<div class="sheet-popup">Feverish Defense:</div><span class="sheet-tooltip"><strong>Feverish Defense:</strong><br />+2 (costs 1 FP)</span>
						</div>
						<div class="sheet-cell sheet-col3-8">
							<input type="checkbox" class="sheet-boolean" name="attr_ad_feverish_defense" value="2" />
						</div>
						<div class="sheet-cell sheet-col3-9">
							Off-hand parry:
						</div>
						<div class="sheet-cell sheet-col3-10">
							<input type="checkbox" class="sheet-boolean" name="attr_off_hand_parry" value="1" />
							<input type="hidden" name="attr_opp" value="0"/>
						</div>
						<div class="sheet-cell sheet-col3-11">
							<div class="sheet-popup">Dodge & Retreat:</div><span class="sheet-tooltip"><strong>Retreat:</strong><br />To exercise this option, you<br />must move away from your<br />attacker: at least one yard,<br />but not more than 1/10<br />your Move – exactly as for<br />a step (see Step, p. 368).<br />+3 to Dodge, or to Boxing,<br />Judo, Karate, or any fencing<br />Parry; +1 otherwise</span>
						</div>
						<div class="sheet-cell sheet-col3-12">
							<input type="number" name="attr_ad_retreat" value="0" />
						</div>
					</div>
				</div>
			</div>
			<!-- _____ _____ PASSIVE DEFENSE BOX _____ _____ -->
			<div class="sheet-box sheet-damageresist-box">
				<div class="sheet-table sheet-damage_resistance">
					<div class="sheet-header">
						<div class="sheet-cell sheet-col0">Passive Defense</div>
					</div>
					<input type="radio" class="sheet-damageresist-box sheet-drchoice_a" name="attr_damage-box" value="0" checked="checked" />
					<input type="radio" class="sheet-damageresist-box sheet-drchoice_b" name="attr_damage-box" value="1" />
					<input type="radio" class="sheet-damageresist-box sheet-drchoice_c" name="attr_damage-box" value="2" />
				<!-- SPAN DRCHOICE_A BEGIN -->
					<span class="sheet-damageresist sheet-drchoice_a">
						<!-- DR TABLE BEGIN-->
						<div class="sheet-row sheet-row-loadoutname">
							<div class="sheet-cell sheet-col0"><input type="text" name="attr_name_dr_loadout_a" value="" placeholder="Loadout 1" /></div>
						</div> <!-- .sheet-header -->
						<div class="sheet-subheader">
							<div class="sheet-cell sheet-col0">
								Roll
							</div>
							<div class="sheet-cell sheet-col1">
								Where
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3">
								<div class="sheet-popup">DR</div><span class="sheet-tooltip">Split DR for <br />layered
									protection</span>
							</div>
						</div> <!-- .sheet-header -->
						<div class="sheet-row sheet-row-DR">
							<!-- Eyes -->
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Eye
							</div>
							<div class="sheet-cell sheet-col2">
								-9
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_eyes_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_eyes_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Skull -->
							<div class="sheet-cell sheet-col0">
								3-4
							</div>
							<div class="sheet-cell sheet-col1">
								Skull
							</div>
							<div class="sheet-cell sheet-col2">
								-7
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_skull_a_dr_max" value="2" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_skull_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Face -->
							<div class="sheet-cell sheet-col0">
								5
							</div>
							<div class="sheet-cell sheet-col1">
								Face
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_face_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_face_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR"> 
							<!-- Right Leg -->
							<div class="sheet-cell sheet-col0">
								6-7
							</div>
							<div class="sheet-cell sheet-col1">
								Right Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtleg_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtleg_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Right Arm -->
							<div class="sheet-cell sheet-col0">
								8
							</div>
							<div class="sheet-cell sheet-col1">
								Right Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtarm_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtarm_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								9-10
							</div>
							<div class="sheet-cell sheet-col1">
								Torso
							</div>
							<div class="sheet-cell sheet-col2">
								0
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_torso_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_torso_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								11
							</div>
							<div class="sheet-cell sheet-col1">
								Groin
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_groin_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_groin_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								12
							</div>
							<div class="sheet-cell sheet-col1">
								Left Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltarm_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltarm_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								13-14
							</div>
							<div class="sheet-cell sheet-col1">
								Left Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltleg_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltleg_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								15
							</div>
							<div class="sheet-cell sheet-col1">
								Hand
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_hands_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_hands_a_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								16
							</div>
							<div class="sheet-cell sheet-col1">
								Foot
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_feet_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_feet_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								17-18
							</div>
							<div class="sheet-cell sheet-col1">
								Neck
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_neck_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_neck_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Vitals
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_vitals_a_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_vitals_a_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Area
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_area_dr_a" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_area_dr_b" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<fieldset class="repeating_dra">
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								<input type="text" name="attr_roll_a" placeholder="1-2" />
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_name_dr_a" placeholder="Where" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="text" name="attr_penalty_dr_a" placeholder="-2" />
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_user_dr_a" value="" placeholder="0"/>
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_user_dr_b" value="" placeholder="0"/>
							</div>
						</div> <!-- .sheet-row -->
						</fieldset>
					</span>
					<span class="sheet-damageresist sheet-drchoice_b">
						<!-- DR TABLE BEGIN-->
						<div class="sheet-row sheet-row-loadoutname">
							<div class="sheet-cell sheet-col0"><input type="text" name="attr_name_dr_loadout_b" value="" placeholder="Loadout 2" /></div>
						</div> <!-- .sheet-header -->
						<div class="sheet-subheader">
							<div class="sheet-cell sheet-col0">
								Roll
							</div>
							<div class="sheet-cell sheet-col1">
								Where
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3">
								<div class="sheet-popup">DR</div><span class="sheet-tooltip">Split DR for <br />layered
									protection</span>
							</div>
						</div> <!-- .sheet-header -->
						<div class="sheet-row sheet-row-DR">
							<!-- Eyes -->
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Eye
							</div>
							<div class="sheet-cell sheet-col2">
								-9
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_eyes_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_eyes_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Skull -->
							<div class="sheet-cell sheet-col0">
								3-4
							</div>
							<div class="sheet-cell sheet-col1">
								Skull
							</div>
							<div class="sheet-cell sheet-col2">
								-7
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_skull_b_dr_max" value="2" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_skull_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Face -->
							<div class="sheet-cell sheet-col0">
								5
							</div>
							<div class="sheet-cell sheet-col1">
								Face
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_face_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_face_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR"> 
							<!-- Right Leg -->
							<div class="sheet-cell sheet-col0">
								6-7
							</div>
							<div class="sheet-cell sheet-col1">
								Right Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtleg_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtleg_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Right Arm -->
							<div class="sheet-cell sheet-col0">
								8
							</div>
							<div class="sheet-cell sheet-col1">
								Right Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtarm_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtarm_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								9-10
							</div>
							<div class="sheet-cell sheet-col1">
								Torso
							</div>
							<div class="sheet-cell sheet-col2">
								0
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_torso_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_torso_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								11
							</div>
							<div class="sheet-cell sheet-col1">
								Groin
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_groin_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_groin_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								12
							</div>
							<div class="sheet-cell sheet-col1">
								Left Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltarm_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltarm_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								13-14
							</div>
							<div class="sheet-cell sheet-col1">
								Left Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltleg_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltleg_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								15
							</div>
							<div class="sheet-cell sheet-col1">
								Hand
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_hands_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_hands_b_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								16
							</div>
							<div class="sheet-cell sheet-col1">
								Foot
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_feet_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_feet_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								17-18
							</div>
							<div class="sheet-cell sheet-col1">
								Neck
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_neck_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_neck_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Vitals
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_vitals_b_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_vitals_b_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Area
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_area_dr_b" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_area_dr_b" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<fieldset class="repeating_drb">
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								<input type="text" name="attr_roll_b" placeholder="1-2" />
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_name_dr_b" placeholder="Where" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="text" name="attr_penalty_dr_b" placeholder="-2" />
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_user_dr_b" value="" placeholder="0"/>
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_user_dr_b" value="" placeholder="0"/>
							</div>
						</div> <!-- .sheet-row -->
						</fieldset>
					</span> <!-- DR Choice B -->
					<span class="sheet-damageresist sheet-drchoice_c">
						<!-- DR TABLE BEGIN-->
						<div class="sheet-row sheet-row-loadoutname">
							<div class="sheet-cell sheet-col0"><input type="text" name="attr_name_dr_loadout_c" value="" placeholder="Loadout 3" /></div>
						</div> <!-- .sheet-header -->
						<div class="sheet-subheader">
							<div class="sheet-cell sheet-col0">
								Roll
							</div>
							<div class="sheet-cell sheet-col1">
								Where
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3">
								<div class="sheet-popup">DR</div><span class="sheet-tooltip">Split DR for <br />layered
									protection</span>
							</div>
						</div> <!-- .sheet-header -->
						<div class="sheet-row sheet-row-DR">
							<!-- Eyes -->
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Eye
							</div>
							<div class="sheet-cell sheet-col2">
								-9
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_eyes_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_eyes_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Skull -->
							<div class="sheet-cell sheet-col0">
								3-4
							</div>
							<div class="sheet-cell sheet-col1">
								Skull
							</div>
							<div class="sheet-cell sheet-col2">
								-7
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_skull_c_dr_max" value="2" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_skull_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Face -->
							<div class="sheet-cell sheet-col0">
								5
							</div>
							<div class="sheet-cell sheet-col1">
								Face
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_face_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_face_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR"> 
							<!-- Right Leg -->
							<div class="sheet-cell sheet-col0">
								6-7
							</div>
							<div class="sheet-cell sheet-col1">
								Right Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtleg_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtleg_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<!-- Right Arm -->
							<div class="sheet-cell sheet-col0">
								8
							</div>
							<div class="sheet-cell sheet-col1">
								Right Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_rtarm_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_rtarm_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								9-10
							</div>
							<div class="sheet-cell sheet-col1">
								Torso
							</div>
							<div class="sheet-cell sheet-col2">
								0
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_torso_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_torso_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								11
							</div>
							<div class="sheet-cell sheet-col1">
								Groin
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_groin_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_groin_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								12
							</div>
							<div class="sheet-cell sheet-col1">
								Left Arm
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltarm_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltarm_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								13-14
							</div>
							<div class="sheet-cell sheet-col1">
								Left Leg
							</div>
							<div class="sheet-cell sheet-col2">
								-2
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_ltleg_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_ltleg_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								15
							</div>
							<div class="sheet-cell sheet-col1">
								Hand
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_hands_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_hands_c_dr" value="0"/>
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								16
							</div>
							<div class="sheet-cell sheet-col1">
								Foot
							</div>
							<div class="sheet-cell sheet-col2">
								-4
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_feet_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_feet_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								17-18
							</div>
							<div class="sheet-cell sheet-col1">
								Neck
							</div>
							<div class="sheet-cell sheet-col2">
								-5
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_neck_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_neck_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Vitals
							</div>
							<div class="sheet-cell sheet-col2">
								-3
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_vitals_c_dr_max" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_vitals_c_dr" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								-
							</div>
							<div class="sheet-cell sheet-col1">
								Area
							</div>
							<div class="sheet-cell sheet-col2">
								-
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_area_dr_c" value="0" />
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_area_dr_c" value="0" />
							</div>
						</div> <!-- .sheet-row -->
						<fieldset class="repeating_drc">
						<div class="sheet-row sheet-row-DR">
							<div class="sheet-cell sheet-col0">
								<input type="text" name="attr_roll_c" placeholder="1-2" />
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_name_dr_c" placeholder="Where" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="text" name="attr_penalty_dr_c" placeholder="-2" />
							</div>
							<div class="sheet-cell sheet-col3a">
								<input type="number" name="attr_user_dr_c" value="" placeholder="0"/>
							</div>
							<div class="sheet-cell sheet-col3b">
								<input type="number" name="attr_user_dr_c" value="" placeholder="0"/>
							</div>
						</div> <!-- .sheet-row -->
						</fieldset>
					</span> <!-- Ende DR Choice C -->
				</div> <!-- DR TABLE END-->
			</div> <!-- _____ _____ END PASSIVE DEFENSE BOX _____ _____ -->

			<!-- _____ _____ SHIELD BOX _____ _____ -->
			<div class="sheet-box sheet-shield">
				<div class="sheet-header sheet-header-shield">
					<div class="sheet-cell sheet-col0">
						Shield/Defense
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">L</div><span class="sheet-tooltip"><strong>Large: </strong>check
							box if shield is large.</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">E</div><span class="sheet-tooltip"><strong>Equipped: </strong>check
							box if equipped.</span>
					</div>
					<div class="sheet-cell sheet-col2">
						Location
					</div>
					<div class="sheet-cell sheet-col3">
						<div class="sheet-popup">DB</div><span class="sheet-tooltip"><strong>Defense Bonus: </strong>A bonus to<br />all defense rolls. The most<br />common Defense Bonus is<br />that for carrying a shield.<br />B374.</span>
					</div>
					<div class="sheet-cell sheet-col4">
						<div class="sheet-popup">DR/HP</div><span class="sheet-tooltip"><strong>DR/HP: </strong>The shield’s DR<br />and HP if using the optional<br />Damage to Shields rule.<br />This DR protects the shield,<br />not the wielder.<br />B287</span>
					</div>
				</div>
				<div class="sheet-row sheet-row-shield">
					<div class="sheet-cell sheet-col0">
						<input type="text" name="attr_shield_name" placeholder="Defense Name" />
					</div>
					<div class="sheet-cell sheet-col1">
						<input class="sheet-boolean" type="checkbox" name="attr_shield_large_melee_penalty" value="-2" />
					</div>
					<div class="sheet-cell sheet-col1">
						<input class="sheet-boolean" type="checkbox" name="attr_shield_ready" value="1" />
					</div>
					<div class="sheet-cell sheet-col2">
						<select name="attr_shield_location">
							<option value="8">Rt. Arm</option>
							<option value="9">Back</option>
							<option value="12">Lt. Arm</option>
						</select>
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" name="attr_shield_db" value="0" />
					</div>
					<div class="sheet-cell sheet-col4a">
						<input type="text" name="attr_shield_dr" value="0" />
					</div>
					<div class="sheet-cell sheet-col4b">/</div>
					<div class="sheet-cell sheet-col4c">
						<input type="text" name="attr_shield_hp" value="0" />
					</div>
					<input type="hidden" name="attr_shield_defense_bonus" value="0" />
				</div>
			</div>

			<!-- _____ _____ WOUNDS BOX _____ _____ -->
			<div class="sheet-box sheet-woundsbox">
				<div class="sheet-table">
					<div class="sheet-header">
						<div class="sheet-cell sheet-col0">Wounds</div>
					</div>
					<div class="sheet-row sheet-row-afflictions sheet-readonly">
						<div class="sheet-cell sheet-col0"><span name="attr_injury_state" ></span></div>
					</div>
					<div class="sheet-row sheet-row-afflictions-text sheet-readonly">
						<div class="sheet-cell sheet-col0"><span name="attr_injury_notes" ></span></div>
					</div>
					<div class="sheet-subheader sheet-subheader-tablehead">
						<div class="sheet-cell sheet-col0">
							Loc.
						</div>
						<div class="sheet-cell sheet-col1">
							<div class="sheet-popup">HP Max.</div><span class="sheet-tooltip">Maximum HP by location</span>
						</div>
						<div class="sheet-cell sheet-col2">
							<div class="sheet-popup">HP Cur.</div><span class="sheet-tooltip">Current HP by location</span>
						</div>
						<div class="sheet-cell sheet-col3">
							<div class="sheet-popup">Notes</div><span class="sheet-tooltip">Notes, eg. Major Wound.</span>
						</div>
					</div>
					<div class="sheet-row sheet-row-hit_location">
						<!-- Location 0 -->
						<div class="sheet-cell sheet-col0">
							Torso
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_hit_points_max" value="10" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_hit_points" value="10" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_hit_points_notes" value="" />
						</div>
					</div>
					<fieldset class="repeating_hit_location">
							<div class="sheet-row sheet-row-hit_location-rep">
							<!-- Location 1 -->
							<div class="sheet-cell sheet-col0">
								<input type="text" name="attr_loc_name" value="" placeholder="Where" />
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="number" name="attr_loc_HP_max" value="10" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="number" name="attr_loc_HP" value="0" />
							</div>
							<div class="sheet-cell sheet-col3">
								<input type="text" name="attr_loc_notes" value="" placeholder="Notes" />
							</div>
						</div>
					</fieldset>

					<div class="sheet-header sheet-header-fatigue">
						<div class="sheet-cell sheet-col0">Fatigue</div>
					</div>
					<div class="sheet-row sheet-row-afflictions sheet-readonly">
						<div class="sheet-cell sheet-col0"><span name="attr_fatigue_state" ></span></div>
					</div>
					<div class="sheet-row sheet-row-afflictions-text sheet-readonly">
						<div class="sheet-cell sheet-col0"><span name="attr_fatigue_notes" ></span></div>
					</div>
					<div class="sheet-subheader sheet-subheader-fatigue">
						<div class="sheet-cell sheet-col0">Max. Fatigue</div>
						<div class="sheet-cell sheet-col0">Cur. Fatigue</div>
					</div>
					<div class="sheet-row sheet-row-fatigue">
						<div class="sheet-cell sheet-col0"><input name="attr_fatigue_points_max" value="10" readonly="readonly" /></div>
						<div class="sheet-cell sheet-col0"><input type="number" name="attr_fatigue_points" value="10" /></div>
					</div>
					<div class="sheet-header sheet-header-conditions">
						<div class="sheet-cell sheet-col0">Conditions</div>
					</div>
					<div class="sheet-row sheet-row-afflictions">
						<div class="sheet-cell sheet-col0">
							<select name="attr_condition">
								<option selected="selected" value="none">None</option>
								<optgroup label="Temporary Conditions">
									<option value="stunned">Stunned</option>
									<option value="shock">Shock</option>
								</optgroup>
								<optgroup label="Irritating Conditions">
									<option value="cough">Coughing</option>
									<option value="drowsy">Drowsy</option>
									<option value="drunk">Drunk</option>
									<option value="euph">Euphoria</option>
									<option value="naus">Nauseated</option>
									<option value="modpain">Mod. Pain</option>
									<option value="svrpain">Svr. Pain</option>
									<option value="terpain">Ter. Pain</option>
									<option value="sneeze">Sneezing</option>
									<option value="tipsy">Tipsy</option>
								</optgroup>
								<optgroup label="Incapacitating Conditions">
									<option value="agony">Agony</option>
									<option value="choke">Choking</option>
									<option value="daze">Daze</option>
									<option value="ecst">Ecstasy</option>
									<option value="hallu">Hallucinating</option>
									<option value="paral">Paralysis</option>
									<option value="retch">Retching</option>
									<option value="seize">Seizure</option>
									<option value="uncon">Unconscious</option>
								</optgroup>
								<optgroup label="Mortal Conditions">
									<option value="coma">Coma</option>
									<option value="hrtatk">Heart Attack</option>
									<option value="mortal">Mortally Wounded</option>
								</optgroup>
							</select>
						</div>
					</div>
					<div class="sheet-row sheet-row-afflictions-text sheet-readonly">
						<div class="sheet-cell sheet-col0"><span name="attr_cond_notes" ></span>
						</div>
					</div>
				</div>
			</div>	
		</div> <!-- ________ END ACTIVE DEFENSE ________ -->
		
		<!-- _____ _____ MELEE COMBAT SUB TAB _____ _____ -->
		<div class="sheet-section sheet-section-meleeattacks">
			<!-- _____ _____ MELEE COMBAT BOX _____ _____ -->
			<div class="sheet-box sheet-box-melee">
				<div class="sheet-table">
					<div class="sheet-header sheet-header-melee">
						<div class="sheet-cell sheet-col1">Melee Weapons</div>
						<div class="sheet-cell sheet-col2">Usage</div>
						<div class="sheet-cell sheet-col3">
							<div class="sheet-popup">Lvl</div><span class="sheet-tooltip">Your skill before any modifiers<br />B171.</span>
						</div>
						<div class="sheet-cell sheet-col4">
							<div class="sheet-popup">ESL</div><span class="sheet-tooltip"><strong>effective skill:</strong><br />Your base skill plus<br />or minus any modifiers for<br />the task at hand.<br />B171</span>
						</div>
						<div class="sheet-cell sheet-col5">
							<div class="sheet-popup">Damage</div><span class="sheet-tooltip">Damage rolls are expressed
								as<br />number of dice, sometimes with
								a<br />modifier. High damage is expressed<br />as
								dice with a multiplier.<br />
								<table>
									<thead>
										<tr><th>Abbr</th><th>Multiplier</th><th>Name</th></tr>
									</thead>
									<tbody>
										<tr><td>cut</td><td>x1.5</td><td>Cutting</td></tr>
										<tr><td>imp</td><td>x2.0</td><td>Impaling</td></tr>
										<tr><td>cr</td><td>x1.0</td><td>Crushing</td></tr>
										<tr><td>pi-</td><td>x0.5</td><td>Small Piercing</td></tr>
										<tr><td>pi</td><td>x1.0</td><td>Piercing</td></tr>
										<tr><td>pi+</td><td>x1.5</td><td>Large Piercing</td></tr>
										<tr><td>pi++</td><td>x2.0</td><td>Huge Piercing</td></tr>
										<tr><td>aff</td><td>-</td><td>Affliction</td></tr>
										<tr><td>burn</td><td>x1.0</td><td>Burning</td></tr>
										<tr><td>bu (tb)</td><td>x1.0</td><td>Burning Tight Beam</td></tr>
										<tr><td>cor</td><td>x1.0</td><td>Corrosion</td></tr>
										<tr><td>fat</td><td>x1.0</td><td>Fatigue</td></tr>
										<tr><td>tox</td><td>x1.0</td><td>Toxic</td></tr>
										<tr><td>spec</td><td>-</td><td>Special</td></tr>
									</tbody>
								</table>
							</span>
						</div>
						<div class="sheet-cell sheet-col6">
							<div class="sheet-popup">Reach</div><span class="sheet-tooltip">This is the distance in yards at which<br />a human-sized or smaller wielder<br />can strike with the weapon</span>
						</div>
						<div class="sheet-cell sheet-col7">
							<div class="sheet-popup">ST</div><span class="sheet-tooltip">The minimum Strength required to<br />use the weapon properly.</span>
						</div>
						<div class="sheet-cell sheet-col8">
							<div class="sheet-popup">UA</div><span class="sheet-tooltip"><strong>Unarmed Attack:</strong><br />Check box if this is an unarmed attack<br />such as a bite attack!</span>
						</div>
					</div>
					<fieldset class="repeating_melee">
						<input class="sheet-toggle" type="checkbox" />
						<span class="sheet-checkbox"></span>
						<div class="sheet-row sheet-row-melee">
							<div class="sheet-cell sheet-col0">
								<input type="hidden" name="attr_rowid" value="" />
								<button type="roll" name="attr_melee_atkroll"   value="!melee @{character_id} @{rowid} [[@{esl} + @{modifier}]] @{damage} @{type} [[@{melee_target_table}]] [[@{melee_target_subtable}]] [[@{notes_onoff}]]"></button>
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_weaponname" placeholder="Attack Name" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="text" name="attr_usage" placeholder="usage" />
							</div>
							<div class="sheet-cell sheet-col3">
								<input type="text" name="attr_skill" value="10" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col4">
								<input type="number" name="attr_esl" value="0" readonly="readonly"/>								
							</div>
							<div class="sheet-cell sheet-col5a">
								<input type="text" name="attr_damage" value="1d6" />
							</div>
							<div class="sheet-cell sheet-col5b">
								<select name="attr_type">
									<option value="cut">cut</option>
									<option value="imp">imp</option>
									<option value="cr">cr</option>
									<option value="pi-">pi-</option>
									<option value="pi">pi</option>
									<option value="pi+">pi+</option>
									<option value="pi++">pi++</option>
									<option value="burn">burn</option>
									<option value="butb">bu (tb)</option>
									<option value="cor">cor</option>
									<option value="fat">fat</option>
									<option value="aff">aff</option>
									<option value="spec">spec</option>
									<option value="tox">tox</option>
								</select>
							</div>
							<div class="sheet-cell sheet-col6">
								<input type="text" name="attr_reach" placeholder="1" />
							</div>
							<div class="sheet-cell sheet-col7">
								<input type="text" name="attr_min_st" placeholder="1" />
							</div>
							<div class="sheet-cell sheet-col8">
								<input type="checkbox" class="sheet-boolean" name="attr_unarmed_attack" value="1" />
							</div>
						</div>
						<div class="sheet-row sheet-row-details">
							<div class="sheet-cell sheet-col0">
								<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" checked="checked" />
								</div><span class="sheet-tooltip">Check to display notes in rolls</span>
							</div>
							<div class="sheet-cell sheet-col1">
								<textarea name="attr_notes" placeholder="notes"></textarea>
							</div>
						</div>
						<div class="sheet-row sheet-row-details-rowid">
							<div class="sheet-cell sheet-col2">
								RowID For Macros:
							</div>
							<div class="sheet-cell sheet-col3">
								<input name="attr_rowid" value="" readonly="readonly" />
							</div>
						</div>
					</fieldset>
				</div>
			</div>
			<div class="sheet-box sheet-box-melee-modifiers">
				<div class="sheet-table">
					<div class="sheet-row sheet-header-melee-modifiers">
						<div class="sheet-header sheet-header-melee-modifiers">
							<div class="sheet-cell sheet-col0">
								<div class="sheet-popup">MELEE ATTACK MODIFIERS:
								</div><span class="sheet-tooltip">1. Taking your base skill with the weapon or unarmed attack you are using. (In<br />some situations, another skill – e.g., Free Fall, Riding, or Environment Suit – will limit this skill.)<br />2. Applying the relevant conditional modifiers below. Modifiers are cumulative, but<br />combined visibility penalties cannot exceed -10 (-6, if used to blindness). If any modifier<br />marked with an asterisk (*) applies, adjusted skill after all modifiers cannot exceed 9.</span><input type="hidden" name="attr_total_melee_mod" value="0" />
							</div>
							<div class="sheet-cell sheet-col1">
								<span name="attr_total_melee_mod"></span>
							</div>
						</div>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers">
						<div class="sheet-cell sheet-col0-0">
							<div class="sheet-popup">Afflictions:</div><span class="sheet-tooltip">Any condition that<br />affects the character.</span>
						</div>
						<div class="sheet-cell sheet-col0-1 sheet-readonly">
							<span name="attr_affliction_name"></span>
						</div>
						<div class="sheet-cell sheet-col0-2">
							<div class="sheet-popup">Bad footing:</div><span class="sheet-tooltip">-1 or more (GM’s option)</span>
						</div>
						<div class="sheet-cell sheet-col0-3">
							<input type="number" name="attr_melee_bad-foot" value="0" />
						</div>
						<div class="sheet-cell sheet-col0-4">
							<div class="sheet-popup">Grappled:</div><span class="sheet-tooltip"><strong>Grappled:</strong> <br />-4 B371</span>
						</div>
						<div class="sheet-cell sheet-col0-5">
							<input type="checkbox" class="sheet-boolean" name="attr_melee-grappled" value="-4" />
						</div>
						<div class="sheet-cell sheet-col0-6">
							<div class="sheet-popup">Shield:</div><span class="sheet-tooltip"><strong>Holding a large shield:</strong> -2<br />Check box in defense tab.</span>
						</div>
						<div class="sheet-cell sheet-col0-7 sheet-readonly">
							<span name="attr_lg_shield_equipped"></span>
						</div>
						<div class="sheet-cell sheet-col0-8 sheet-readonly">
							<input type="hidden" name="attr_shieldDB_penalty" value="0" /><span name="attr_shield_melee_penalty"></span>
						</div>
						<div class="sheet-cell sheet-col0-9">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_shield_ccbt" value="-1" /></div><span class="sheet-tooltip"><strong>In Close Combat</strong><br />Wearing shield<br />in close combat<br />-DB of shield B392</span>
						</div>
						<div class="sheet-cell sheet-col0-10">
							Distraction:
						</div>
						<div class="sheet-cell sheet-col0-11">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_melee_min_distraction" value="-2" /></div><span class="sheet-tooltip"><strong>Minor Distraction:</strong><br />(e.g., part of clothes on fire): -2 B547</span>
						</div>
						<div class="sheet-cell sheet-col0-12">
							<div class="sheet-popup"><input type="number" name="attr_melee_maj_distraction" value="0" /></div><span class="sheet-tooltip"><strong>Major Distraction:</strong><br />(e.g., all clothes on fire):<br />-3 or more (GM’s option) B547</span>
						</div>
						<div class="sheet-cell sheet-col0-13">
							Mounted:
						</div>
						<div class="sheet-cell sheet-col0-14">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_melee_mount_attacked" value="-2" /></div><span class="sheet-tooltip"><strong>Mount Attacked:</strong><br />Mounted, and mount attacked<br />on its last turn: -2<br />B396</span>
						</div>
						<div class="sheet-cell sheet-col0-15">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_melee_mount_velocity" value="-1" /></div><span class="sheet-tooltip"><strong>Mount Velocity:</strong><br />Mounted, and mount’s velocity<br /> relative to target is 7+: -1<br />B396</span>
						</div>
						<div class="sheet-cell sheet-col0-16">
							ST Def:
						</div>
						<div class="sheet-cell sheet-col0-17">
							<input type="number" name="attr_STdeficit" value="0" />
						</div>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers">
						<div class="sheet-cell sheet-col1-0">
							<div class="sheet-popup">Deceptive Attack:</div><span class="sheet-tooltip"><strong>Attack Option:</strong><br />B369</span>
						</div>
						<div class="sheet-cell sheet-col1-1">
							<select name="attr_deceptive_atk">
								<option value="0" selected >0</option>
								<option value="-2">-1</option>
								<option value="-4">-2</option>
								<option value="-6">-3</option>
								<option value="-8">-4</option>
								<option value="-10">-5</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col1-2">
							<div class="sheet-popup">Dual-Weapon Attack:</div><span class="sheet-tooltip"><strong>Dual Weapon Attack:</strong><br />-4/-8 with primary/off hand<br />(-4/-4 w.Ambidexterity)<br />B417</span>
						</div>
						<div class="sheet-cell sheet-col1-3">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_dualweapon" value="1" />
							<input type="hidden" name="attr_melee_dual_weapon_penalty" value="0" />
						</div>
						<input type="hidden" name="attr_melee_dualweapon" class="sheet-melee-dualweapononoff" />
						<div class="sheet-melee-dualweaponoff"> <!-- Not Checked -->
							<div class="sheet-cell sheet-col1-4 sheet-disable">
								Primary:
							</div>
							<div class="sheet-cell sheet-col1-5 sheet-disable">
								<input type="radio" name="attr_dummy" value="prime" checked="checked" disabled="disabled"/>
							</div>
							<div class="sheet-cell sheet-col1-6 sheet-disable">
								Off-Hand:
							</div>
							<div class="sheet-cell sheet-col1-7 sheet-disable">
								<input type="radio" name="attr_dummy" value="off" disabled="disabled"/>
							</div>
						</div>
						
						<input type="hidden" name="attr_melee_dualweapon" class="sheet-melee-dualweapononoff" />
						<div class="sheet-melee-dualweaponon"> <!-- Checked -->
							<div class="sheet-cell sheet-col1-4">
								Primary:
							</div>
							<div class="sheet-cell sheet-col1-5">
								<input type="radio" name="attr_melee_dualweapon_atk" value="-4" checked="checked" />
							</div>
							<div class="sheet-cell sheet-col1-6">
								Off-Hand:
							</div>
							<div class="sheet-cell sheet-col1-7">
								<input type="radio" name="attr_melee_dualweapon_atk" value="-8" />
							</div>
						</div>
						<div class="sheet-cell sheet-col1-8">
							<div class="sheet-popup">Evaluate:</div><span class="sheet-tooltip"><strong>Evaluate:</strong><br />+1 per turn (maximum +3)<br />B364</span>
						</div>
						<div class="sheet-cell sheet-col1-9">
							<select name="attr_evaluate">
								<option value="0" selected >0</option>
								<option value="1">1</option>
								<option value="2">2</option>
								<option value="3">3</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col1-10">
							<div class="sheet-popup">Off-hand attack:</div><span class="sheet-tooltip"><strong>Off-hand Attack:</strong><br />-4 (no penalty w.<br />Ambidexterity)<br />B547</span>
						</div>
						<div class="sheet-cell sheet-col1-11">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_offhand" value="-4" />
							<input type="hidden" name="attr_melee_offhand_penalty" value="0" />
						</div>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers">
						<div class="sheet-cell sheet-col2-0">
							<div class="sheet-popup">Rapid Strike:</div><span class="sheet-tooltip"><strong>Rapid Strike:</strong><br />-6 on both attacks<br />(-3 w. Trained By A Master<br />or Weapon Master)<br />B370</span>
						</div>
						<div class="sheet-cell sheet-col2-1">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_rapidstrike" value="-6" />
							<input type="hidden" name="attr_rs_penalty" value="0" />
						</div>
						<div class="sheet-cell sheet-col2-2">
							<div class="sheet-popup">Striking into Close Combat:</div><span class="sheet-tooltip"><strong>Striking into Close Combat:</strong><br />-2<br />B547</span>
						</div>
						<div class="sheet-cell sheet-col2-3">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_strikeccbt" value="-2" />
						</div>
						<div class="sheet-cell sheet-col2-4">
							<div class="sheet-popup">Wild Swing:</div><span class="sheet-tooltip"><strong>Wild Swing:</strong><br />-5<br />B547</span>
						</div>
						<div class="sheet-cell sheet-col2-5">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_wild" value="-5" />
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-melee-modifiers">
						<div class="sheet-cell sheet-col0-0">
							Target Size
						</div>
						<div class="sheet-cell sheet-col0-1">
							Location
						</div>
						<div class="sheet-cell sheet-col0-2">
							Penalty<input type="hidden" name="attr_melee_target_penalty"/>
						</div>
						<div class="sheet-cell sheet-col0-3">
							Target Restrictions<input type="hidden" name="attr_melee_target_restr" />
						</div>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers">
						<div class="sheet-cell sheet-col3-0">
							<select name="attr_melee_tgtsize">
								<option value="-15">1/5" | SM:-15</option>
								<option value="-14">1/3" | SM:-14</option>
								<option value="-13">1/2" | SM:-13</option>
								<option value="-12">2/3" | SM:-12</option>
								<option value="-11">1" | SM:-11</option>
								<option value="-10">1.5" | SM:-10</option>
								<option value="-9">2" | SM:-9</option>
								<option value="-8">3" | SM:-8</option>
								<option value="-7">5" | SM:-7</option>
								<option value="-6">8" | SM:-6</option>
								<option value="-5">1 ft | SM:-5</option>
								<option value="-4">1.5 ft | SM:-4</option>
								<option value="-3">2 ft | SM:-3</option>
								<option value="-2">1 yd | SM:-2</option>
								<option value="-1">1.5 yd SM:-1</option>
								<option selected="selected" value="0">2 yd | SM:0 (default)
								</option>
								<option value="1">3 yd | SM:1</option>
								<option value="2">5 yd | SM:2</option>
								<option value="3">7 yd | SM:3</option>
								<option value="4">10 yd | SM:4</option>
								<option value="5">15 yd | SM:5</option>
								<option value="6">20 yd | SM:6</option>
								<option value="7">30 yd | SM:7</option>
								<option value="8">50 yd | SM:8</option>
								<option value="9">70 yd | SM:9</option>
								<option value="10">100 yd | SM:10</option>
								<option value="11">150 yd | SM:11</option>
								<option value="12">200 yd | SM:12</option>
								<option value="13">300 yd | SM:13</option>
								<option value="14">500 yd | SM:14</option>
								<option value="15">700 yd | SM:15</option>
								<option value="16">1,000 yd | SM:16</option>
								<option value="17">1,500 yd | SM:17</option>
								<option value="18">2,000 yd | SM:18 (1 mile)</option>
								<option value="19">3,000 yd | SM:19</option>
								<option value="20">5,000 yd | SM:20 (2.5 miles)
								</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col3-1">
							<select name="attr_melee_target">
								<option value="random">Random</option>
								<optgroup label="Body Locations">
									<optgroup label="3-4 Skull">
										<option value="skull">Skull (Front)</option>
										<option value="skullr">Skull (Back)</option>
									</optgroup>
									<optgroup label="5 Face">
										<option value="facef">Face (Front)</option>
										<option value="facer">Face (Rear)</option>
										<option value="Jaw">Jaw</option>
										<option value="Nose">Nose</option>
										<option value="Ear">Ear</option>
										<option value="Cheek">Cheek</option>
										<option value="Eye">Eye</option>
									</optgroup>
									<optgroup label="6-7 Leg (Right)">
										<option value="LegR">Leg</option>
										<option value="Shinr">Shin (Right)</option>
										<option value="Kneer">Knee (Right)</option>
										<option value="Thighr">Thigh (Right)</option>
										<option value="Veinlr">Vein/Artery, Leg (Right)</option>
									</optgroup>
									<optgroup label="8 Arm (Right)">
										<option value="ArmR">Arm</option>
										<option value="Forearmr">Forearm (Right)</option>
										<option value="Elbowr">Elbow (Right)</option>
										<option value="Upperr">Upper Arm (Right)</option>
										<option value="Shoulderr">Shoulder (Right)</option>
										<option value="Veinra">Vein/Artery, Arm (Right)</option>						
									</optgroup>
									<optgroup label="9-10 Chest">
										<option value="Chest" selected>Chest (Default)</option>
										<option value="Vitalsc">Vitals, Chest (Front)</option>
										<option value="Spinec">Spine, Chest (Rear)</option>
										<option value="Heart">Heart, Chest (Front)</option>
									</optgroup>
									<optgroup label="11 Abdomen">
										<option value="Abdomen">Abdomen</option>
										<option value="Vitalsa">Vitals, Abdomen </option>
										<option value="Digest">Digestive Tract</option>
										<option value="Pelvis">Pelvis</option>
										<option value="116">Groin</option>
									</optgroup>
									<optgroup label="12 Arm (Left)">
										<option value="ArmL">Arm (Left)</option>
										<option value="Forearml">Forearm (Left)</option>
										<option value="Elbowl">Elbow (Left)</option>
										<option value="Upperl">Upper Arm (Left)</option>
										<option value="Shoulderl">Shoulder (Left)</option>
										<option value="Veinla">Vein/Artery, Arm (Left)</option>
									</optgroup>
									<optgroup label="13-14 Leg (Left)">
										<option value="LegL">Leg (Left)</option>
										<option value="Shinl">Shin (Left)</option>
										<option value="Kneel">Knee (Left)</option>
										<option value="Thighl">Thigh (Left)</option>
										<option value="Veinll">Vein/Artery, Leg (Left)</option>
									</optgroup>
									<optgroup label="15 Hand">
										<option value="Hand">Hand</option>
										<option value="HJoint">Hand (Joint)</option>
									</optgroup>
									<optgroup label="16 Foot">
										<option value="Foot">Foot</option>
										<option value="FJoint">Foot (Joint)</option>
									</optgroup>
									<optgroup label="17-18 Neck">
										<option value="Neck">Neck</option>
										<option value="Veeinn">Vein/Artery, Neck</option>
										<option value="Spinen">Spine, Neck (Rear)</option>
									</optgroup>
								</optgroup>
								<optgroup label="Armor Chinks">
									<option value="ChinksT">Chinks (Torso)</option>
									<option value="ChinksO">Chinks (Other)</option>
								</optgroup>
								<optgroup label="Harsh Realism Armor Gaps">
									<option value="ArmpitR">Right Armpit</option>
									<option value="ArmpitL">Left Armpit</option>
									<option value="BoKR">Back of Right Knee</option>
									<option value="BoKL">Back of Left Knee</option>
									<option value="Eyeslit">Eyeslit(s)</option>
									<option value="Cod">Codpiece</option>
									<option value="InsideER">Inside Right Elbow</option>
									<option value="InsideEL">Inside Left Elbow</option>
									<option value="InsideTR">Inside Right Thigh</option>
									<option value="InsideTL">Inside Left Thigh</option>
									<option value="NeckAG">Neck Armor Gap</option>
									<option value="Palm">Open Palm</option>
								</optgroup>
								<optgroup label="Weapons and Equipment">
									<option value="ReachC">Reach C Weapon</option>
									<option value="Reach1">Reach 1 Weapon</option>
									<option value="Reach2">Reach 2 Weapon</option>
								</optgroup>
							</select>
						</div>
						<div class="sheet-cell sheet-col3-2 sheet-readonly">
							<span name="attr_melee_target_penalty"></span>
						</div>
						<div class="sheet-cell sheet-col3-3 sheet-readonly">
							<span name="attr_melee_target_restr"></span>
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-melee-modifiers2">
						<div class="sheet-cell sheet-col4-0">
							Target Effects
							<input type="hidden" name="attr_melee_target_effects" />
							<input type="hidden" name="attr_melee_target_table" />
							<input type="hidden" name="attr_melee_target_subtable" />
						</div>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers2">
						<div class="sheet-cell sheet-col4-0 sheet-readonly">
							<span name="attr_melee_target_effects"></span>
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-melee-modifiers">
						<div class="sheet-cell sheet-col2-0">
							Visibility
						</div>
						<input type="hidden" name="attr_melee_vis_penalty" value=""/>
					</div>
					<div class="sheet-row sheet-row-melee-modifiers">
						<div class="sheet-cell sheet-col5-0">
							Cannot see <i>anything</i>:
						</div>
						<input type="hidden" name="attr_melee_cannot_see_penalty" value="0" />
						<div class="sheet-cell sheet-col5-1">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_cannot_see_onoff" value="1" />
						</div>
						<input type="hidden" name="attr_melee_cannot_see_onoff" class="sheet-meleenosee" value="1"/>
						<div class="sheet-meleesee"> <!-- Not checked / Off -->
						<div class="sheet-cell sheet-col5-1">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						<div class="sheet-cell sheet-col5-2">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						</div>
						<div class="sheet-meleenosee"> <!-- Checked / On -->
						<div class="sheet-cell sheet-col5-1">
							<div class="sheet-popup"><input type="radio" name="attr_melee_cannot_see" value="-10" checked="checked"/></div><span class="sheet-tooltip">Not used to being blind</span>
						</div>
						<div class="sheet-cell sheet-col5-2">
							<div class="sheet-popup"><input type="radio" name="attr_melee_cannot_see" value="-6" /></div><span class="sheet-tooltip">Used to being blind</span>
						</div>
						</div>
						
						<div class="sheet-cell sheet-col5-3">
							Cannot see foe:
						</div>
						<input type="hidden" name="attr_melee_cannot_foe_penalty" value="0" />
						<div class="sheet-cell sheet-col5-4">
							<input type="checkbox" class="sheet-boolean" name="attr_melee_cannot_foe_onoff" value="1" />
						</div>
						<input type="hidden" name="attr_melee_cannot_foe_onoff" class="sheet-meleenoseefoe" value="1"/>
						<div class="sheet-meleeseefoe"> <!-- Not checked -->
						<div class="sheet-cell sheet-col5-4">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						<div class="sheet-cell sheet-col5-5">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						</div>
						<div class="sheet-meleenoseefoe"> <!-- Checked -->
						<div class="sheet-cell sheet-col5-4">
							<div class="sheet-popup"><input type="radio" name="attr_melee_cannot_foe" value="-6" checked="checked"/></div><span class="sheet-tooltip">You do not know<br />his location</span>
						</div>
						<div class="sheet-cell sheet-col5-5">
							<div class="sheet-popup"><input type="radio" name="attr_melee_cannot_foe" value="-4" /></div><span class="sheet-tooltip">if you know his<br />location to within 1 yard*</span>
						</div>
						</div>
						<div class="sheet-cell sheet-col5-6">
							Partial darkness, fog, smoke, etc.:
						</div>
						<div class="sheet-cell sheet-col5-7">
							<select name="attr_partial_vis">
								<option value="0">0</option>
								<option value="-1">-1</option>
								<option value="-2">-2</option>
								<option value="-3">-3</option>
								<option value="-4">-4</option>
								<option value="-5">-5</option>
								<option value="-6">-6</option>
								<option value="-7">-7</option>
								<option value="-8">-8</option>
								<option value="-9">-9</option>
							</select>								
						</div>
						<div class="sheet-cell sheet-col5-8">
							Has Night Vision:
						</div>
						<div class="sheet-cell sheet-col5-9">
							<select name="attr_night_vision">
								<option value="0">0</option>
								<option value="1">1</option>
								<option value="2">2</option>
								<option value="3">3</option>
								<option value="4">4</option>
								<option value="5">5</option>
								<option value="6">6</option>
								<option value="7">7</option>
								<option value="8">8</option>
								<option value="9">9</option>
							</select>								
						</div>
					</div>
				</div> <!-- END TABLE -->
			</div> <!-- END BOX -->
		</div> <!-- END SECTION -->
		
		<!-- _____ _____ RANGED COMBAT SUB TAB _____ _____ -->
		<div class="sheet-section sheet-section-rangedattacks">
			<div class="sheet-box sheet-box-ranged">
				<div class="sheet-table">
					<div class="sheet-header sheet-ranged-header">
						<div class="sheet-cell sheet-col0">
							Ranged Weapons
						</div>
						<div class="sheet-cell sheet-col1">
							Usage
						</div>
						<div class="sheet-cell sheet-col2">
							<div class="sheet-popup">Lvl</div><span class="sheet-tooltip">Your skill before any modifiers<br />B171.</span>
						</div>
						<div class="sheet-cell sheet-col2">
							<div class="sheet-popup">ESL</div><span class="sheet-tooltip"><strong>effective skill:</strong><br />Your base skill plus<br />or minus any modifiers for<br />the task at hand.<br />B171</span>
						</div>
						<div class="sheet-cell sheet-col3">
							<div class="sheet-popup">Acc</div>
							<span class="sheet-tooltip">
								Add Accuracy to your skill if you took an Aim
								maneuver on the turn<br />
								prior to your attack. If the weapon has a built-in
								scope, the<br />
								bonus for this appears as a separate modifier after
								the <br />
								weapon’s base Acc; e.g., “7+2.”
							</span>
						</div>
						<div class="sheet-cell sheet-col4">
							<div class="sheet-popup">Damage</div><span class="sheet-tooltip">Damage rolls are expressed
								as<br />number of dice, sometimes with
								a<br />modifier. High damage is expressed<br />as
								dice with a multiplier.<br />
								<table>
									<thead>
										<tr><th>Abbr</th><th>Multiplier</th><th>Name</th></tr>
									</thead>
									<tbody>
										<tr><td>cut</td><td>x1.5</td><td>Cutting</td></tr>
										<tr><td>imp</td><td>x2.0</td><td>Impaling</td></tr>
										<tr><td>cr</td><td>x1.0</td><td>Crushing</td></tr>
										<tr><td>pi-</td><td>x0.5</td><td>Small Piercing</td></tr>
										<tr><td>pi</td><td>x1.0</td><td>Piercing</td></tr>
										<tr><td>pi+</td><td>x1.5</td><td>Large Piercing</td></tr>
										<tr><td>pi++</td><td>x2.0</td><td>Huge Piercing</td></tr>
										<tr><td>aff</td><td>-</td><td>Affliction</td></tr>
										<tr><td>burn</td><td>x1.0</td><td>Burning</td></tr>
										<tr><td>bu (tb)</td><td>x1.0</td><td>Burning Tight Beam</td></tr>
										<tr><td>cor</td><td>x1.0</td><td>Corrosion</td></tr>
										<tr><td>fat</td><td>x1.0</td><td>Fatigue</td></tr>
										<tr><td>tox</td><td>x1.0</td><td>Toxic</td></tr>
										<tr><td>spec</td><td>-</td><td>Special</td></tr>
									</tbody>
								</table>
							</span>
						</div>
						<div class="sheet-cell sheet-col5">
							<div class="sheet-popup">Range</div><span class="sheet-tooltip">B269</span>
						</div>
						<div class="sheet-cell sheet-col6">
							<div class="sheet-popup">RoF</div>
							<span class="sheet-tooltip">
								<strong>Rate of Fire:</strong>B270<br />The maximum number of shots that can be fired in
								<br />one turn (by a regular person).<br />
								The minimum number of shots is 1.<br /><br />
								<strong>!</strong>: minimum RoF is 1/4 of the
								maximum, rounded up.<br /><strong>m x n</strong>: fires the first number of shots, which each then split<br />into the second number (eg. shotguns <br /><strong>Jet</strong>: shoots a continuous stream of fluid. See page 106.
							</span>
						</div>
						<div class="sheet-cell sheet-col7">
							<div class="sheet-popup">Shots</div>
							<span class="sheet-tooltip">The number of shots that can be fired before the weapon must be reloaded.<br />The parenthetical number indicates the number of 1 second ready maneuvers<br />required to reload the weapon.<br /><strong>T</strong>: the weapon is thrown. To "reload" it, pick it up.<br /><strong>i</strong>: you must load the shots individually. the listed time<br />is for each shot.<br />B270
							</span>
						</div>
						<div class="sheet-cell sheet-col8">
							<div class="sheet-popup">Bulk</div>
							<span class="sheet-tooltip">A measure of the weapon’s size and handiness. Bulk<br />modifies your weapon skill when you take a<br />Move and Attack maneuver (see Move and Attack, p. 365).<br />It also serves as a penalty to Holdout skill when you<br />attempt to conceal the weapon.<br />
							B270</span>
						</div>
						<div class="sheet-cell sheet-col9">
							<div class="sheet-popup">Rcl</div>
							<span class="sheet-tooltip">
								When firing at RoF 2+, every full multiple of
								Recoil<br />
								by which you make your attack roll means you
								score<br />
								one extra hit, to a maximum number of hits
								equal<br />
								to total shots fired. See page 373.
							</span>
						</div>
						<div class="sheet-cell sheet-col10">
							<div class="sheet-popup">ST</div>
							<span class="sheet-tooltip">
								The minimum Strength required to<br />use the weapon
								properly.
							</span>
						</div>
					</div>
					<fieldset class="repeating_ranged">
						<input class="sheet-toggle" type="checkbox" />
						<span class="sheet-checkbox"></span>
						<div class="sheet-row sheet-row-ranged">
							<div class="sheet-cell sheet-col0">
								<input type="hidden" name="attr_rowid" value="" />
								<button class="sheet-roll-button" type="roll" name="attr_ranged_atkroll" value="!ranged @{character_id} @{rowid} [[@{esl} + @{modifier}]] [[@{rounds_fired}]] [[@{recoil}]] @{damage} @{type} [[@{ranged_target_table}]] [[@{ranged_target_subtable}]] [[@{notes_onoff}]] @{notes}" ></button>
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_weaponname" placeholder="Weapon Name" />
							</div>
							<div class="sheet-cell sheet-col2">
								<input type="text" name="attr_usage" placeholder="usage" />
							</div>
							<div class="sheet-cell sheet-col3">
								<input type="text" name="attr_skill" value="" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col3">
								<input type="number" name="attr_esl" value="0" readonly="readonly"/>
							</div>
							<div class="sheet-cell sheet-col4">
								<input type="text" name="attr_acc" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col5">
								<input type="text" name="attr_damage" value="" placeholder="1d6" />
							</div>
							<div class="sheet-cell sheet-col5a">
								<select name="attr_type">
									<option value="cut">cut</option>
									<option value="imp">imp</option>
									<option value="cr">cr</option>
									<option value="pi-">pi-</option>
									<option value="pi">pi</option>
									<option value="pi+">pi+</option>
									<option value="pi++">pi++</option>
									<option value="burn">burn</option>
									<option value="butb">bu (tb)</option>
									<option value="cor">cor</option>
									<option value="fat">fat</option>
									<option value="aff">aff</option>
									<option value="spec">spec</option>
									<option value="tox">tox</option>
								</select>
							</div>
							<div class="sheet-cell sheet-col6">
								<input type="text" name="attr_range" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col7">
								<input type="text" name="attr_rof" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col8">
								<input type="text" name="attr_shots" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col9">
								<input type="text" name="attr_bulk" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col10">
								<input type="text" name="attr_recoil" placeholder="0" />
							</div>
							<div class="sheet-cell sheet-col11">
								<input type="text" name="attr_minweaponST" placeholder="0" />
							</div>
						</div>
						<div class="sheet-row sheet-row-details">
							<div class="sheet-cell sheet-col0">
								<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" checked="checked" value="1" />
								</div><span class="sheet-tooltip">Check to display notes in rolls</span>
							</div>
							<div class="sheet-cell sheet-col1">
								<textarea name="attr_notes" placeholder="notes"></textarea>
							</div>
						</div>
						<div class="sheet-row sheet-row-details-rowid">
							<div class="sheet-cell sheet-col2">
								RowID For Macros:
							</div>
							<div class="sheet-cell sheet-col3">
								<input name="attr_rowid" value="" readonly="readonly" />
							</div>
						</div>
					</fieldset> <!-- .repeating_ranged -->
				</div>
			</div>
			
			<div class="sheet-box sheet-box-ranged-modifiers">
				<div class="sheet-table">
					<div class="sheet-row sheet-header-ranged-modifiers">
						<div class="sheet-header sheet-header-ranged-modifiers">
							<div class="sheet-cell sheet-col0">
								<div class="sheet-popup">RANGED ATTACK MODIFIERS:  
								</div><span class="sheet-tooltip">1. Taking your base skill with the weapon or unarmed attack you are using. (In<br />some situations, another skill – e.g., Free Fall, Riding, or Environment Suit – will limit this skill.)<br />2. Applying the relevant conditional modifiers below. Modifiers are cumulative, but<br />combined visibility penalties cannot exceed -10 (-6, if used to blindness). If any modifier<br />marked with an asterisk (*) applies, adjusted skill after all modifiers cannot exceed 9.</span><input type="hidden" name="attr_total_ranged_mod" value="0" />
							</div>
							<div class="sheet-cell sheet-col1">
								<input type="text" name="attr_total_ranged_mod" readonly="readonly" />
							</div>
						</div>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col0-0">
							<div class="sheet-popup">Afflictions:</div><span class="sheet-tooltip">Any condition that<br />affects the character.</span>
						</div>
						<div class="sheet-cell sheet-col0-1 sheet-readonly">
							<span name="attr_affliction_name"></span>
						</div>
						<div class="sheet-cell sheet-col0-2">
							<div class="sheet-popup">Bad footing:</div><span class="sheet-tooltip">-1 or more (GM’s option)</span>
						</div>
						<div class="sheet-cell sheet-col0-3">
							<input type="number" name="attr_ranged_bad-foot" value="0" />
						</div>
						<div class="sheet-cell sheet-col0-4">
							<div class="sheet-popup">Close Combat:</div><span class="sheet-tooltip"><strong>Close Combat:</strong><br />a penalty equal to the weapon’s Bulk statistic<br />(see Weapons for Close Combat, p. 391)</span>
						</div>
						<div class="sheet-cell sheet-col0-5">
							<input type="number" name="attr_ranged_bulk" value="0"/>
						</div>
						<div class="sheet-cell sheet-col0-6">
							<div class="sheet-popup">Dam. weapon:</div><span class="sheet-tooltip"><strong>Damaged weapon</strong>-HP of injury received last turn (maximum -4)</span>
						</div>
						<div class="sheet-cell sheet-col0-7">
							<input type="number" name="attr_ranged_damagedweapon" value="0" min="-4" max="0"/>
						</div>
						<div class="sheet-cell sheet-col0-8">
							Distraction:
						</div>
						<div class="sheet-cell sheet-col0-9">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_ranged_min_distraction" value="-2" /></div><span class="sheet-tooltip"><strong>Minor Distraction:</strong><br />(e.g., part of clothes on fire): -2<br />B547</span>
						</div>
						<div class="sheet-cell sheet-col0-10">
							<div class="sheet-popup"><input type="number" name="attr_ranged_maj_distraction" value="0" /></div><span class="sheet-tooltip"><strong>Major Distraction:</strong><br />(e.g., all clothes on fire):<br />-3 or more (GM’s option) B547</span>
						</div>
						<div class="sheet-cell sheet-col0-11">
							ST Def:
						</div>
						<div class="sheet-cell sheet-col0-12">
							<input type="number" name="attr_ranged_STdeficit" value="0" />
						</div>
					</div>
					
					<div class="sheet-subheader sheet-subheader-ranged-modifiers">
						<div class="sheet-cell sheet-col2-0">
							Actions by Attacker
						</div>
						<input type="hidden" name="attr_ranged_other_actions" value=""/>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers"> <!-- OTHER ACTIONS BY ATTACKER -->
						<div class="sheet-cell sheet-col4-0">
							<div class="sheet-popup">Aim:</div><span class="sheet-tooltip"><strong>Aim for one turn:</strong> +Accuracy of weapon.<br /><i>The sum of Acc and all extra aimed-fire<br />bonuses can never exceed twice the base<br />Acc of the attack.</i><br />B372</span>
						</div>
						<div class="sheet-cell sheet-col4-1">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_ranged_aim_onoff" value="1"/></div><span class="sheet-tooltip">Check to aim.</span>
						</div>
						<input type="hidden" name="attr_rangedaimbonus" />
						<input type="hidden" class="sheet-AimOnOff" name="attr_ranged_aim_onoff" value="0"/>
						<div class="sheet-AimOn">
							<div class="sheet-cell sheet-col4-2">
								<div class="sheet-popup"><input type="text" name="attr_rangedbaseacc" placeholder="0" /></div><span class="sheet-tooltip">Enter weapon base acc.</span>
							</div>
							<div class="sheet-cell sheet-col4-3">
								<div class="sheet-popup">Scope:</div><span class="sheet-tooltip"><strong>Scope:</strong><br />A telescopic sight, or “scope,” gives<br />a bonus to hit if you take an Aim<br />maneuver. B420</span>
							</div>
							<div class="sheet-cell sheet-col4-4">
								<div class="sheet-popup"><input type="checkbox" name="attr_ranged_scope_onoff" class="sheet-boolean" value="1" />:</div><span class="sheet-tooltip">Check to use scope</span>
							</div>						
							<div class="sheet-cell sheet-col4-5">
								<div class="sheet-popup"><input type="text" name="attr_ranged_scope" placeholder="0" /></div><span class="sheet-tooltip">Enter Scope acc bonus</span>
							</div>
							<div class="sheet-cell sheet-col4-6">
								<div class="sheet-popup">Extra Aim:</div><span class="sheet-tooltip"><strong>Extra Aim:</strong><br />If you Aim for more than one second,<br />you receive an additional bonus</span>
							</div>						
							<div class="sheet-cell sheet-col4-7">
								<select name="attr_ranged_extra_aim">
									<option value="0">None</option>
									<option value="1">2 sec</option>
									<option value="2">3+ sec</option>
								</select>
							</div>
						</div>
						<div class="sheet-AimOff">
							<div class="sheet-cell sheet-col4-2 sheet-disable">
								<div class="sheet-popup"><input type="text" name="attr_dummy" placeholder="0" disabled="disabled" /></div><span class="sheet-tooltip">Enter weapon base acc.</span>
							</div>
							<div class="sheet-cell sheet-col4-3 sheet-disable">
								<div class="sheet-popup">Scope:</div><span class="sheet-tooltip"><strong>Scope:</strong><br />A telescopic sight, or “scope,” gives<br />a bonus to hit if you take an Aim<br />maneuver. B420</span>
							</div>
							<div class="sheet-cell sheet-col4-4 sheet-disable">
								<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_dummy" disabled="disabled" />:</div><span class="sheet-tooltip">Check to use scope</span>
							</div>	
							<div class="sheet-cell sheet-col4-5 sheet-disable">
								<div class="sheet-popup"><input type="text" name="attr_dummy" placeholder="0" disabled="disabled" /></div><span class="sheet-tooltip">Enter Scope acc bonus</span>
							</div>
							<div class="sheet-cell sheet-col4-6 sheet-disable">
								<div class="sheet-popup">Extra Aim:</div><span class="sheet-tooltip"><strong>Extra Aim:</strong><br />If you Aim for more than one second,<br />you receive an additional bonus</span>
							</div>						
							<div class="sheet-cell sheet-col4-7 sheet-disable">
								<select name="attr_dummy" disabled="disabled" >
									<option value="0" selected>---</option>
								</select>
							</div>
						</div>
						<div class="sheet-cell sheet-col4-8">
							<div class="sheet-popup">Laser:</div><span class="sheet-tooltip"><strong>Laser Sight:</strong><br />If you can see your own aiming<br />dot, you get +1 to hit, regardless of<br />whether you took an Aim maneuver.<br />B412</span>
						</div>
						<div class="sheet-cell sheet-col4-9">
							<div class="sheet-popup"><input type="checkbox" name="attr_ranged_laser" class="sheet-boolean" value="1" /></div><span class="sheet-tooltip">Check to use laser sight</span>
						</div>
						<div class="sheet-cell sheet-col4-10">
							<div class="sheet-popup">Braced:</div><span class="sheet-tooltip">+1 if stationary <I>and</i> took a turn to Aim.</span>
						</div>
						<div class="sheet-cell sheet-col4-11">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedbraced" value="1" />
						</div>
						<div class="sheet-cell sheet-col4-12">
							<div class="sheet-popup">Pop-up:</div><span class="sheet-tooltip"><strong>Pop-up Attack:</strong><br />a special Attack maneuver in which you emerge<br />from cover, move no more than one hex, make<br />a ranged attack, and return to cover</span>
						</div>
						<div class="sheet-cell sheet-col4-13">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedpopup" value="-2" />
						</div>
						<div class="sheet-cell sheet-col4-14">
							Rapid fire:
						</div>
						<div class="sheet-cell sheet-col4-15">
							<select name="attr_rangedrapidfire">
								<option value="0" selected>&lt;5 shots</option>
								<option value="1">5-8 shots</option>
								<option value="2">9-12 shots</option>
								<option value="3">13-16 shots</option>
								<option value="4">17-24 shots</option>
								<option value="5">25-49 shots</option>
								<option value="6">50-99 shots</option>
								<option value="7">100-199 shots</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col4-16">
							<div class="sheet-popup">Unfam:</div><span class="sheet-tooltip"><strong>Unfamiliar weapon or targeting system:</strong> -2<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col4-17">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedunfam" value="-2" />
						</div>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col3-0">
							<div class="sheet-popup">Opp. Fire:</div><span class="sheet-tooltip">If you have a ranged weapon, you<br />may watch a specified area and attack<br />as soon as a target presents itself.</span>
							<input type="hidden" name="attr_oppfire_penalty" value="0" />
						</div>
						<div class="sheet-cell sheet-col3-1">
							<input type="checkbox" class="sheet-boolean" name="attr_oppfire" value="1" />
						</div>
						<input type="hidden" class="sheet-OppfireOnOff" name="attr_oppfire" value="0"/>
						<div class="sheet-OppfireOn">
							<div class="sheet-cell sheet-col3-2">
								<div class="sheet-popup">Check target:</div><span class="sheet-tooltip"><strong>Target Discrimination:</strong> -2 B390</span>
							</div>
							<div class="sheet-cell sheet-col3-3">
								<input type="checkbox" class="sheet-boolean" name="attr_oppfire_check" value="-2" />
							</div>
							<div class="sheet-cell sheet-col3-4">
								Hexes watched:
							</div>
							<div class="sheet-cell sheet-col3-5">
								<select name="attr_oppfire_hexes">
									<option value="0" selected>1</option>
									<option value="-1">2</option>
									<option value="-2">3-4</option>
									<option value="-2">line</option>
									<option value="-3">5-6</option>
									<option value="-4">7-10</option>
									<option value="-5">11+</option>
								</select>
							</div>
						</div> <!-- END OPPFIRE_ON -->
						<div class="sheet-OppfireOff">
							<div class="sheet-cell sheet-col3-2 sheet-disable">
								Check target:
							</div>
							<div class="sheet-cell sheet-col3-3">
								<input type="checkbox" class="sheet-boolean" name="attr_oppfire_check" value="-2" disabled />
							</div>
							<div class="sheet-cell sheet-col3-4 sheet-disable">
								Hexes watched:
							</div>
							<div class="sheet-cell sheet-col3-5 sheet-disable">
								<select disabled name="attr_dummy_oppfire_hexes">
									<option value="0" selected>---</option>
								</select>
							</div>
						</div> <!-- END OPPFIRE_OFF -->
						<div class="sheet-cell sheet-col3-6">
							<div class="sheet-popup">Dual-Weapon Attack:</div><span class="sheet-tooltip"><strong>Dual Weapon Attack:</strong><br />-4/-8 with primary/off hand<br />(-4/-4 w.Ambidexterity)<br />B417</span>
						</div>
						<div class="sheet-cell sheet-col3-7">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_dualweapon" value="1" />
							<input type="hidden" name="attr_ranged_dual_weapon_penalty" value="0" />
						</div>
						<input type="hidden" name="attr_ranged_dualweapon" class="sheet-RDwOnOff" value="0"/>
						<div class="sheet-RDwOff"> <!-- Not Checked -->
							<div class="sheet-cell sheet-col3-8 sheet-disable">
								Primary:
							</div>
							<div class="sheet-cell sheet-col3-9 sheet-disable">
								<input type="radio" name="attr_dummy" value="prime" checked="checked" disabled="disabled"/>
							</div>
							<div class="sheet-cell sheet-col3-10 sheet-disable">
								Off-Hand:
							</div>
							<div class="sheet-cell sheet-col3-11 sheet-disable">
								<input type="radio" name="attr_dummy" value="off" disabled="disabled"/>
							</div>
						</div>
						<div class="sheet-RDwOn"> <!-- Checked -->
							<div class="sheet-cell sheet-col3-8">
								Primary:
							</div>
							<div class="sheet-cell sheet-col3-9">
								<input type="radio" name="attr_ranged_dualweapon_atk" value="-4" checked="checked" />
							</div>
							<div class="sheet-cell sheet-col3-10">
								Off-Hand:
							</div>
							<div class="sheet-cell sheet-col3-11">
								<input type="radio" name="attr_ranged_dualweapon_atk" value="-8" />
							</div>
						</div>
												
						<div class="sheet-cell sheet-col3-12">
							<div class="sheet-popup">Off-hand attack:</div><span class="sheet-tooltip"><strong>Off-hand Attack:</strong><br />-4 (no penalty w.<br />Ambidexterity)<br />B547</span>
						</div>
						<div class="sheet-cell sheet-col3-13">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_offhand" value="-4" />
							<input type="hidden" name="attr_ranged_offhand_penalty" value="0" />
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-ranged-modifiers">
						<div class="sheet-cell sheet-col5-0">
							<div class="sheet-popup">Target Size</div><span class="sheet-tooltip"><strong>Size Modifier Table</strong><br />
							<table>
								<thead>
									<tr><th>Size</th><th>Measure</th><th>Size</th><th>Measure</th></tr>
								</thead>
								<tbody>
									<tr><td>-15</td><td>1/5"</td><td>0</td><td>2 yd.</td></tr>
									<tr><td>-14</td><td>1/3"</td><td>1</td><td>3 yd.</td></tr>
									<tr><td>-13</td><td>1/2"</td><td>2</td><td>5 yd.</td></tr>
									<tr><td>-12</td><td>2/3"</td><td>3</td><td>7 yd.</td></tr>
									<tr><td>-11</td><td>1"</td><td>4</td><td>10 yd.</td></tr>
									<tr><td>-10</td><td>1.5"</td><td>5</td><td>15 yd.</td></tr>
									<tr><td>-9</td><td>2"</td><td>6</td><td>20 yd.</td></tr>
									<tr><td>-8</td><td>3"</td><td>7</td><td>30 yd.</td></tr>
									<tr><td>-7</td><td>5"</td><td>8</td><td>50 yd.</td></tr>
									<tr><td>-6</td><td>8"</td><td>9</td><td>70 yd.</td></tr>
									<tr><td>-5</td><td>1 ft.</td><td>10</td><td>100 yd.</td></tr>
									<tr><td>-4</td><td>1.5 ft.</td><td>11</td><td>100 yd.</td></tr>
									<tr><td>-3</td><td>2 ft.</td><td>12</td><td>100 yd.</td></tr>
									<tr><td>-2</td><td>1 yd.</td><td>13</td><td>100 yd.</td></tr>
									<tr><td>-1</td><td>1.5 yd.</td><td>14</td><td>100 yd.</td></tr>
								</tbody>
							</table></span>
						</div>
						<div class="sheet-cell sheet-col5-1">
							<div class="sheet-popup">Target Speed</div><span class="sheet-tooltip">Fast targets – includes anything that requires the High-Speed Movement rules (p. 394)<br />GM may rule that speed is important enough to consider. In that case,<br />add speed in yards/second (2 mph = 1 yard/second)<br />If the speed falls between two values, use the higher</span>
						</div>
						<div class="sheet-cell sheet-col5-2">
							<div class="sheet-popup">Target Range</div><span class="sheet-tooltip">Note that there is no modifier at ranges of 2 yards or less – shooting a close<br />target is no easier (and no harder) than attacking it in melee combat!<br />If the range falls between two values, use the higher</span>
						</div>
						<div class="sheet-cell sheet-col5-3">
							<div class="popup">Direction</div><span class="tooltip">
						   Ignore up/down for beam type weapons like lasers.</span>
						</div>
						<div class="sheet-cell sheet-col5-4">
							Elevation
						</div>
						<div class="sheet-cell sheet-col5-5">
							&nbsp;
						</div>
						<div class="sheet-cell sheet-col5-6">
							Target Cover
						</div>
						<input type="hidden" name="attr_rangedtargetsituation" value="0"/>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col5-0">
							<input type="number" step="1" value="0" name="attr_firing_size_mod" />
						</div>
						<div class="sheet-cell sheet-col5-1">
							<input type="number" step="1" value="0" min="0" name="attr_firing_speed_difference" />
						</div>
						<div class="sheet-cell sheet-col5-2">
							<input type="number" step="1" value="0" min="0" name="attr_firing_distance" />
						</div>
						<div class="sheet-cell sheet-col5-3">
    					    <select name="attr_firing_direction">
    					        <option value="linear">Normal</option>
    					        <option value="up">Elev. Up</option>
    					        <option value="dn">Elev. Down</option>
    					    </select>
    					</div>
    				    <div class="sheet-cell sheet-col5-4">
    					    <input type="number" step="1" value="0" min="0" name="attr_firing_up_dwn_distance" />
    					</div>
    					
    					    <input type="hidden" step="1" value="0" min="0" name="attr_firing_new_range" readonly="readonly" />
    					
    					
    					    <input type="hidden" value="0" name="attr_rangedspeedrangesize" readonly="readonly" />
    					
						<div class="sheet-cell sheet-col5-5">
					        <div class="sheet-popup"><button type="action" name="act_range_calc_reset" class="reset" />Reset</button></div><span class="sheet-tooltip">Reset the range calculator</span>
					    </div>
						<div class="sheet-cell sheet-col5-6">
							<div class="sheet-popup">Light Cover:</div><span class="sheet-tooltip"><strong>Shooting through light cover:</strong> -2<br />B408</span>
						</div>
						<div class="sheet-cell sheet-col5-7">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedlightcover" value="-2" />
						</div>
						<div class="sheet-cell sheet-col5-8">
							<div class="sheet-popup">Behind Someone:</div><span class="sheet-tooltip"><strong>Target behind someone else:</strong> -4 per intervening figure.<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col5-7">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_target_behind" value="1" />
						</div>
						<input type="hidden" name="attr_rangedbehindpenalty" value="0" />
						<input type="hidden" name="attr_ranged_target_behind" class="sheet-RBehindOnOff" />
						<div class="sheet-RBehindOn">
						<div class="sheet-cell sheet-col5-9">
							<input type="text" name="attr_ranged_number_behind" placeholder="0" />
						</div>
						</div>
						<div class="sheet-RBehindOff">
						<div class="sheet-cell sheet-col5-9 sheet-disable">
							<input type="text" name="attr_dummy" placeholder="0" disabled="disabled" />
						</div>
						</div>
						<div class="sheet-cell sheet-col5-10">
							<div class="sheet-popup">Posture:</div><span class="sheet-tooltip"><strong>Target Posture:</strong><br />Target crouching, kneeling, sitting, or lying down: an extra -2 to hit torso, groin, or legs<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col5-7">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedtargetposture" value="-2" />
						</div>
						<div class="sheet-cell sheet-col5-11">
							<div class="sheet-popup">Partial:</div><span class="sheet-tooltip"><strong>Target only partly exposed:</strong> -2<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col5-7">
							<input type="checkbox" class="sheet-boolean" name="attr_rangedtargetpartialcover" value="-2" />
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-ranged-modifiers">
						<div class="sheet-cell sheet-col6-1">
							Location
						</div>
						<div class="sheet-cell sheet-col6-2">
							Penalty<input type="hidden" name="attr_ranged_target_penalty"/>
						</div>
						<div class="sheet-cell sheet-col6-3">
							Target Restrictions<input type="hidden" name="attr_ranged_target_restr" />
						</div>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">	
						<div class="sheet-cell sheet-col6-1">
							<select name="attr_ranged_target">
								<option value="random">Random</option>
								<optgroup label="Body Locations">
									<optgroup label="3-4 Skull">
										<option value="skull">Skull (Front)</option>
										<option value="skullr">Skull (Back)</option>
									</optgroup>
									<optgroup label="5 Face">
										<option value="facef">Face (Front)</option>
										<option value="facer">Face (Rear)</option>
										<option value="Jaw">Jaw</option>
										<option value="Nose">Nose</option>
										<option value="Ear">Ear</option>
										<option value="Cheek">Cheek</option>
										<option value="Eye">Eye</option>
									</optgroup>
									<optgroup label="6-7 Leg (Right)">
										<option value="LegR">Leg</option>
										<option value="Shinr">Shin (Right)</option>
										<option value="Kneer">Knee (Right)</option>
										<option value="Thighr">Thigh (Right)</option>
										<option value="Veinlr">Vein/Artery, Leg (Right)</option>
									</optgroup>
									<optgroup label="8 Arm (Right)">
										<option value="ArmR">Arm</option>
										<option value="Forearmr">Forearm (Right)</option>
										<option value="Elbowr">Elbow (Right)</option>
										<option value="Upperr">Upper Arm (Right)</option>
										<option value="Shoulderr">Shoulder (Right)</option>
										<option value="Veinra">Vein/Artery, Arm (Right)</option>						
									</optgroup>
									<optgroup label="9-10 Chest">
										<option value="Chest" selected>Chest (Default)</option>
										<option value="Vitalsc">Vitals, Chest (Front)</option>
										<option value="Spinec">Spine, Chest (Rear)</option>
										<option value="Heart">Heart, Chest (Front)</option>
									</optgroup>
									<optgroup label="11 Abdomen">
										<option value="Abdomen">Abdomen</option>
										<option value="Vitalsa">Vitals, Abdomen </option>
										<option value="Digest">Digestive Tract</option>
										<option value="Pelvis">Pelvis</option>
										<option value="116">Groin</option>
									</optgroup>
									<optgroup label="12 Arm (Left)">
										<option value="ArmL">Arm (Left)</option>
										<option value="Forearml">Forearm (Left)</option>
										<option value="Elbowl">Elbow (Left)</option>
										<option value="Upperl">Upper Arm (Left)</option>
										<option value="Shoulderl">Shoulder (Left)</option>
										<option value="Veinla">Vein/Artery, Arm (Left)</option>
									</optgroup>
									<optgroup label="13-14 Leg (Left)">
										<option value="LegL">Leg (Left)</option>
										<option value="Shinl">Shin (Left)</option>
										<option value="Kneel">Knee (Left)</option>
										<option value="Thighl">Thigh (Left)</option>
										<option value="Veinll">Vein/Artery, Leg (Left)</option>
									</optgroup>
									<optgroup label="15 Hand">
										<option value="Hand">Hand</option>
										<option value="HJoint">Hand (Joint)</option>
									</optgroup>
									<optgroup label="16 Foot">
										<option value="Foot">Foot</option>
										<option value="FJoint">Foot (Joint)</option>
									</optgroup>
									<optgroup label="17-18 Neck">
										<option value="Neck">Neck</option>
										<option value="Veeinn">Vein/Artery, Neck</option>
										<option value="Spinen">Spine, Neck (Rear)</option>
									</optgroup>
								</optgroup>
								<optgroup label="Armor Chinks">
									<option value="ChinksT">Chinks (Torso)</option>
									<option value="ChinksO">Chinks (Other)</option>
								</optgroup>
								<optgroup label="Harsh Realism Armor Gaps">
									<option value="ArmpitR">Right Armpit</option>
									<option value="ArmpitL">Left Armpit</option>
									<option value="BoKR">Back of Right Knee</option>
									<option value="BoKL">Back of Left Knee</option>
									<option value="Eyeslit">Eyeslit(s)</option>
									<option value="Cod">Codpiece</option>
									<option value="InsideER">Inside Right Elbow</option>
									<option value="InsideEL">Inside Left Elbow</option>
									<option value="InsideTR">Inside Right Thigh</option>
									<option value="InsideTL">Inside Left Thigh</option>
									<option value="NeckAG">Neck Armor Gap</option>
									<option value="Palm">Open Palm</option>
								</optgroup>
								<optgroup label="Weapons and Equipment">
									<option value="ReachC">Reach C Weapon</option>
									<option value="Reach1">Reach 1 Weapon</option>
									<option value="Reach2">Reach 2 Weapon</option>
								</optgroup>
							</select>
						</div>
						<div class="sheet-cell sheet-col6-2 sheet-readonly">
							<span name="attr_ranged_target_penalty"></span>
						</div>
						<div class="sheet-cell sheet-col6-3 sheet-readonly">
							<span name="attr_ranged_target_restr"></span>
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-ranged-modifiers2">
						<div class="sheet-cell sheet-col6-0">
							Target Effects
							<input type="hidden" name="attr_ranged_target_effects" />
							<input type="hidden" name="attr_ranged_target_table" />
							<input type="hidden" name="attr_ranged_target_subtable" />
						</div>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers2">
						<div class="sheet-cell sheet-col6-0 sheet-readonly">
							<span name="attr_ranged_target_effects"></span>
						</div>
					</div>
					<div class="sheet-subheader sheet-subheader-ranged-modifiers">
						<div class="sheet-cell sheet-col2-0">
							Visibility
						</div>
						<input type="hidden" name="attr_ranged_vis_penalty" />
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col7-0">
							Cannot see <i>anything</i>:
						</div>
						<input type="hidden" name="attr_ranged_cannot_see_penalty" value="0" />
						<div class="sheet-cell sheet-col7-1">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_cannot_see_onoff" value="1" checked="false" />
						</div>
						<input type="hidden" name="attr_ranged_cannot_see_onoff" class="sheet-RNSOnOff" value="1"/>
						<div class="sheet-RNSOff"> <!-- Not checked -->
							<div class="sheet-cell sheet-col7-1">
								<input type="radio" name="dummy" disabled="disabled"/>
							</div>
							<div class="sheet-cell sheet-col7-2">
								<input type="radio" name="dummy" disabled="disabled"/>
							</div>
						</div>
						<div class="sheet-RNSOn"> <!-- Checked -->
							<div class="sheet-cell sheet-col7-1">
								<div class="sheet-popup"><input type="radio" name="attr_ranged_cannot_see" value="-10" checked="checked"/></div><span class="sheet-tooltip">Not used to being blind</span>
							</div>
							<div class="sheet-cell sheet-col7-2">
								<div class="sheet-popup"><input type="radio" name="attr_ranged_cannot_see" value="-6" /></div><span class="sheet-tooltip">Used to being blind</span>
							</div>
						</div>
						
						<div class="sheet-cell sheet-col7-3">
							Cannot see foe:
						</div>
						<input type="hidden" name="attr_ranged_cannot_foe_penalty" value="0" />
						<div class="sheet-cell sheet-col7-4">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_cannot_foe_onoff" value="1" />
						</div>
						<input type="hidden" name="attr_ranged_cannot_foe_onoff" class="sheet-RNoSeeFoeOnOff" value="1"/>
						<div class="sheet-RNoSeeFoeOff"> <!-- Not checked -->
							<div class="sheet-cell sheet-col7-4">
								<input type="radio" name="dummy" disabled="disabled"/>
							</div>
							<div class="sheet-cell sheet-col7-5">
								<input type="radio" name="dummy" disabled="disabled"/>
							</div>
						</div>
						<div class="sheet-RNoSeeFoeOn"> <!-- Checked -->
							<div class="sheet-cell sheet-col7-4">
								<div class="sheet-popup"><input type="radio" name="attr_ranged_cannot_foe" value="-6" checked="checked"/></div><span class="sheet-tooltip">You do not know<br />his location</span>
							</div>
							<div class="sheet-cell sheet-col7-5">
								<div class="sheet-popup"><input type="radio" name="attr_ranged_cannot_foe" value="-4" /></div><span class="sheet-tooltip">if you know his<br />location to within 1 yard*</span>
							</div>
						</div>
						<div class="sheet-cell sheet-col7-6">
							Partial darkness, fog, smoke, etc.:
						</div>
						<div class="sheet-cell sheet-col7-7">
							<select name="attr_ranged_partial_vis">
								<option value="0">0</option>
								<option value="-1">-1</option>
								<option value="-2">-2</option>
								<option value="-3">-3</option>
								<option value="-4">-4</option>
								<option value="-5">-5</option>
								<option value="-6">-6</option>
								<option value="-7">-7</option>
								<option value="-8">-8</option>
								<option value="-9">-9</option>
							</select>								
						</div>
						<div class="sheet-cell sheet-col7-8">
							Has Night Vision:
						</div>
						<div class="sheet-cell sheet-col7-9">
							<select name="attr_ranged_night_vision">
								<option value="0">0</option>
								<option value="1">1</option>
								<option value="2">2</option>
								<option value="3">3</option>
								<option value="4">4</option>
								<option value="5">5</option>
								<option value="6">6</option>
								<option value="7">7</option>
								<option value="8">8</option>
								<option value="9">9</option>
							</select>								
						</div>
					</div> <!-- End Row -->
					<div class="sheet-subheader sheet-subheader-mountedranged">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup">Attacking from Moving Vehicle or Mount</div><span class="sheet-tooltip">If weapon is not in a stabilized mount, the combined<br />bonus for Accuracy, Aim, bracing, and targeting<br />systems cannot exceed the vehicle’s SR.</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="checkbox" class="sheet-boolean" name="attr_mountedrangedcombat" value="1"/>
						</div>
						<input type="hidden" name="attr_rangedmountedcbtpenalty" />
						<input type="hidden" name="attr_rangedmountedstab" />
					</div>
					<input type="hidden" class="sheet-mountedon" name="attr_mountedrangedcombat" value="0" />
					<div class="sheet-mountedrangedcombat">
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col1-0">
							<div class="sheet-popup">Hnd/SR:</div><span class="sheet-tooltip"><strong>Handling/Stability Rating</strong><br />See Control Rolls (p. 466) for details.<br />Aiming on the move is particularly<br />difficult. The combined bonuses<br />from aiming (Accuracy, extra<br />turns of Aim, targeting systems,<br />and bracing) cannot exceed the SR<br />of a moving vehicle unless the sights or<br />mount are stabilized. B467</span>
						</div>
						<div class="sheet-cell sheet-col1-1">
							<input type="text" name="attr_ranged_hndsr" value="0" />
						</div>
						<div class="sheet-cell sheet-col1-2">
							<div class="sheet-popup">Attacking from:</div><span class="sheet-tooltip"><strong>Choose:</strong><br />B466</span>
						</div>
						<div class="sheet-cell sheet-col1-3">
							<select name="attr_ranged_vehicletype">
								<option value="air">Air</option>
								<option value="ground">Ground</option>
								<option value="space">Space</option>
								<option value="water">Water</option>
							</select>								
						</div>
						<div class="sheet-cell sheet-col1-4">
							<div class="sheet-popup">Weapon Mount:</div><span class="sheet-tooltip"><strong>Is the weapon mounted?</strong><br />If so what type mount?<br />Otherwise handheld.<br />B467</span>
						</div>
						<div class="sheet-cell sheet-col1-5">
							<select name="attr_weapon_mount">
								<option value="hh" selected>Handheld</option>
								<option value="am">Arm Mount</option> <!-- Stabilized -->
								<option value="cg">Carriage</option>
								<option value="eom">External Open Mount</option>
								<option value="esom">External Stabilized Open Mount</option> <!-- Stabilized -->
								<option value="fm">Fixed Mount</option>
								<option value="hp">Hardpoint</option>
								<option value="st">Stabilized Turret</option> <!-- Stabilized -->
								<option value="tt">Turret</option>
							</select>
							<input type="hidden" name="attr_weaponmountpenalty" />
						</div>
						<div class="sheet-cell sheet-col1-6">
							Terrain:
						</div>
						<div class="sheet-cell sheet-col1-7">
							<select name="attr_terrain">
								<option value="good">Good Road</option>
								<option value="bad">Bad Road</option>
								<option value="off">Off Road</option>
								<option value="calm">Calm Water</option>
								<option value="rough">Rough Water</option>
							</select>						
						</div>
					</div>
					<div class="sheet-row sheet-row-ranged-modifiers">
						<div class="sheet-cell sheet-col2-0">
							<div class="sheet-popup">Exposed rider:</div><span class="sheet-tooltip"><strong>Exposed rider:</strong><br />hanging on side of  vehicle/mount<br />and shooting over/under it: -6<br />B469</span>
						</div>
						<div class="sheet-cell sheet-col2-1">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_exposedrider" value="-6" />
						</div>
						<div class="sheet-cell sheet-col2-2">
							<div class="sheet-popup">Rider Turned:</div><span class="sheet-tooltip">Turning in exposed saddle/seat of<br />vehicle/mount to fire at foe behind:<br />-4<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col2-3">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_turnedrider" value="-4" />
						</div>
						<div class="sheet-cell sheet-col2-4">
							<div class="sheet-popup">Vehicle/mount dodged:</div><span class="sheet-tooltip"><strong>Vehicle/mount dodged</strong><br />last turn and you’re not <br />operator/rider: -2 or -4 if flying<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col2-5">
							<input type="checkbox" class="sheet-boolean" name="attr_ranged_mountdodged" value="1" />
							<input type="hidden" name="attr_rangedmountdodgepenalty" />
						</div>
						<input type="hidden" name="attr_ranged_mountdodged" class="sheet-mountdodged"/> 
						<div class="sheet-mountdodge"> <!-- Checked -->
						<div class="sheet-cell sheet-col2-6">
							Other
						</div>
						<div class="sheet-cell sheet-col2-7">
							<input type="radio" name="attr_ranged_mountdodgedgroundair" value="-2" />
						</div>
						<div class="sheet-cell sheet-col2-7">
							<input type="radio" name="attr_ranged_mountdodgedgroundair" value="-4" />
						</div>
						<div class="sheet-cell sheet-col2-8">
							Air
						</div>
						</div>
						<div class="sheet-mountnododge"> <!-- Not Checked -->
						<div class="sheet-cell sheet-col2-6">
							Other
						</div>
						<div class="sheet-cell sheet-col2-7">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						<div class="sheet-cell sheet-col2-7">
							<input type="radio" name="dummy" disabled="disabled"/>
						</div>
						<div class="sheet-cell sheet-col2-8">
							Air
						</div>
						</div>
						<div class="sheet-cell sheet-col2-9">
							<div class="sheet-popup">Failed control roll:</div><span class="sheet-tooltip"><strong>Vehicle/mount failed control roll</strong><br />penalty equal to margin of failure<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col2-10">
							<input type="text" name="attr_ranged_vehiclefailedctrl" value="0"/>
						</div>
						<div class="sheet-cell sheet-col2-11">
							<div class="sheet-popup">Targeting System:</div><span class="sheet-tooltip"><strong>Vehicular targeting system:</strong><br />+1 to +3 if shooter took a<br />turn to Aim.<br />B522</span>
						</div>
						<div class="sheet-cell sheet-col2-12">
							<select name="attr_ranged_vehtgtsys">
								<option value="0" selected>0</option>
								<option value="1">1</option>
								<option value="2">2</option>
								<option value="3">3</option>
							</select>
						</div>
					</div>
					</div> 
				</div> <!-- END TABLE -->
			</div> <!-- END BOX -->
		</div> <!-- END RANGED SUBTAB -->

		<!-- _____ _____ COMBAT TOOLS SUB TAB _____ _____ -->
		<div class="sheet-section sheet-section-combattools">
			<div class="sheet-box sheet-box-thrown">
				<div class="sheet-table">
					<div class="sheet-header sheet-header-thrown">
						<div class="sheet-cell sheet-col0"><div class="sheet-popup">Throwing Distance and Damage Calculator</div><span class="sheet-tooltip">Use this to calcualte distance and damage of thrown objects.<br />Transfer the stats to the ranged combat tab to use in an attack.</span>
						</div>
					</div>
					<div class="sheet-header sheet-header-thrown">
						<div class="sheet-cell sheet-col1"><div class="sheet-popup">Wgt</div>
							<span class="sheet-tooltip"><strong>Weight:</strong> the object weight in pounds</span>
						</div>
						<div class="sheet-cell sheet-col2">
							<div class="sheet-popup">ST</div>
							<div class="sheet-tooltip">
								Based on Striking ST<br />
								<i>Note:</i> future versions will add ability to choose ST source or enter ST.
							</div>
						</div>
						<div class="sheet-cell sheet-col3">
							<div class="sheet-popup">MOD</div>
							<div class="sheet-tooltip">
								Strength Modifier to distance only<br />
								Throwing or Throwing Art at DX Level = +1 ST<br />
								Throwing or Throwing Art at DX+1 Level = +2 ST<br />	
							</div>
						</div>
						<div class="sheet-cell sheet-col4">
							<div class="sheet-popup">SUPER</div>
							<div class="sheet-tooltip">
								Super Throw Level<br />
								Each level of Super Throw, double range.<br />
								Each level of Super Throw increases damage by +2 per die.
							</div>
						</div>
						<div class="sheet-cell sheet-col5">
							<div class="sheet-popup">Damage</div>
							<div class="sheet-tooltip">
								Final damage based on ST, super throw, 
								and damage modifier.
							</div>
						</div>
						<div class="sheet-cell sheet-col3">
							<div class="sheet-popup">Mod</div>
							<div class="sheet-tooltip">
								Bonus or penalty per die<br />
								Throwing Art at DX Level = +1 per die<br />
								Throwing Art at DX+1 Level = +2 per die<br />
							</div>
						</div>
						<div class="sheet-cell sheet-col6">
							<div class="sheet-popup">Type</div>
							<span class="sheet-tooltip">
								<table>
									<thead>
										<tr>
											<th>Abbr</th>
											<th>Name</th>
										</tr>
									</thead>
									<tbody>
										<tr><td>cut</td> <td>Cutting</td></tr>
										<tr><td>imp</td> <td>Impaling</td></tr>
										<tr><td>cr</td>  <td>Crushing</td></tr>
										<tr><td>pi-</td> <td>Small Piercing</td></tr>
										<tr><td>pi</td>  <td>Piercing</td></tr>
										<tr><td>pi+</td> <td>Large Piercing</td></tr>
										<tr><td>pi++</td><td>Huge Piercing</td></tr>
										<tr><td>aff</td> <td>Affliction</td></tr>
										<tr><td>burn</td><td>Burning</td></tr>
										<tr><td>cor</td> <td>Corrosion</td></tr>
										<tr><td>fat</td> <td>Fatigue</td></tr>
										<tr><td>tox</td> <td>Toxic</td></tr>
										<tr><td>spec</td><td>Special</td></tr>
									</tbody>
								</table>
							</span>
						</div>					
						<div class="sheet-cell sheet-col7">
							<div class="sheet-popup">Range</div>
							<span class="sheet-tooltip">
								See GURPS Campaigns Page 355 for formula
							</span>
						</div>
					</div> <!-- .sheet-header -->
					<div class="sheet-row sheet-row-thrown">
						<div class="sheet-cell sheet-col1">
							<input type="number" step="1" value="1" min="1" name="attr_thrown_object_weight" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="text" name="attr_thrown_object_strength" readonly="readonly" value="10" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_thrown_object_strength_mod" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="number" name="attr_super_throw_level" value="0" step="1" />
						</div>
						<div class="sheet-cell sheet-col5">
							<input type="text" name="attr_thrown_object_damage" readonly="readonly" value="@{thrust}" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" step="1" name="attr_thrown_object_damage_mod" value="0" />
						</div>
						<div class="sheet-cell sheet-col6">
							<select name="attr_thrown_object_damage_type">
								<option value="cut">cut</option>
								<option value="imp">imp</option>
								<option value="cr">cr</option>
								<option value="pi-">pi-</option>
								<option value="pi">pi</option>
								<option value="pi+">pi+</option>
								<option value="pi++">pi++</option>
								<option value="burn">burn</option>
								<option value="butb">bu (tb)</option>
								<option value="cor">cor</option>
								<option value="fat">fat</option>
								<option value="aff">aff</option>
								<option value="spec">spec</option>
								<option value="tox">tox</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col7">
							<input type="text" name="attr_thrown_object_range" readonly="readonly" value="10" />
						</div>
						<div class="sheet-cell sheet-col8">
							<button name="roll_dmg_thrown" type="roll" value="&{template:GURPSGMROLLING} {{CF=Throwing Damage}} {{damage=[[@{thrown_object_damage}]]}}"></button>
						</div>
					</div> <!-- .sheet-row -->
				</div> <!-- .sheet-table -->
			</div> <!-- .sheet-box .sheet-ranged-attacks -->
			<div class="sheet-box sheet-box-fall">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-fall">
					<div class="sheet-cell sheet-col0"><div class="sheet-popup">Falling and Collision Calculator</div><span class="sheet-tooltip">Use this to calculate damage from falling and collisions.</span>
					</div>
				</div>
				<div class="sheet-header sheet-header-fall">
					<div class="sheet-cell sheet-col1">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col2">
						<div class="sheet-popup">Yds</div>
						<span class="sheet-tooltip">
						   Yards fallen
						</span>
					</div>
					<div class="sheet-cell sheet-col3">
						<div class="sheet-popup">G's</div>
						<span class="sheet-tooltip">
						   Gravity
						</span>
					</div>
					<div class="sheet-cell sheet-col4">
						<div class="sheet-popup">Atm.</div>
						<span class="sheet-tooltip">
						   Atmosphere
						</span>
					</div>
					<div class="sheet-cell sheet-col5">
						<div class="sheet-popup">Vel.</div>
						<span class="sheet-tooltip">Velocity</span>
					</div>
					<div class="sheet-cell sheet-col6">
						<div class="sheet-popup">HP</div>
						<span class="sheet-tooltip">
						   Hit Points<br>
						   If hitting immovable object, use HP*2<br>
						</span>
					</div>
					<div class="sheet-cell sheet-col7">
						Damage
					</div>
					<div class="sheet-cell sheet-col8">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col9">
						&nbsp;
					</div>
				</div>
				<div class="sheet-row sheet-row-fall">
					<div class="sheet-cell sheet-col1">
						Falling
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="number" step="1" value="1" min="1" name="attr_yards_fallen" />
					</div>
					<div class="sheet-cell sheet-col3">
						<input type="number" value="1" min="0" name="attr_gravity" />
					</div>
					<div class="sheet-cell sheet-col4">
						<input type="number" value="1" min="0" name="attr_atmosphere" />
					</div>
					<div class="sheet-cell sheet-col5">
						<input type="number" value="5" readonly="readonly" name="attr_falling_velocity" />
					</div>
					<div class="sheet-cell sheet-col6">
						<input type="number" step="1" value="10" min="1" name="attr_falling_hit_points" />
					</div>
					<div class="sheet-cell sheet-col7">
						<input type="text" value="1d6-2" name="attr_falling_damage" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col8">
						<button name="roll_dmg_falling" type="roll" value="&{template:GURPSFALLCOLL} {{CF=Falling Damage}} {{damage=[[@{falling_damage}]]}}"></button>
					</div>
					<div class="sheet-cell sheet-col9">
						<button type="action" name="act_falling_reset" class="reset" />Reset</button>
					</div>
				</div>
				<div class="sheet-row sheet-row-fall">
					<div class="sheet-cell sheet-col1">
						Collision
					</div>
					<div class="sheet-cell sheet-col2">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col3">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col4">
						&nbsp;
					</div>
					<div class="sheet-cell sheet-col5">
						<input type="number" value="1" step="1" min="1" name="attr_collision_velocity" />
					</div>
					<div class="sheet-cell sheet-col6">
						<input type="number" step="1" value="10" min="1" name="attr_collision_hit_points" />
					</div>
					<div class="sheet-cell sheet-col7">
						<input type="text" value="1d6-3" name="attr_collision_damage" readonly="readonly" />
					</div>
					<div class="sheet-cell sheet-col8">
						<button name="roll_dmg_collision" type="roll" value="&{template:GURPSFALLCOLL} {{CF=Collision Damage}} {{damage=[[@{collision_damage}]]}}"></button>
					</div>
					<div class="sheet-cell sheet-col9">
						<button type="action" name="act_collision_reset" class="reset" />Reset</button>
					</div>
				</div>
			</div>
		</div>
		</div>
		
		
	</div> <!--______________ END TAB 4________________-->
	<!-- ===== ===== ===== ===== ITEMS TAB ===== ===== ===== ===== -->
	<div class="sheet-tab5">
		<!-- _____ _____ WEALTH BOX _____ _____ -->
		<div class="sheet-box sheet-items">
			<div class="sheet-table">
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0">#</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">A</div>
						<span class="sheet-tooltip">
							Loadout A
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">B</div>
						<span class="sheet-tooltip">
							Loadout B
						</span>
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">C</div>
						<span class="sheet-tooltip">
							Loadout C
						</span>
					</div>
					<div class="sheet-cell sheet-col2">Equipment (<span name="attr_total_weight_x"></span> lb; $<span name="attr_total_cost_x"></span>)</div>
					<div class="sheet-cell sheet-col3">$</div>
					<div class="sheet-cell sheet-col3">W</div>
					<div class="sheet-cell sheet-col3">∑ $</div>
					<div class="sheet-cell sheet-col3">∑ W</div>
					<div class="sheet-cell sheet-col4">Ref</div>
				</div>
				<fieldset class="repeating_item">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-items">
						<div class="sheet-cell sheet-col0">
							<input type="number" name="attr_count" value="1" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input class="sheet-boolean" type="checkbox" name="attr_carried_a" value="1" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input class="sheet-boolean" type="checkbox" name="attr_carried_b" value="1" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input class="sheet-boolean" type="checkbox" name="attr_carried_c" value="1" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="text" name="attr_name" placeholder="Item Name">
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_cost" min="0.00"value="0.00" step="0.01" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_weight" min="0.00" value="0.00" step="0.01" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_costtotal" min="0.00" value="0.00" readonly="readonly" />
						</div>
						<div class="sheet-hidden">
							<input type="number" name="attr_costtotal_a" value="0.00" readonly="readonly" />
							<input type="number" name="attr_costtotal_b" value="0.00" readonly="readonly" />
							<input type="number" name="attr_costtotal_c" value="0.00" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_weighttotal" min="0.00" step="0.01" value="0.00" readonly="readonly" />
						</div>
						<div class="sheet-hidden">
							<input type="number" name="attr_weighttotal_a" value="0" readonly="readonly" />
							<input type="number" name="attr_weighttotal_b" value="0" readonly="readonly" />
							<input type="number" name="attr_weighttotal_c" value="0" readonly="readonly" />
						</div>
						<div class="sheet-cell sheet-col4"><input type="text" name="attr_item_ref" placeholder="pg." /></div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" checked="checked" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset> <!-- .repeating_item -->
			</div> <!-- .sheet-table -->
		</div>
		<div class="sheet-box sheet-loadouts">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-loadouts">
					<div class="sheet-cell sheet-col0"><input type="radio" value="1" name="attr_loadoutchoice" checked="checked" class="sheet-loadoutchoice" />
					</div>
					<div class="sheet-cell sheet-col1">Loadout A</div>
					<div class="sheet-cell sheet-col0"><input type="radio" value="2" name="attr_loadoutchoice" class="sheet-loadoutchoice" /></div>
					<div class="sheet-cell sheet-col1">Loadout B</div>
					<div class="sheet-cell sheet-col0"><input type="radio" value="3" name="attr_loadoutchoice" class="sheet-loadoutchoice"></div>
					<div class="sheet-cell sheet-col1">Loadout C</div>
				</div>
				<div class="sheet-row sheet-loadout-row">
					<div class="sheet-cell sheet-col0">Descr:</div>
					<div class="sheet-cell sheet-col1"><input type="text" name="attr_loadouta_descr" title="@{loadouta_descr}" placeholder="Loadout Description" /></div>
					<div class="sheet-cell sheet-col2">Descr:</div>
					<div class="sheet-cell sheet-col1"><input type="text" name="attr_loadoutb_descr" title="@{loadoutb_descr}" placeholder="Loadout Description" /></div>
					<div class="sheet-cell sheet-col3">Descr:</div>
					<div class="sheet-cell sheet-col1"><input type="text" name="attr_loadoutc_descr" title="@{loadoutc_descr}" placeholder="Loadout Description" /></div>
				</div>
				<div class="sheet-row sheet-loadout-row">
					<div class="sheet-cell sheet-col0">Value:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">$<span name="attr_total_cost_a"></span><input type="hidden" name="attr_total_cost_a" value="0" /></div>
					<div class="sheet-cell sheet-col2">Value:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">$<span name="attr_total_cost_b"></span><input type="hidden" name="attr_total_cost_b" value="0" /></div>
					<div class="sheet-cell sheet-col3">Value:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly">$<span name="attr_total_cost_c"></span><input type="hidden" name="attr_total_cost_c" value="0" /></div>
				</div>
				<div class="sheet-row sheet-loadout-row">
					<div class="sheet-cell sheet-col0">Weight:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_total_weight_a"></span><input type="hidden" name="attr_total_weight_a" value="0" /> lb</div>
					<div class="sheet-cell sheet-col2">Weight:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_total_weight_b"></span><input type="hidden" name="attr_total_weight_b" value="0" /> lb</div>
					<div class="sheet-cell sheet-col3">Weight:</div>
					<div class="sheet-cell sheet-col1 sheet-readonly"><span name="attr_total_weight_c"></span><input type="hidden" name="attr_total_weight_c" value="0" /> lb</div>
				</div>
				<div class="sheet-hidden">
					<div class="sheet-cell sheet-col0">Possessions Total Value:
					</div>
					<div class="sheet-cell sheet-col1"><input type="hidden" name="attr_total_cost_x" value="0" /></div>
					<div class="sheet-cell sheet-col2">Possessions Total Weight:
					</div>
					<div class="sheet-cell sheet-col3"><input type="hidden" name="attr_total_weight_x" value="0" /></div>
				</div>
			</div>
		</div>
				<!-- _____ _____ QUICK INVENTORY BOX _____ _____ -->
		<div class="sheet-box sheet-quick-inventory">
			<div class="sheet-title">Quick Inventory</div>
			<div class="sheet-row sheet-quickinv">
				<textarea class="sheet-quickinventory" name="attr_quick_inventory"></textarea>
			</div>
		</div>
	</div> <!-- .sheet-tab5 -->
	<!-- ===== ===== ===== ===== GRIMOIRE TAB ===== ===== ===== ===== -->
	<div class="sheet-tab6">
		<div class="sheet-box sheet-energy">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-energy">
					<div class="sheet-cell sheet-col0">
						Energy Reserve
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">Max</div>
						<span class="sheet-tooltip"><strong>Energy Reserve </strong><br />Rules can vary depending on what<br />magic or energy system you are using.</span>
					</div>
					<div class="sheet-cell sheet-col2">
						<div class="sheet-popup">Current</div>
						<span class="sheet-tooltip"><strong>Current Energy Reserve</strong><br />Rules can vary.</span>
					</div>
					<div class="sheet-cell sheet-col3">
						% Remain
					</div>
				</div>
				<fieldset class="repeating_grimoireenergy">
					<div class="sheet-row sheet-row-energy">
						<div class="sheet-cell sheet-col0">
							<input type="text" name="attr_er_name" placeholder="Energy Reserve Name" value="" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="number" name="attr_energy_points_max" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_energy_points" value="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="text" name="attr_percent" placeholder="0" value="0" readonly="readonly"/>
						</div>
					</div>
				</fieldset>
			</div>
		</div>
		<div class="sheet-box sheet-spells">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-spells">
					<div class="sheet-cell sheet-col0">Spells</div>
					<div class="sheet-cell sheet-col1">Class</div>
					<div class="sheet-cell sheet-col2">Mana Cost</div>
					<div class="sheet-cell sheet-col3">Time</div>
					<div class="sheet-cell sheet-col4">SL</div>
					<div class="sheet-cell sheet-col5">Diff</div>
					<div class="sheet-cell sheet-col6">Pts</div>
					<div class="sheet-cell sheet-col7">Ref</div>
				</div> <!-- .sheet-header -->
				<fieldset class="repeating_spells">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-spells">
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_spellroll" value="!spell @{character_id} @{rowid} [[@{level} + @{modifier}]] [[@{notes_onoff}]]"></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_name" placeholder="Spell Name"  style="font-weight:bold;"/>
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="text" name="attr_class" placeholder="Class"  style="font-weight:bold;"/>
							<input type="text" name="attr_college" placeholder="College" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="text" name="attr_cost" placeholder="Cast" value=""  style="font-weight:bold;"/>
							<input type="text" name="attr_maintain" placeholder="Maintain" value="" />
						</div>
						<div class="sheet-cell sheet-col4">
							<input type="text" name="attr_casttime" placeholder="Casting Time" value=""  style="font-weight:bold;"/>
							<input type="text" name="attr_duration" placeholder="Duration" value="" />
						</div>
						<div class="sheet-cell sheet-col5">
							<input type="text" name="attr_level" disabled="disabled" value="@{spell_base} + @{difficulty} + @{spell_bonus} + (floor((@{points} * 0.25) + 2) * ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) + @{points} * abs( ceil( ( ( @{points} - 2 ) + abs( @{points} - 2) ) / 256 ) - 1 ))" style="font-weight:bold;"/>							
						</div>
						<div class="sheet-cell sheet-col6">
							<select name="attr_difficulty">
								<option value="-3">H</option>
								<option value="-4">VH</option>
							</select>
						</div>
						<div class="sheet-cell sheet-col7">
							<input type="number" style="font-weight:bold;"name="attr_points" value="0" />
						</div>
						<div class="sheet-cell sheet-col8">
							<input type="text" name="attr_ref" placeholder="Page"  style="font-weight:bold;"/>
						</div>
					</div> <!-- .sheet-row -->
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" checked="checked" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset> <!-- .repeating_spells -->
			</div> <!-- .sheet-table -->
		</div> <!-- .sheet-box .sheet-spells -->
	</div> <!-- .sheet-tab6 END-->
	<!-- ===== ===== ===== ===== RITUALS TAB ===== ===== ===== ===== -->
	<div class="sheet-tab7">
		<div class="sheet-box sheet-energy">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-energy">
					<div class="sheet-cell sheet-col0">
						Energy Reserve
					</div>
					<div class="sheet-cell sheet-col1">
						<div class="sheet-popup">Max</div>
						<span class="sheet-tooltip"><strong>Energy Reserve </strong><br />Rules can vary depending on what<br />magic or energy system you are using.</span>
					</div>
					<div class="sheet-cell sheet-col2">
						<div class="sheet-popup">Current</div>
						<span class="sheet-tooltip"><strong>Current Energy Reserve</strong><br />Rules can vary.</span>
					</div>
					<div class="sheet-cell sheet-col3">
						% Remain
					</div>
				</div>
				<fieldset class="repeating_ritualenergy">
					<div class="sheet-row sheet-row-energy">
						<div class="sheet-cell sheet-col0">
							<input type="text" name="attr_er_name" placeholder="Energy Reserve Name" value="" />
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="number" name="attr_energy_points_max" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_energy_points" value="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="text" name="attr_percent" placeholder="0" value="0" readonly="readonly"/>
						</div>
					</div>
				</fieldset>
			</div>
		</div>
		<div class='sheet-box sheet-rituals'>
			<div class="sheet-table">
				<div class="sheet-header sheet-ritualheader">
					<div class="sheet-cell sheet-col0">Ritual Name</div>
					<div class="sheet-cell sheet-col1">Energy</div>
					<div class="sheet-cell sheet-col2">Skill</div>
				</div>
				<fieldset class="repeating_rituals">
					<input class="sheet-toggle" type="checkbox" />
					<span class="sheet-checkbox"></span>
					<div class="sheet-row sheet-row-rituals">
						<input type="hidden" name="attr_rowid" value="" />
						<div class="sheet-cell sheet-col0">
							<button class="sheet-roll-button" type="roll" name="attr_ritualroll" value="!ritual @{character_id} @{rowid} [[@{skill} + @{modifier}]] [[@{effectsOnOff}]] [[@{inherentOnOff}]] [[@{greaterEffectsOnOff}]] [[@{ritualDescrOnOff}]] [[@{typicalOnOff}]] [[@{notes_onoff}]]"></button>
						</div>
						<div class="sheet-cell sheet-col1">
							<input type="text" name="attr_ritualname" placeholder="Ritual Name" />
						</div>
						<div class="sheet-cell sheet-col2">
							<input type="number" name="attr_ritualenergy" value="0" placeholder="0" />
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_skill" value="10" placeholder="0" />
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_effectsOnOff" value="1" /></div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col2">
							Spell Effects:
						</div>
						<div class="sheet-cell sheet-col6">
							<textarea name="attr_spelleffects" placeholder="Spell Effects" value="" ></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_inherentOnOff" value="1" /></div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col2">
							Inherent Modifiers:
						</div>
						<div class="sheet-cell sheet-col6">
							<textarea name="attr_inherentmod" placeholder="Inherent Modifiers" value="" ></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_greaterEffectsOnOff" value="1" /></div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col2">
							Greater Effects:
						</div>
						<div class="sheet-cell sheet-col3">
							<input type="number" name="attr_greatereffects" placeholder="0" value="0" />
						</div>
						<div class="sheet-cell sheet-col4">
							x
						</div>
						<div class="sheet-cell sheet-col5">
							<input type="number" name="attr_greatereffectsmultiplier" value="0" readonly="readonly" />
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_ritualDescrOnOff" value="1" /></div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col2">
							Ritual Description:
						</div>
						<div class="sheet-cell sheet-col6">
							<textarea name="attr_ritualdescr" placeholder="Ritual Description"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_typicalOnOff" value="1" /></div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col2">
							Typical Casting:
						</div>
						<div class="sheet-cell sheet-col6">
							<textarea class="sheet-ritualcast" name="attr_ritualcasting" placeholder="Typical Casting"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details">
						<div class="sheet-cell sheet-col0">
							<div class="sheet-popup"><input type="checkbox" class="sheet-boolean" name="attr_notes_onoff" value="1" />
							</div><span class="sheet-tooltip">Check to display notes in rolls</span>
						</div>
						<div class="sheet-cell sheet-col1">
							<textarea name="attr_notes" placeholder="notes"></textarea>
						</div>
					</div>
					<div class="sheet-row sheet-row-details-rowid">
						<div class="sheet-cell sheet-col2">
							RowID For Macros:
						</div>
						<div class="sheet-cell sheet-col3">
							<input name="attr_rowid" value="" readonly="readonly" />
						</div>
					</div>
				</fieldset>
			</div>
		</div> <!-- ===== END SHEET-BOX SHEET-RITUALS ===== -->
	</div>
	<!-- ===== ===== ===== ===== NOTES TAB ===== ===== ===== ===== -->
	<div class="sheet-tab8">
		<div class="sheet-box sheet-notes">
			<textarea name="attr_mainnotes" placeholder="Notes:"></textarea>
		</div>
	</div>
	<!-- ===== ===== ===== ===== OPTIONS TAB ===== ===== ===== ===== -->
	<div class="sheet-tab0">
		<div class="sheet-box sheet-charactersheet-settings">
			<div class="sheet-header sheet-header-charactersheet-settings">
				<div class="sheet-cell sheet-col0">Character Sheet Settings
				</div>
			</div>
		</div>
		
		<div class="sheet-box sheet-experience">
			<div class="sheet-header sheet-header-experience">
				<div class="sheet-cell sheet-col0">Character Points</div>
			</div>
			<div class="sheet-row sheet-row-experience">
				<div class="sheet-cell sheet-col0 sheet-label">Starting Pts:</div>
				<div class="sheet-cell sheet-col1"><input type="number" name="attr_base_points" value="0" /></div>
			</div>
			<div class="sheet-header sheet-header-experience">
				<div class="sheet-cell sheet-col0">Experience Points</div>
			</div>
			<div class="sheet-subheader sheet-subheader-experience">
				<div class="sheet-cell sheet-col0">Session Date</div>
				<div class="sheet-cell sheet-col1">Points</div>
			</div>
			<fieldset class="repeating_experience">
				<div class="sheet-row sheet-row-experience">
					<div class="sheet-cell sheet-col0"><input type="text" name="attr_session_date" /></div>
					<div class="sheet-cell sheet-col1"><input type="number" name="attr_points" value="0" /></div>
				</div>
			</fieldset>
			<div class="sheet-subheader sheet-subheader-experience">
				<div class="sheet-cell sheet-col0">Total EXP</div>
				<div class="sheet-cell sheet-col1"><input type="number" name="attr_ex_points" readonly="readonly" value="0" /></div>
			</div>
			<div class="sheet-subheader sheet-subheader-experience">
				<div class="sheet-cell sheet-col0">Total Points</div>
				<div class="sheet-cell sheet-col1"><input type="number" name="attr_total_points" readonly="readonly" value="0" /></div>
			</div>
		</div>
		<hr />
		<div class="sheet-box sheet-campaign-settings">
			<div class="sheet-table">
				<div class="sheet-header sheet-header-campaign-settings">
					<div class="sheet=cell sheet-col0">Camapign Settings</div>
				</div>
				<div class="sheet-row sheet-row-tech_level">
					<div class="sheet-cell sheet-col0">Campaign Base Tech Level:
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_base_tl" value="0" />
					</div>
					<div class="sheet-cell sheet-col2">
						<input type="text" name="attr_tl_exceptions" />
					</div>
				</div>
			</div>
		</div>
		<!-- _____ _____ SPELLS SETUP _____ _____ -->
		<div class="sheet-box sheet-magic">
			<div class="sheet-table">
				<div class="sheet-header">
					<div class="sheet-cell sheet-col0"> Spells Setup </div>
				</div>
				<div class="sheet-row sheet-row-magic">
					<div class="sheet-cell sheet-col0">Spells based on:</div>
					<div class="sheet-cell sheet-col1">
						<select name="attr_spell_base">
							<option value="@{strength}">ST</option>
							<option value="@{dexterity}">DX</option>
							<option value="@{intelligence}" selected="selected">IQ</option>
							<option value="@{health}">HT</option>
							<option value="@{willpower}">Will</option>
							<option value="@{perception}">Per</option>
							<option value="10">10</option>
						</select>
					</div>
				</div>
				<div class="sheet-row sheet-row-magic">
					<div class="sheet-cell sheet-col0"> Magery/PI/Bonus Level:
					</div>
					<div class="sheet-cell sheet-col1">
						<input type="number" name="attr_spell_bonus" value="0" />
					</div>
				</div>
			</div>
		</div>
		<hr />
		<div class="sheet-box sheet-settings">
			<div class="sheet-header sheet-header-settings">
				<div class="sheet-cell sheet-col0">Gameplay Settings</div>
			</div>
		</div>
		<div class="sheet-box">
			<input type="radio" name="attr_modifier" value="0" checked="checked" />
			<span class="sheet-popup">No Modifier Prompt</span>
			<span class="sheet-tooltip">
				Rolls will be made immediately with no prompt.
			</span>
			<br /><input type="radio" name="attr_modifier" value="?{Modifier|0}" />
			<span class="sheet-popup">Single Modifier Prompt</span>
			<span class="sheet-tooltip">
				Ask for a bonus or penalty to be added to dice rolls.
				<br />
				This will not affect damage rolls.
			</span>
			<br />
			<input type="radio" name="attr_modifier" value="?{Modifier|0} + ?{Shock|0} + ?{Reeling or Staggered|0} + ?{Off-Hand|0} + ?{Familiarity|0}" />
			<span class="sheet-popup">Extended Modifier Prompts</span>
			<span class="sheet-tooltip">
				Instead of a single modifier, rolls will ask for a series of
				modifiers,<br />
				to remind you about potential bonuses/penalties.
				<br />
				This will not affect damage rolls.
			</span>
		</div>
		<div class="sheet-hidden">
			<div class="sheet-box">
				<input type="radio" name="attr_active_defense_modifier_prompt" value="0" checked="checked" />
				<span class="sheet-popup">No Active Defense Modifier Prompt no modifier</span>
				<span class="sheet-tooltip">
					Rolls will be made immediately with no Active Defense Modifier prompt.
				</span>
				<br /><input type="radio" name="attr_active_defense_modifier_prompt" value="?{Modifier|@{total_ad_mod}}" />
				<span class="sheet-popup">Active Defense Modifier Prompt</span>
				<span class="sheet-tooltip">
					Ask for current Active Defense bonus or penalty to be added to dice rolls.
					<br />
					This will not affect damage rolls.
				</span>
				<br />
				<input type="radio" name="attr_active_defense_modifier_prompt" value="@{total_ad_mod}" />
				<span class="sheet-popup">Automatically add modifier</span>
				<span class="sheet-tooltip">
					Instead of a prompt, rolls will automatically add
					modifiers,<br />

					This will not affect damage rolls.
				</span>
			</div>
		</div>
			<div class="sheet-box">
				<input type="radio" name="attr_whispermode" value="public" checked="checked" />
				<span class="sheet-popup">Public Rolls</span>
				<span class="sheet-tooltip">
					All players will be able to see<br />
					your skill level, roll and results.
				</span>
				<br />
				<input type="radio" name="attr_whispermode" value="secret" />
				<span class="sheet-popup">Private Rolls</span>
				<span class="sheet-tooltip">
					Only you and the GM will see your rolls.
				</span>
				<br />
				<input type="radio" name="attr_whispermode" value="gm" />
				<span class="sheet-popup">GM Only Rolls</span>
				<span class="sheet-tooltip">
					Only the GM will see your rolls.
				</span>
			</div>
		<div class="sheet-hidden">
			<div class="sheet-box">
				<div>Fear Checks</div>
				<input type="radio" name="attr_fearmode" value="1" checked="checked" />
				<span class="sheet-popup">Public Rolls</span>
				<span class="sheet-tooltip">
					All players will be able to see<br />
					your skill level, roll and results.
				</span>
				<br />
				<input type="radio" name="attr_fearmode" value="2" />
				<span class="sheet-popup">Private Rolls</span>
				<span class="sheet-tooltip">
					Only you and the GM will see your rolls.
				</span>
				<br />
				<input type="radio" name="attr_fearmode" value="3" />
				<span class="sheet-popup">GM Only Rolls</span>
				<span class="sheet-tooltip">
					Only the GM will see your rolls.
				</span>
			</div>
			<div class="sheet-box">
				<input type="radio" name="attr_critroll_auto" value="on" checked="checked" />
				<span class="sheet-popup">Automatic Crit Rolls: On</span>
				<span class="sheet-tooltip">
					Crit rolls automatically rolled.
				</span>
				<br />
				<input type="radio" name="attr_critroll_auto" value="off" checked="checked" />
				<span class="sheet-popup">Automatic Crit Rolls: Off</span>
				<span class="sheet-tooltip">
					Crit rolls are button activated.
				</span>
				<br />
				<input type="radio" name="attr_critroll_visibility" value="public" checked="checked" />
				<span class="sheet-popup">Public Crit Rolls</span>
				<span class="sheet-tooltip">
					Everyone will see all crit rolls.
				</span>
				<br />
				<input type="radio" name="attr_critroll_visibility" value="secret" />
				<span class="sheet-popup">Player Only Crit Rolls</span>
				<span class="sheet-tooltip">
					Players and GM will see your crit rolls.
				</span>
				<br />
				<input type="radio" name="attr_critroll_visibility" value="gm" />
				<span class="sheet-popup">GM Only Crit Rolls</span>
				<span class="sheet-tooltip">
					Only the GM will see Crit rolls.
				</span>
			</div>
		</div>
		<div class="sheet-box">
			<input type="radio" name="attr_mod_cascade" value="all" checked="checked" />
			<span class="sheet-popup">Mods to attributes increase all derived
				stats (including HP, FP)</span>
			<br />
			<input type="radio" name="attr_mod_cascade" value="some" />
			<span class="sheet-popup">Mods to attributes increase most derived
				stats (not HP, FP)</span>
			<br />
			<input type="radio" name="attr_mod_cascade" value="none" />
			<span class="sheet-popup">Mods to attributes do not increase derived
				stats</span>
		</div>
		<div class="sheet-box">
			<input type="radio" name="attr_rounds_fired" value="1" checked="checked" />
			<span class="sheet-popup">Rapid Fire Prompt Off</span>
			<span class="sheet-tooltip">
				Ranged Attack Rolls will be made without "Rounds fired" prompt.
			</span>
			<br /><input type="radio" name="attr_rounds_fired" value="?{Rounds Fired?|1}" />
			<span class="sheet-popup">Rapid Fire Prompt On</span>
			<span class="sheet-tooltip">
				Ranged Attack Rolls will be made with "Rounds fired" prompt.
				<br />
				This will not affect damage rolls.
			</span>
		</div>
		<div class="sheet-box">
			<input type="radio" name="attr_range_rule" value="1" checked="checked" />
			<span class="sheet-popup">Normal Range</span>
			<span class="sheet-tooltip">
				Normal Range rules.<br />
				B550
			</span>
			<br />
			<input type="radio" name="attr_range_rule" value="2" />
			<span class="sheet-popup">Simple Range</span>
			<span class="sheet-tooltip">
				Simple Range rules.<br />
				MH2:21
			</span>
		</div>
		<div class="sheet-box">
			<div class="sheet-row">
				<div class="sheet-cell sheet-col0">
					Choose Basic or Expanded Manuevers
				</div>
			</div>
			<div class="sheet-row">
				<div class="sheet-cell sheet-col0">
					<select name="attr_manuevergroup">
						<option value="1" selected="selected">Basic</option>
						<option value="2">Expanded</option>
					</select>
				</div>
			</div>
		</div>
	</div>

	<script type="text/worker">
		/* ---- BEGIN: TheAaronSheet.js ---- */
// Github:   https://github.com/shdwjk/TheAaronSheet/blob/master/TheAaronSheet.js
// By:       The Aaron, Arcane Scriptomancer
// Contact:  https://app.roll20.net/users/104025/the-aaron

var TAS = TAS || (function(){
    'use strict';

    var version = '0.2.5',
        lastUpdate = 1504710542,

        loggingSettings = {
            debug: {
                key:     'debug',
                title:   'DEBUG',
                color: {
                    bgLabel: '#7732A2',
                    label:   '#F2EF40',
                    bgText:  '#FFFEB7',
                    text:    '#7732A2'
                }
            },
            error: {
                key:     'error',
                title:   'Error',
                color: {
                    bgLabel: '#C11713',
                    label:   'white',
                    bgText:  '#C11713',
                    text:    'white'
                }
            },
            warn: {
                key:     'warn',
                title:   'Warning',
                color: {
                    bgLabel: '#F29140',
                    label:   'white',
                    bgText:  '#FFD8B7',
                    text:    'black'
                }
            },
            info: {
                key:     'info',
                title:   'Info',
                color: {
                    bgLabel: '#413FA9',
                    label:   'white',
                    bgText:  '#B3B2EB',
                    text:    'black'
                }
            },
            notice: {
                key:     'notice',
                title:   'Notice',
                color: {
                    bgLabel: '#33C133',
                    label:   'white',
                    bgText:  '#ADF1AD',
                    text:    'black'
                }
            },
            log: {
                key:     'log',
                title:   'Log',
                color: {
                    bgLabel: '#f2f240',
                    label:   'black',
                    bgText:  '#ffff90',
                    text:    'black'
                }
            },
            callstack: {
                key:     'TAS',
                title:   'function',
                color: {
                    bgLabel: '#413FA9',
                    label:   'white',
                    bgText:  '#B3B2EB',
                    text:    'black'
                }
            },
            callstack_async: {
                key:     'TAS',
                title:   'ASYNC CALL',
                color: {
                    bgLabel: '#413FA9',
                    label:   'white',
                    bgText:  '#413FA9',
                    text:    'white'
                }
            },
            TAS: {
                key:     'TAS',
                title:   'TAS',
                color: {
                    bgLabel: 'grey',
                    label:   'black;background:linear-gradient(#304352,#d7d2cc,#d7d2cc,#d7d2cc,#304352)',
                    bgText:  'grey',
                    text:    'black;background:linear-gradient(#304352,#d7d2cc,#d7d2cc,#d7d2cc,#304352)'
                }
            }
        },


        config = {
            debugMode: false,
            logging: {
                log: true,
                notice: true,
                info: true,
                warn: true,
                error: true,
                debug: false
            }
        },

        callstackRegistry = [],
		queuedUpdates = {}, //< Used for delaying saves till the last moment.

    complexType = function(o){
        switch(typeof o){
            case 'string':
                return 'string';
            case 'boolean':
                return 'boolean';
            case 'number':
                return (_.isNaN(o) ? 'NaN' : (o.toString().match(/\./) ? 'decimal' : 'integer'));
            case 'function':
                return 'function: '+(o.name ? o.name+'()' : '(anonymous)');
            case 'object':
                return (_.isArray(o) ? 'array' : (_.isArguments(o) ? 'arguments' : ( _.isNull(o) ? 'null' : 'object')));
            default:
                return typeof o;
        }
    },

	dataLogger = function(primaryLogger,secondaryLogger,data){
        _.each(data,function(m){
            var type = complexType(m);
            switch(type){
                case 'string':
                    primaryLogger(m);
                    break;
                case 'undefined':
                case 'null':
                case 'NaN':
                    primaryLogger('['+type+']');
                    break;
                case 'number':
                case 'not a number':
                case 'integer':
                case 'decimal':
                case 'boolean':
                    primaryLogger('['+type+']: '+m);
                    break;
                default:
                    primaryLogger('['+type+']:=========================================');
                    secondaryLogger(m);
                    primaryLogger('=========================================================');
                    break;
            }
        });
	},


    colorLog = function(options){
        var coloredLoggerFunction,
            key = options.key,
            label = options.title || 'TAS',
            lBGColor = (options.color && options.color.bgLabel) || 'blue',
            lTxtColor = (options.color && options.color.label) || 'white',
            mBGColor = (options.color && options.color.bgText) || 'blue',
            mTxtColor = (options.color && options.color.text) || 'white';

        coloredLoggerFunction = function(message){
            /* eslint-disable no-console */
            console.log(
                '%c '+label+': %c '+message + ' ',
                'background-color: '+lBGColor+';color: '+lTxtColor+'; font-weight:bold;',
                'background-color: '+mBGColor+';color: '+mTxtColor+';'
            ); 
            /* eslint-enable no-console */
        };
        return function(){
            if('TAS'===key || config.logging[key]){
                /* eslint-disable no-console */
               dataLogger(coloredLoggerFunction,function(m){console.log(m);},_.toArray(arguments)); 
                /* eslint-enable no-console */
            }
        };
    },

    logDebug  = colorLog(loggingSettings.debug),
    logError  = colorLog(loggingSettings.error),
    logWarn   = colorLog(loggingSettings.warn),
    logInfo   = colorLog(loggingSettings.info),
    logNotice = colorLog(loggingSettings.notice),
    logLog    = colorLog(loggingSettings.log),
    log       = colorLog(loggingSettings.TAS),
    logCS     = colorLog(loggingSettings.callstack),
    logCSA    = colorLog(loggingSettings.callstack_async),

    registerCallstack = function(callstack,label){
        var idx=_.findIndex(callstackRegistry,function(o){
            return (_.difference(o.stack,callstack).length === _.difference(callstack,o.stack).length) &&
                _.difference(o.stack,callstack).length === 0 &&
                o.label === label;
        });
        if(-1 === idx){
            idx=callstackRegistry.length;
            callstackRegistry.push({
                stack: callstack,
                label: label
            });
        }
        return idx;
    },

    setConfigOption = function(options){
        var newconf =_.defaults(options,config);
        newconf.logging=_.defaults(
            (options && options.logging)||{},
            config.logging
        );
        config=newconf;
    },
    
    isDebugMode = function(){
        return config.debugMode;
    },

    debugMode = function(){
        config.logging.debug=true;
        config.debugMode = true;
    },

    getCallstack = function(){
        var e = new Error('dummy'),
            stack = _.map(_.rest(e.stack.replace(/^[^(]+?[\n$]/gm, '')
            .replace(/^\s+at\s+/gm, '')
            .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@')
            .split('\n')),function(l){
                return l.replace(/\s+.*$/,'');
            });
        return stack;
    },
    logCallstackSub = function(cs){
        var matches, csa;
        _.find(cs,function(line){
            matches = line.match(/TAS_CALLSTACK_(\d+)/);
            if(matches){
               csa=callstackRegistry[matches[1]];
               logCSA( '===================='+(csa.label ? '> '+csa.label+' <' : '')+'====================');
               logCallstackSub(csa.stack);
               return true;
            } 
            logCS(line);
            return false;
        });
    },
    logCallstack = function(){
        var cs;
        if(config.debugMode){
            cs = getCallstack();
            cs.shift();
            log('==============================> CALLSTACK <==============================');
            logCallstackSub(cs);
            log('=========================================================================');
        }
    },


    wrapCallback = function (label, callback, context){
        var callstack;
        if('function' === typeof label){
            context=callback;
            callback=label;
            label=undefined;
        }
        if(!config.debugMode){
            return (function(cb,ctx){
                return function(){
                    cb.apply(ctx||{},arguments);
                };
            }(callback,context));
        }
        
        callstack = getCallstack();
        callstack.shift();
        
        return (function(cb,ctx,cs,lbl){
            var ctxref=registerCallstack(cs,lbl);

            /*jshint -W054 */
            return new Function('cb','ctx','TASlog',
                "return function TAS_CALLSTACK_"+ctxref+"(){"+
                    "var start,end;"+
                    "TASlog('Entering: '+(cb.name||'(anonymous function)'));"+
                    "start=_.now();"+
                    "cb.apply(ctx||{},arguments);"+
                    "end=_.now();"+
                    "TASlog('Exiting: '+(cb.name||'(anonymous function)')+' :: '+(end-start)+'ms elapsed');"+
                "};")(cb,ctx,log);
            /*jshint +W054 */
        }(callback,context,callstack,label));
    },


    prepareUpdate = function( attribute, value ){
        queuedUpdates[attribute]=value;
    },

    applyQueuedUpdates = function() {
      setAttrs(queuedUpdates);
      queuedUpdates = {};
    },

	namesFromArgs = function(args,base){
        return _.chain(args)
            .reduce(function(memo,attr){
                if('string' === typeof attr) {
                    memo.push(attr);
                } else if(_.isArray(args) || _.isArguments(args)){
                    memo = namesFromArgs(attr,memo);
                }
                return memo;
            },(_.isArray(base) && base) || [])
            .uniq()
            .value();
	},

	addId = function(obj,value){
		Object.defineProperty(obj,'id',{
			value: value,
			writable: false,
			enumerable: false
		});
	},

	addProp = function(obj,prop,value,fullname){
		(function(){
            var pname=(_.contains(['S','F','I','D'],prop) ? '_'+prop : prop),
                full_pname = fullname || prop,
                pvalue=value;

            _.each(['S','I','F'],function(p){
                if( !_.has(obj,p)){
                    Object.defineProperty(obj, p, {
                        value: {},
                        enumerable: false,
                        readonly: true
                    });
                }
            });
            if( !_.has(obj,'D')){
                Object.defineProperty(obj, 'D', {
                    value: _.reduce(_.range(10),function(m,d){
                            Object.defineProperty(m, d, {
                                value: {},
                                enumerable: true,
                                readonly: true
                            });
                            return m;
                        },{}),
                    enumerable: false,
                    readonly: true
                });
            }


            // Raw value
			Object.defineProperty(obj, pname, {
                enumerable: true,
				set: function(v){
                    if(v!==pvalue) {
                        pvalue=v;
                        prepareUpdate(full_pname,v);
                    }
				},
				get: function(){
					return pvalue;
				}
			});
            
            // string value
			Object.defineProperty(obj.S, pname, {
                enumerable: true,
				set: function(v){
                    var val=v.toString();
                    if(val !== pvalue) {
                        pvalue=val;
                        prepareUpdate(full_pname,val);
                    }
				},
				get: function(){
					return pvalue.toString();
				}
			});

            // int value
			Object.defineProperty(obj.I, pname, {
                enumerable: true,
				set: function(v){
                    var val=parseInt(v,10) || 0;
                    if(val !== pvalue){
                        pvalue=val;
                        prepareUpdate(full_pname,val);
                    }
				},
				get: function(){
					return parseInt(pvalue,10) || 0;
				}
			});

            // float value
			Object.defineProperty(obj.F, pname, {
                enumerable: true,
				set: function(v){
                    var val=parseFloat(v) || 0;
                    if(val !== pvalue) {
                        pvalue=val;
                        prepareUpdate(full_pname,val);
                    }
				},
				get: function(){
					return parseFloat(pvalue) || 0;
				}
			});
            _.each(_.range(10),function(d){
                Object.defineProperty(obj.D[d], pname, {
                    enumerable: true,
                    set: function(v){
                        var val=(parseFloat(v) || 0).toFixed(d);
                        if(val !== pvalue){
                            pvalue=val;
                            prepareUpdate(full_pname,val);
                        }
                    },
                    get: function(){
                        return (parseFloat(pvalue) || 0).toFixed(d);
                    }
                });
            });

		}());
	},
	
	repeating = function( section ) {
		return (function(s){
			var sectionName = s,
				attrNames = [],
				fieldNames = [],
				operations = [],
                after = [],
			
			repAttrs = function TAS_Repeating_Attrs(){
				attrNames = namesFromArgs(arguments,attrNames);
				return this;
			},
			repFields = function TAS_Repeating_Fields(){
				fieldNames = namesFromArgs(arguments,fieldNames);
				return this;
			},
			repReduce = function TAS_Repeating_Reduce(func, initial, final, context) { 
				operations.push({
                    type: 'reduce',
                    func: (func && _.isFunction(func) && func) || _.noop,
                    memo: (_.isUndefined(initial) && 0) || initial,
                    final: (final && _.isFunction(final) && final) || _.noop,
                    context: context || {}
                });
				return this;
			},
			repMap = function TAS_Repeating_Map(func, final, context) {
				operations.push({
                    type: 'map',
                    func: (func && _.isFunction(func) && func) || _.noop,
                    final: (final && _.isFunction(final) && final) || _.noop,
                    context: context || {}
                });
				return this;
			},
            repEach = function TAS_Repeating_Each(func, final, context) {
				operations.push({
                    type: 'each',
                    func: (func && _.isFunction(func) && func) || _.noop,
                    final: (final && _.isFunction(final) && final) || _.noop,
                    context: context || {}
                });
				return this;
            },
            repTap = function TAS_Repeating_Tap(final, context) {
				operations.push({
                    type: 'tap',
                    final: (final && _.isFunction(final) && final) || _.noop,
                    context: context || {}
                });
				return this;
            },
            repAfter = function TAS_Repeating_After(callback,context) {
				after.push({
                    callback: (callback && _.isFunction(callback) && callback) || _.noop,
                    context: context || {}
                });
				return this;
            },
			repExecute = function TAS_Repeating_Execute(callback,context){
				var rowSet = {},
					attrSet = {},
					fieldIds = [],
					fullFieldNames = [];

                repAfter(callback,context);

				// call each operation per row.
				// call each operation's final
				getSectionIDs("repeating_"+sectionName,function(ids){
					fieldIds = ids;
					fullFieldNames = _.reduce(fieldIds,function(memo,id){
						return memo.concat(_.map(fieldNames,function(name){
							return 'repeating_'+sectionName+'_'+id+'_'+name;  
						}));
					},[]);
					getAttrs( _.uniq(attrNames.concat(fullFieldNames)), function(values){
						_.each(attrNames,function(aname){
							if(values.hasOwnProperty(aname)){
								addProp(attrSet,aname,values[aname]);
							}
						});

						rowSet = _.reduce(fieldIds,function(memo,id){
							var r={};
							addId(r,id);
							_.each(fieldNames,function(name){
								var fn = 'repeating_'+sectionName+'_'+id+'_'+name;  
								addProp(r,name,values[fn],fn);
							});

							memo[id]=r;

							return memo;
						},{});

                        _.each(operations,function(op){
                            var res;
                            switch(op.type){
                                case 'tap':
                                    _.bind(op.final,op.context,rowSet,attrSet)();
                                    break;

                                case 'each':
                                    _.each(rowSet,function(r){
                                        _.bind(op.func,op.context,r,attrSet,r.id,rowSet)();
                                    });
                                    _.bind(op.final,op.context,rowSet,attrSet)();
                                    break;

                                case 'map':
                                    res = _.map(rowSet,function(r){
                                        return _.bind(op.func,op.context,r,attrSet,r.id,rowSet)();
                                    });
                                    _.bind(op.final,op.context,res,rowSet,attrSet)();
                                    break;

                                case 'reduce':
                                    res = op.memo;
                                    _.each(rowSet,function(r){
                                        res = _.bind(op.func,op.context,res,r,attrSet,r.id,rowSet)();
                                    });
                                    _.bind(op.final,op.context,res,rowSet,attrSet)();
                                    break;
                            }
                        });

                        // finalize attrs
                        applyQueuedUpdates();
                        _.each(after,function(op){
                            _.bind(op.callback,op.context)();
                        });
					});
				});
			};
				
			return {
				attrs: repAttrs,
				attr: repAttrs,

				column: repFields,
				columns: repFields,
				field: repFields,
				fields: repFields,

				reduce: repReduce,
				inject: repReduce,
				foldl: repReduce,

				map: repMap,
				collect: repMap,

				each: repEach,
                forEach: repEach,

                tap: repTap,
                'do': repTap,

				after: repAfter,
				last: repAfter,
				done: repAfter,

				execute: repExecute,
				go: repExecute,
				run: repExecute
			};
		}(section));
	},


    repeatingSimpleSum = function(section, field, destination){
        repeating(section)
            .attr(destination)
            .field(field)
            .reduce(function(m,r){
                return m + (r.F[field]);
            },0,function(t,r,a){
                a.S[destination]=t;
            })
            .execute();
    };

    /* eslint-disable no-console */
	console.log('%c•.¸¸.•*´¨`*•.¸¸.•*´¨`*•.¸  The Aaron Sheet  v'+version+'  ¸.•*´¨`*•.¸¸.•*´¨`*•.¸¸.•','background: linear-gradient(to right,green,white,white,green); color:black;text-shadow: 0 0 8px white;');
	console.log('%c•.¸¸.•*´¨`*•.¸¸.•*´¨`*•.¸  Last update: '+(new Date(lastUpdate*1000))+'  ¸.•*´¨`*•.¸¸.•*´¨`*•.¸¸.•','background: linear-gradient(to right,green,white,white,green); color:black;text-shadow: 0 0 8px white;');
    /* eslint-enable no-console */


    return {
        /* Repeating Sections */
        repeatingSimpleSum: repeatingSimpleSum,
		repeating: repeating,

        /* Configuration */
        config: setConfigOption,

        /* Debugging */
        callback: wrapCallback,
        callstack: logCallstack,
        debugMode: debugMode,
        isDebugMode: isDebugMode,
        _fn: wrapCallback,

        /* Logging */
        debug: logDebug,
        error: logError,
        warn: logWarn,
        info: logInfo,
        notice: logNotice,
        log: logLog
    };
}());

/* ---- END: TheAaronSheet.js ---- */
/* ======== ROWIDS =============== */
on('sheet:opened change:repeating_traits', function () {
	TAS.repeating('traits')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_disadvantages', function () {
	TAS.repeating('disadvantages')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_quirks', function () {
	TAS.repeating('quirks')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_racial', function () {
	TAS.repeating('racial')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_skills', function () {
	TAS.repeating('skills')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_techniques', function () {
	TAS.repeating('techniques')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_melee', function () {
	TAS.repeating('melee')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_ranged', function () {
	TAS.repeating('ranged')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_defense', function () {
	TAS.repeating('defense')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_item', function () {
	TAS.repeating('item')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_spells', function () {
	TAS.repeating('spells')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
on('sheet:opened change:repeating_rituals', function () {
	TAS.repeating('rituals')
		.fields('rowid')
		.map(function (r, a, id) {
			r.rowid = id;
		})
		.execute();
});
/* =========== END ROWIDS ============ */

	var noop = function () {}; // do nothing.

	var version = '1.5.1';

	var modCascade = true;
	var modCascadeAll = true;
	var damageTable = [];

	// see: https://app.roll20.net/forum/post/7251390/slug%7D
	const modBySpeedRange = [ 
                    	{r:1, m:0},
                    	{r:2, m:0},
                    	{r:3, m:-1},
                    	{r:5, m:-2},
                    	{r:7, m:-3},
                    	{r:10, m:-4},
                    	{r:15, m:-5},
                    	{r:20, m:-6},
                    	{r:30, m:-7},
                    	{r:50, m:-8},
                    	{r:70, m:-9},
                    	{r:100, m:-10},
                    	{r:150, m:-11},
                    	{r:200, m:-12},
                    	{r:300, m:-13},
                    	{r:500, m:-14},
                    	{r:700, m:-15},
                    	{r:1000, m:-16},
                    	{r:1500, m:-17},
                    	{r:2000, m:-18},
                    	{r:3000, m:-19},
                    	{r:5000, m:-20},
                    	{r:7000, m:-21},
                    	{r:10000, m:-22},
                    	{r:15000, m:-23},
                    	{r:20000, m:-24}
                    ];

    /**
     * Create global function
     * use: var mod = getModBySpeedRange(14);
     * Uses the array of json object objects
     * to get the modifier based on speed/range
     **/
    const getModBySpeedRange = (d) => {
    	
    	// find first matching entry where range is greater than distance
    	// Distance = 4, first entry where range is greater than 4. 
    	// Range = 5, which is greater than 4. return that object. Modifier = -2
    	const entry = modBySpeedRange.find((o)=>o.r>=d );
    	
    	// if no matches, return -24.
    	return (entry != undefined ? entry.m : -24);
    
    };
	
		// see: https://app.roll20.net/forum/post/7251390/slug%7D
	const modBySimpleSpeedRange = [ 
                    	{r:5, m:0},
						{r:20, m:-3},
						{r:100, m:-7},
						{r:500, m:-11},
						{r:2500, m:-15}
                    ];

    /**
     * Create global function
     * use: var mod = getModBySpeedRange(14);
     * Uses the array of json object objects
     * to get the modifier based on speed/range
     **/
    const getModBySimpleSpeedRange = (d) => {
    	
    	// find first matching entry where range is greater than distance
    	// Distance = 4, first entry where range is greater than 4. 
    	// Range = 5, which is greater than 4. return that object. Modifier = -2
    	const entry = modBySimpleSpeedRange.find((o)=>o.r>=d );
    	
    	// if no matches, return -24.
    	return (entry != undefined ? entry.m : -24);
    
    };

	/* Due to the change from auto-calc fields to helper scrips,
	 * I'm running a "on open" to set various fields. At some point
	 * in the future this might no longer be needed.
	 */
	on('sheet:opened', function () {
		console.log('********* Sheet Opened *********');
		getAttrs(['sheet_version', 'mod_cascade', 'modCascade',
			'modCascadeAll'
		], function (v) {
			if (v.modCascade && v.modCascadeAll) {
				modCascade = v.modCascade;
				modCascadeAll = v.modCascadeAll;
			}
			if (!v.sheet_version || v.sheet_version != version) {
				// Set sheet version:
				setAttrs({
					sheet_version: version
				});

				// initalize any empty fields in repeating sections since the default values were removed.
				loadRepeating('repeating_skills', 'points', 1);
				loadRepeating('repeating_techniques', 'points', 1);
				loadRepeating('repeating_spells', 'points', 1);
				loadRepeating('repeating_traits', 'points', 1);
				loadRepeating('repeating_disadvantages', 'points', 1);
				loadRepeating('repeating_quirks', 'points', 1);
				loadRepeating('repeating_racial', 'points', 1);

				// initalize all calculated stats
				resetAll(v.mod_cascade);
			}
		});
		
		damageTable = generateDamageTable();

	});

	on('change:mod_cascade', function (e) {
		getAttrs(['mod_cascade'], function (v) {
			resetAll(v.mod_cascade);
		});
	});

	function resetAll(mod_cascade) {
		switch (mod_cascade) {
		case 'all':
			modCascade = true;
			modCascadeAll = true;
			break;
		case 'some':
			modCascade = true;
			modCascadeAll = false;
			break;
		default:
			modCascade = false;
			modCascadeAll = false;
		}
		setAttrs({
			modCascade: modCascade,
			modCascadeAll: modCascadeAll
		});

			// last thing to update is movement
			var thenMovementStats = _.after(1, function () {
				
				// last thing to update is movement tables
				updateEnhancedMove();
				updateFlightValues();
				updateWaterMoveValues();
				updateJumpDistanceValues();
			});	
		
		
		// After move, dodge, encumbrance, HP, and FP
		var thenCurrentMoveDodge = _.after(2, function () {
			updateMoveDodge();
		});

		// After DX and HT
		var thenSpeedMoveDodge = _.after(2, function () {
			updateBasicSpeed(function () {
				// After Basic Speed...
				updateBasicMove(thenCurrentMoveDodge);
				updateDodge(thenCurrentMoveDodge);
			});
		});

		// After Lift and weight...
		var thenEncumbrance = _.after(2, function () {
			updateEncLevel(thenCurrentMoveDodge);
		});

		// Update attributes, then secondary characteristics, and so on...
		updateST(function () {
			// After ST...
			updateHP(thenCurrentMoveDodge);
			updateLift(thenEncumbrance);
			updateStrikingST();
			// updateStrikingST damage rolls
				console.log("update Striking Damage");
				updateStrikingStrengthDamage();
		});
		updateDX(thenSpeedMoveDodge);
		updateIQ(function () {
			// After IQ...
			updateWill();
			updatePer(function () {
				// After Per...
				updateSense();
			});
		});
		updateHT(function () {
			updateFP(thenCurrentMoveDodge);
			thenSpeedMoveDodge();
		});

	}

	// Sum values, used in reduce
	function getSum(total, num) {
		return (+total || 0) + (+num || 0);
	}

	// function to sum a field from a repeating section
	function sumRepeating(sectionName, fieldName, callback) {
		getSectionIDs(sectionName, function (ids) {
			if (ids.length === 0 ) {
				callback(0);
				return;
			}
			var fieldArray = [];
			for (var i = 0; i < ids.length; i++) {
				fieldArray.push(sectionName + '_' + ids[i] + '_' + fieldName);
			}
			getAttrs(fieldArray, function (fieldValues) {
				var vals = Object.values(fieldValues);
				vals.push(0);
				var total = vals.reduce(getSum);
				callback(total);
			});
		});
	}

	// load values of a repeating section
	function loadRepeating(sectionName, fieldName, defaultValue) {
		console.log('********* loadRepeating ' + sectionName + '.' + fieldName + '*********');
		getSectionIDs(sectionName, function (ids) {
			if (ids.length === 0 ) {
				return;
			}
			var fieldArray = [];
			var update = {};
			for (var i = 0; i < ids.length; i++) {
				var propName = sectionName + '_' + ids[i] + '_' + fieldName;
				fieldArray.push(propName);
				update[propName] = defaultValue;
			}
			getAttrs(fieldArray, function (fieldValues) {
				Object.assign(update, fieldValues);
				setAttrs(update);
			});
		});
	}

	// Strength Change
	on('sheet:opened change:strength_points change:strength_mod', function (e) {
		updateST();
	});
	// Update Strength
	function updateST(callback) {
		callback = callback || noop;
		console.log('********* updateST *********');
		getAttrs(['strength_points', 'strength_mod'], function (v) {
			var base = 10 + ((+v.strength_points || 0) / 10 | 0);
			var mod = +v.strength_mod || 0;
			setAttrs({
				strength_base: base,
				strength: base + mod,
			}, {
				silent: false
			}, callback);
		});
	}

	// Dexterity Change
	on('sheet:opened change:dexterity_points change:dexterity_mod', function (e) {
		updateDX();
	});
	// Update Dexterity
	function updateDX(callback) {
		callback = callback || noop;
		console.log('********* updateDX *********');
		getAttrs(['dexterity_points', 'dexterity_mod'], function (v) {
			var base = 10 + ((+v.dexterity_points || 0) / 20 | 0);
			var mod = +v.dexterity_mod || 0;
			setAttrs({
				dexterity_base: base,
				dexterity: base + mod
			}, {
				silent: false
			}, callback);
		});
	}

	// Intelligence
	on('sheet:opened change:intelligence_points change:intelligence_mod', function (e) {
		updateIQ();
	});
	// Update Intelligence
	function updateIQ(callback) {
		callback = callback || noop;
		console.log('********* updateIQ *********');
		getAttrs(['intelligence_points', 'intelligence_mod'], function (v) {
			var base = 10 + ((+v.intelligence_points || 0) / 20 | 0);
			var mod = +v.intelligence_mod || 0;
			setAttrs({
				intelligence_base: base,
				intelligence: base + mod
			}, {
				silent: false
			}, callback);
		});
	}

	// Health
	on('sheet:opened change:health_points change:health_mod', function (e) {
		updateHT();
	});
	// Update Health
	function updateHT(callback) {
		callback = callback || noop;
		console.log('********* updateHT *********');
		getAttrs(['health_points', 'health_mod'], function (v) {
			var base = 10 + ((+v.health_points || 0) / 10 | 0);
			var mod = +v.health_mod || 0;
			setAttrs({
				health_base: base,
				health: base + mod
			}, {
				silent: false
			}, callback);
		});
	}

		// HP
		on('sheet:opened change:strength change:hit_points_points change:hit_points_mod', function (e) { updateHP(); });
	// Update HP
	function updateHP(callback) {
		console.log('********* updateHP *********');
		callback = callback || noop;
		getAttrs(['strength', 'strength_base', 'hit_points_points',
			'hit_points_mod'], function (v) {
			var base = (modCascadeAll ? +v.strength : +v.strength_base) +
				((+v.hit_points_points || 0) / 2 | 0);
			var mod = +v.hit_points_mod;
			setAttrs({
				hit_points_max: base + mod
			}, {
				silent: false
			}, function () {
				getAttrs(['hit_points'], function (v2) {
					if (v2.hit_points == null) {
						setAttrs({
							hit_points: base
						}, {
							silent: false
						}, callback);
					} else {
						callback();
					}
				});
			});
		});
	}

	// Wound Thresholds
	on('sheet:opened change:hit_points_max', function (e) {
		updateThresholds();
	});
	// Update Thresholds
	function updateThresholds(callback) {
		callback = callback || noop;
		console.log('****updateThresholds****');
		getAttrs(['hit_points_max'], function (v) {
			var base = +v.hit_points_max;
			var reeling = Math.floor(base / 3);
			var collapse = 0;
			var check1 = base * -1;
			var check2 = base * -2;
			var check3 = base * -3;
			var check4 = base * -4;
			var dead = base * -5;
			var dest = base * -10;

			setAttrs({
				reeling: reeling,
				hp_collapse: collapse,
				hp_check1: check1,
				hp_check2: check2,
				hp_check3: check3,
				hp_check4: check4,
				dead: dead,
				destroyed: dest
			}, {
				silent: false
			}, callback);
		});
	}

	// FP
	on('sheet:opened change:health change:fatigue_points_points change:fatigue_points_mod',
		function (e) { updateFP(); });
	// Update FP
	function updateFP(callback) {
		console.log('********* updateFP *********');
		callback = callback || noop;
		getAttrs(['health', 'health_base', 'fatigue_points_points',
			'fatigue_points_mod'
		], function (v) {
			var base = (modCascadeAll ? +v.health : +v.health_base) +
				((+v.fatigue_points_points || 0) / 3 | 0);
			var mod = +v.fatigue_points_mod;
			setAttrs({
				fatigue_points_max: base + mod
			}, {
				silent: false
			}, function () {
				getAttrs(['fatigue_points'], function (v2) {
					if (v2.fatigue_points == null) {
						setAttrs({
							fatigue_points: base
						}, {
							silent: false
						}, callback);
					} else {
						callback();
					}
				});
			});
		});
	}

	// Set Fatigue Point Thresholds
	on('sheet:opened change:fatigue_points_max', function updateFpThresholds(
		callback) {
		console.log('**** updateFpThresholds ****');
		getAttrs(['fatigue_points_max'], function (v) {
			var fpMax = v.fatigue_points_max;
			var fpTired = Math.floor(fpMax / 3);
			var fpColl = 0;
			var fpUncon = fpMax * -1;

			setAttrs({
				fp_tired: fpTired,
				fp_collapse: fpColl,
				fp_uncons: fpUncon
			});
		});
	});

	// Perception
	on('sheet:opened change:intelligence change:perception_points change:perception_mod',
		function (e) {
			updatePer();
		});
	// Update Perception
	function updatePer(callback) {
		console.log('********* updatePer *********');
		callback = callback || noop;
		getAttrs(['intelligence', 'intelligence_base', 'perception_points',
			'perception_mod'
		], function (v) {
			var base = (modCascade ? +v.intelligence : +v
				.intelligence_base) +
				((+v.perception_points || 0) / 5 | 0);
			var mod = +v.perception_mod || 0;
			setAttrs({
				perception_base: base,
				perception: base + mod
			}, {
				silent: false
			}, callback);
		});
	}
	// Vision, Hearing, Smell, Touch
	on('sheet:opened change:perception change:vision_mod change:hearing_mod change:taste_smell_mod change:touch_mod', function(e) {
		updateSense();
	});

	// Vision, Hearing, Smell, Touch
	on('sheet:opened change:perception change:vision_mod change:hearing_mod change:taste_smell_mod change:touch_mod', function (e) {
		updateSense();
	});
	// Update Vision, Hearing, Smell, Touch
	function updateSense() {
		console.log('********* updateSense *********');
		getAttrs(['perception', 'perception_base', 'vision_mod', 'hearing_mod', 'taste_smell_mod', 'touch_mod'], function (v) {
			var base = (modCascade ? +v.perception : +v.perception_base);
			var visionBase = base;
			var visionMod = +v.vision_mod || 0;
			var hearingBase = base;
			var hearingMod = +v.hearing_mod || 0;
			var tasteSmellBase = base;
			var tasteSmellMod = +v.taste_smell_mod || 0;
			var touchBase = base;
			var touchMod = +v.touch_mod || 0;
			setAttrs({
				vision_base: visionBase,
				vision: visionBase + visionMod,
				hearing_base: hearingBase,
				hearing: hearingBase + hearingMod,
				taste_smell_base: tasteSmellBase,
				taste_smell: tasteSmellBase + tasteSmellMod,
				touch_base: touchBase,
				touch: touchBase + touchMod
			});
		});
	}

	// Update Willpower, Fear
	on('sheet:opened change:intelligence change:willpower_points change:willpower_mod change:fear_check_points change:fear_check_mod change:combat_reflexes',
		function (e) {
			updateWill();
		});
	// Update Willpower, Fear -- Updated to reflect 'Rule of 14' for fright checks pg. 360
	function updateWill() {
		console.log('********* updateWill *********');
		getAttrs(['intelligence', 'intelligence_base', 'willpower_points',
			'willpower_mod', 'fear_check_points', 'fear_check_mod', 'combat_reflexes'
		], function (v) {
			var wBase = (modCascade ? +v.intelligence : +v
					.intelligence_base) +
				((+v.willpower_points || 0) / 5 | 0);
			var wMod = +v.willpower_mod || 0;
			var fBase = wBase + (modCascade ? +wMod : 0) +
				((+v.fear_check_points || 0) / 2 | 0);
			var rBase = +v.combat_reflexes || 0;
			var rMod = rBase * 2;
			var fMod = +v.fear_check_mod || 0;
			var fCheck = fBase + fMod + rMod;
			setAttrs({
				willpower_base: wBase,
				willpower: wBase + wMod,
				fear_check_base: fBase,
				fear_check: fCheck
			});
		});
	}

	// Check for conditions to HT and conditions
	on('change:health change:stun_check_mod change:knockdown_check_mod change:unconscious_check_mod change:unconscious_check_points change:death_check_mod change:death_check_points', function (e) {
		updateHealthConditionChecks();
	});
	
	// Update HT, update Stun, Knockdown, Unconscious, and Death Checks
	function updateHealthConditionChecks() {
		console.log('********* updateHealthConditionChecks *********');
		getAttrs(['health', 'health_base', 'stun_check_mod', 'knockdown_check_mod', 'unconscious_check_mod', 'unconscious_check_points', 'death_check_mod', 'death_check_points'], function(v) {
			
			var healthBase = (modCascade ? +v.health : +v.health_base);
			
			// stun
			var stunMod = +v.stun_check_mod || 0;
			
			var stunCheck = healthBase + stunMod;
			
			// knockdown	
			var knockDownMod = +v.knockdown_check_mod || 0;
			
			var knockDownCheck = healthBase + knockDownMod;
			
			// unconscious
			var unconsciousMod = +v.unconscious_check_mod || 0; 
			
			var unconsciousCheck = healthBase + (modCascade ? +unconsciousMod : 0) + ((+v.unconscious_check_points || 0) / 2 | 0);
			
			// death
			var deathMod = +v.death_check_mod || 0;
			
			var deathCheck = healthBase + (modCascade ? +deathMod : 0) + ((+v.death_check_points || 0) / 2 | 0);
			
			setAttrs({
			    stun_check: stunCheck,
				knockdown_check: knockDownCheck,
				unconscious_check: unconsciousCheck,
				death_check: deathCheck
			});
		});
	}
	
		// check to see if modifier for fright check threshold changed
		on("change:fright_check_threshold_mod", function(event) {
			
			updateFrightCheckThreshold();
			
		});
		
		function updateFrightCheckThreshold() {
			
			var fields = [
				"fright_check_threshold_mod"
				];
			
			getAttrs(fields, function(values) {
				
				var base = 13;
				
				var mod = +values.fright_check_threshold_mod;
				
				var final = base + mod;
				
				setAttrs({
					"fright_check_threshold": final 
				});
				
			});
			
		}

	// Speed
	on('sheet:opened change:dexterity change:health change:basic_speed_points change:basic_speed_mod',
		function (e) {
			updateBasicSpeed();
		});
	// Update Speed
	function updateBasicSpeed(callback) {
		console.log('********* updateBasicSpeed *********');
		callback = callback || noop;
		getAttrs(['dexterity', 'dexterity_base', 'health', 'health_base',
			'basic_speed_points', 'basic_speed_mod'
		], function (v) {
			var dx = (modCascade ? +v.dexterity : +v.dexterity_base);
			var ht = (modCascade ? +v.health : +v.health_base);
			var base = (dx + ht) / 4 + (((+v.basic_speed_points || 0) / 5 |
				0) * 0.25);
			var mod = +v.basic_speed_mod || 0;
			setAttrs({
				basic_speed_base: base,
				basic_speed: base + mod
			}, {
				silent: false
			}, callback);
		});
	}

	// Basic Move
	on('sheet:opened sheet:opened change:basic_speed change:basic_move_points change:basic_move_mod',
		function (e) {
			updateBasicMove();
		});
	// Update Move
	function updateBasicMove(callback) {
		console.log('********* updateBasicMove *********');
		callback = callback || noop;
		getAttrs(['basic_speed', 'basic_speed_base', 'basic_move_points', 'basic_move_mod'], function (v) {
			var speed = (modCascade ? +v.basic_speed : +v.basic_speed_base);
			var base = Math.floor(speed) + ((+v.basic_move_points || 0) /
				5 | 0);
			var mod = +v.basic_move_mod || 0;
			setAttrs({
				basic_move_base: base,
				basic_move: base + mod
			}, {
				silent: false
			}, callback);
		});
	}
	
	// Dodge
	on('sheet:opened change:basic_speed change:dodge_mod', function (e) {
		updateDodge();
	});
	// Update Dodge
	function updateDodge(callback) {
		console.log('********* updateDodge *********');
		callback = callback || noop;
		getAttrs(['basic_speed', 'basic_speed_base', 'dodge_mod'], function (v) {
			var speed = (modCascade ? +v.basic_speed : +v.basic_speed_base);
			var base = Math.floor(speed) + 3;
			var mod = +v.dodge_mod || 0;
			setAttrs({
				dodge_base: base,
				dodge: base + mod
			}, {
				silent: false
			}, callback);
		});
	}
	
	on('change:basic_speed change:dodge change:dodge_mod', function (e) {
		updateDodgeLevels();
		});
		// Update Dodge Levels
		function updateDodgeLevels(callback) {
		console.log('********* updateDodge *********');
		callback = callback || noop;
		getAttrs(['dodge'], function (v) {
			var dodge = +v.dodge || 0;
			var dodge0 = dodge;
			var dodge1 = dodge - 1;
			var dodge2 = dodge - 2;
			var dodge3 = dodge - 3;
			var dodge4 = dodge - 4;
			setAttrs({
				dodge_0: dodge0,
				dodge_1: dodge1,
				dodge_2: dodge2,
				dodge_3: dodge3,
				dodge_4: dodge4
				}, {
				silent: false
			}, callback);
		});
	}
	
	// Encumbered/injured move and dodge
	on('change:encumbrance_level change:dodge change:basic_move change:hit_points change:fatigue_points',
		function (e) {
			updateMoveDodge();
		});
		
	// Update encumbered/injured move and dodge
	function updateMoveDodge() {
		console.log('***** UPDATE MOVE/DODGE *****');
		getAttrs(['encumbrance_level', 'dodge', 'basic_move', 'hit_points',
			'hit_points_max', 'fatigue_points', 'fatigue_points_max',
			'strength_base', 'strength_mod'
		], function (v) {
			var dodge = +v.dodge;
			var move = +v.basic_move;
			var strength = +v.strength_base + +v.strength_mod;
			if (v.encumbrance_level === 5) {
				dodge = 1;
				move = 1;
			} else {
				dodge = dodge - +v.encumbrance_level;
				// There is some math error when calculating Encumbrance which requires the modifier of 1.01 instead of 1 below
				move = Math.floor(+v.basic_move * (1.01 - (0.2 * +v
					.encumbrance_level)));
				dodge = dodge < 1 ? 1 : dodge;
				move = move < 1 ? 1 : move;
			}
			if (+v.hit_points < +v.hit_points_max / 3) {
				dodge = Math.ceil(dodge / 2);
				move = Math.ceil(move / 2);
			}
			if (+v.fatigue_points < +v.fatigue_points_max / 3) {
				dodge = Math.ceil(dodge / 2);
				move = Math.ceil(move / 2);
				strength = Math.ceil(strength / 2);
			}
			setAttrs({
				current_move: move,
				current_dodge: dodge,
				strength: strength
			});
		});
	}

	// Lifting ST
	on('change:strength change:lift_st_points change:lift_st_mod', function (e) {
		updateLift();
	});
	// Update Lift
	function updateLift(callback) {
		console.log('********* updateLift *********');
		callback = callback || noop;
		getAttrs(['strength', 'strength_base', 'lift_st_points', 'lift_st_mod'],
			function (v) {
				var base = (modCascade ? +v.strength : +v.strength_base) +
					((+v.lift_st_points || 0) / 3 | 0);
				var modded = base + +v.lift_st_mod;
				var basicLift = (modded * modded) / 5;
				if (basicLift >= 10) {
					basicLift = Math.round(basicLift);
				}
				var lift0 = basicLift;
				var lift1 = basicLift * 2;
				var lift2 = basicLift * 3;
				var lift3 = basicLift * 6;
				var lift4 = basicLift * 10;
				var twoHand = basicLift * 8;
				var shove = basicLift * 12;
				var shove2 = basicLift * 24;
				var carry = basicLift * 15;
				var shift = basicLift * 50;
				setAttrs({
					lift_st_base: base,
					lift_st: modded,
					basic_lift: basicLift,
					lift_0: lift0,
					lift_1: lift1,
					lift_2: lift2,
					lift_3: lift3,
					lift_4: lift4,
					one_hand_lift: lift1,
					two_hand_lift: twoHand,
					shove_lift: shove,
					run_shove_lift: shove2,
					carry_back_lift: carry,
					shift_lift: shift					
				}, {silent: false}, callback);
			});
	}

	// Striking ST
	on('change:strength change:striking_st_points change:striking_st_mod', function (e) {
		updateStrikingST();
	});
	// Update Striking
	function updateStrikingST() {
		console.log('********* updateStrikingST *********');
		getAttrs(['strength', 'strength_base', 'striking_st_points', 'striking_st_mod'], function(v) {
			var base = (modCascade ? +v.strength : +v.strength_base) +
				((+v.striking_st_points || 0) / 5 | 0);
			var mod = +v.striking_st_mod;
			setAttrs({
				striking_st_base: base,
				striking_st: base + mod
			});
		});
	}

	// Update thrust and swing when striking st is updated
	on('change:striking_st', function(e){

		updateStrikingStrengthDamage();
		
	});

	/**
	 * Get the striking ST value and then get the damage type
	 * update Thrust and Swing
	 */
	function updateStrikingStrengthDamage(callback) {
	    
	    console.log("******** updateStrikingStrengthDamage ********");

		// get Strking strength
		getAttrs(['striking_st'], function(values) {

			callback = callback || noop;

			// + means to convert variable to number
			var strikingST = +values.striking_st;

			// get the damageType object (strength, thrust, swing)
			var damageType = getDamageType(strikingST);

			// set thrust and swing
			setAttrs({ 
				thrust: damageType.thrust,
				swing: damageType.swing
			}, {silent: false}, callback);

		});

	}

	/**
	 * Returns the damage type object 
	 * based on ST
	 * damageType {strength, thrust, swing}
	 *
	 * @param int strikingST ST of attack
	 *
	 * @return object 
	 */
	function getDamageType(strikingST) {

		// return value
		var damgeType = null;

		var modifier = 0;

		var baseThrust = 11;

		var baseSwing = 13;

		// prevent bad ST from causing issue
		if (isNaN(strikingST) || strikingST < 0) {
			strikingST = 1;
		}

		if (strikingST < 110) {

			// get damageType from table
			damageType = damageTable[strikingST];

		} else {

			// calculate the total 
			// Add 1d6 to thrust and swing for every full 10 points over 100
			modifier = Math.floor((strikingST - 100) / 10);
			
			baseThrust = baseThrust + modifier;

			baseSwing = baseSwing = modifier;

			damageType = {strength:strikingST, thrust:baseThrust + "d6", swing:baseSwing + "d6"}; 

		}

		return damageType;
	} 

	/**
	 * Populates the global variable damageTable
	 */
	function generateDamageTable() {

		var damageTable = [];

		damageTable[0] = {strength:"0", thrust:"1d6-6", swing:"1d6-6"};
		damageTable[1] = {strength:"1", thrust:"1d6-6", swing:"1d6-5"};
		damageTable[2] = {strength:"2", thrust:"1d6-6", swing:"1d6-5"};
		damageTable[3] = {strength:"3", thrust:"1d6-5", swing:"1d6-4"};
		damageTable[4] = {strength:"4", thrust:"1d6-5", swing:"1d6-4"};
		damageTable[5] = {strength:"5", thrust:"1d6-4", swing:"1d6-3"};
		damageTable[6] = {strength:"6", thrust:"1d6-4", swing:"1d6-3"};
		damageTable[7] = {strength:"7", thrust:"1d6-3", swing:"1d6-2"};
		damageTable[8] = {strength:"8", thrust:"1d6-3", swing:"1d6-2"};
		damageTable[9] = {strength:"9", thrust:"1d6-2", swing:"1d6-1"};
		damageTable[10] = {strength:"10", thrust:"1d6-2", swing:"1d6"};
		damageTable[11] = {strength:"11", thrust:"1d6-1", swing:"1d6+1"};
		damageTable[12] = {strength:"12", thrust:"1d6-1", swing:"1d6+2"};
		damageTable[13] = {strength:"13", thrust:"1d6", swing:"2d6-1"};
		damageTable[14] = {strength:"14", thrust:"1d6", swing:"2d6"};
		damageTable[15] = {strength:"15", thrust:"1d6+1", swing:"2d6+1"};
		damageTable[16] = {strength:"16", thrust:"1d6+1", swing:"2d6+2"};
		damageTable[17] = {strength:"17", thrust:"1d6+2", swing:"3d6-1"};
		damageTable[18] = {strength:"18", thrust:"1d6+2", swing:"3d6"};
		damageTable[19] = {strength:"19", thrust:"2d6-1", swing:"3d6+1"};
		damageTable[20] = {strength:"20", thrust:"2d6-1", swing:"3d6+2"};
		damageTable[21] = {strength:"21", thrust:"2d6", swing:"4d6-1"};
		damageTable[22] = {strength:"22", thrust:"2d6", swing:"4d6"};
		damageTable[23] = {strength:"23", thrust:"2d6+1", swing:"4d6+1"};
		damageTable[24] = {strength:"24", thrust:"2d6+1", swing:"4d6+2"};
		damageTable[25] = {strength:"25", thrust:"2d6+2", swing:"5d6-1"};
		damageTable[26] = {strength:"26", thrust:"2d6+2", swing:"5d6"};
		damageTable[27] = {strength:"27", thrust:"3d6-1", swing:"5d6+1"};
		damageTable[28] = {strength:"28", thrust:"3d6-1", swing:"5d6+1"};
		damageTable[29] = {strength:"29", thrust:"3d6", swing:"5d6+2"};
		damageTable[30] = {strength:"30", thrust:"3d6", swing:"5d6+2"};
		damageTable[31] = {strength:"31", thrust:"3d6+1", swing:"6d6-1"};
		damageTable[32] = {strength:"32", thrust:"3d6+1", swing:"6d6-1"};
		damageTable[33] = {strength:"33", thrust:"3d6+2", swing:"6d6"};
		damageTable[34] = {strength:"34", thrust:"3d6+2", swing:"6d6"};
		damageTable[35] = {strength:"35", thrust:"4d6-1", swing:"6d6+1"};
		damageTable[36] = {strength:"36", thrust:"4d6-1", swing:"6d6+1"};
		damageTable[37] = {strength:"37", thrust:"4d6", swing:"6d6+2"};
		damageTable[38] = {strength:"38", thrust:"4d6", swing:"6d6+2"};
		damageTable[39] = {strength:"39", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[40] = {strength:"40", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[41] = {strength:"41", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[42] = {strength:"42", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[43] = {strength:"43", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[44] = {strength:"44", thrust:"4d6+1", swing:"7d6-1"};
		damageTable[45] = {strength:"45", thrust:"5d6", swing:"7d6+1"};
		damageTable[46] = {strength:"46", thrust:"5d6", swing:"7d6+1"};
		damageTable[47] = {strength:"47", thrust:"5d6", swing:"7d6+1"};
		damageTable[48] = {strength:"48", thrust:"5d6", swing:"7d6+1"};
		damageTable[49] = {strength:"49", thrust:"5d6", swing:"7d6+1"};
		damageTable[50] = {strength:"50", thrust:"5d6+2", swing:"8d6-1"};
		damageTable[51] = {strength:"51", thrust:"5d6+2", swing:"8d6-1"};
		damageTable[52] = {strength:"52", thrust:"5d6+2", swing:"8d6-1"};
		damageTable[53] = {strength:"53", thrust:"5d6+2", swing:"8d6-1"};
		damageTable[54] = {strength:"54", thrust:"5d6+2", swing:"8d6-1"};
		damageTable[55] = {strength:"55", thrust:"6d6", swing:"8d6+1"};	
		damageTable[56] = {strength:"56", thrust:"6d6", swing:"8d6+1"};	
		damageTable[57] = {strength:"57", thrust:"6d6", swing:"8d6+1"};	
		damageTable[58] = {strength:"58", thrust:"6d6", swing:"8d6+1"};	
		damageTable[59] = {strength:"59", thrust:"6d6", swing:"8d6+1"};	
		damageTable[60] = {strength:"60", thrust:"7d6-1", swing:"9d6"};	
		damageTable[61] = {strength:"61", thrust:"7d6-1", swing:"9d6"};	
		damageTable[62] = {strength:"62", thrust:"7d6-1", swing:"9d6"};	
		damageTable[63] = {strength:"63", thrust:"7d6-1", swing:"9d6"};	
		damageTable[64] = {strength:"64", thrust:"7d6-1", swing:"9d6"};	
		damageTable[65] = {strength:"65", thrust:"7d6+1", swing:"9d6+2"};	
		damageTable[66] = {strength:"66", thrust:"7d6+1", swing:"9d6+2"};	
		damageTable[67] = {strength:"67", thrust:"7d6+1", swing:"9d6+2"};	
		damageTable[68] = {strength:"68", thrust:"7d6+1", swing:"9d6+2"};	
		damageTable[69] = {strength:"69", thrust:"7d6+1", swing:"9d6+2"};	
		damageTable[70] = {strength:"70", thrust:"8d6", swing:"10d6"};	
		damageTable[71] = {strength:"71", thrust:"8d6", swing:"10d6"};	
		damageTable[72] = {strength:"72", thrust:"8d6", swing:"10d6"};	
		damageTable[73] = {strength:"73", thrust:"8d6", swing:"10d6"};	
		damageTable[74] = {strength:"74", thrust:"8d6", swing:"10d6"};	
		damageTable[75] = {strength:"75", thrust:"8d6+2", swing:"10d6+2"};
		damageTable[76] = {strength:"76", thrust:"8d6+2", swing:"10d6+2"};
		damageTable[77] = {strength:"77", thrust:"8d6+2", swing:"10d6+2"};
		damageTable[78] = {strength:"78", thrust:"8d6+2", swing:"10d6+2"};
		damageTable[79] = {strength:"79", thrust:"8d6+2", swing:"10d6+2"};
		damageTable[80] = {strength:"80", thrust:"9d6", swing:"11d6"};
		damageTable[81] = {strength:"81", thrust:"9d6", swing:"11d6"};
		damageTable[82] = {strength:"82", thrust:"9d6", swing:"11d6"};
		damageTable[83] = {strength:"83", thrust:"9d6", swing:"11d6"};
		damageTable[84] = {strength:"84", thrust:"9d6", swing:"11d6"};
		damageTable[85] = {strength:"85", thrust:"9d6+2", swing:"11d6+2"};
		damageTable[86] = {strength:"86", thrust:"9d6+2", swing:"11d6+2"};
		damageTable[87] = {strength:"87", thrust:"9d6+2", swing:"11d6+2"};
		damageTable[88] = {strength:"88", thrust:"9d6+2", swing:"11d6+2"};
		damageTable[89] = {strength:"89", thrust:"9d6+2", swing:"11d6+2"};
		damageTable[90] = {strength:"90", thrust:"10d6", swing:"12d6"};
		damageTable[91] = {strength:"91", thrust:"10d6", swing:"12d6"};
		damageTable[92] = {strength:"92", thrust:"10d6", swing:"12d6"};
		damageTable[93] = {strength:"93", thrust:"10d6", swing:"12d6"};
		damageTable[94] = {strength:"94", thrust:"10d6", swing:"12d6"};
		damageTable[95] = {strength:"95", thrust:"10d6+2", swing:"12d6+2"};
		damageTable[96] = {strength:"96", thrust:"10d6+2", swing:"12d6+2"};
		damageTable[97] = {strength:"97", thrust:"10d6+2", swing:"12d6+2"};
		damageTable[98] = {strength:"98", thrust:"10d6+2", swing:"12d6+2"};
		damageTable[99] = {strength:"99", thrust:"10d6+2", swing:"12d6+2"};
		damageTable[100] = {strength:"100", thrust:"11d6", swing:"13d6"};

		return damageTable;

	}



	// -------------encumbrance-----------------------------------------------
	on('sheet:opened change:repeating_item', function(){
		TAS.repeating('item')
			.attrs('total_weight_x', 'total_weight_a', 'total_weight_b', 'total_weight_c','total_cost_x', 'total_cost_a', 'total_cost_b', 'total_cost_c' )
			.fields('count','carried_a','carried_b','carried_c','weight','weighttotal','weighttotal_a', 'weighttotal_b', 'weighttotal_c', 'cost','costtotal', 'costtotal_a', 'costtotal_b', 'costtotal_c')
			.reduce(function(m,r){
				m.weight+=(r.F.weight*r.I.count);
				m.weight_a+=(r.F.weight*r.I.count*r.I.carried_a);
				m.weight_b+=(r.F.weight*r.I.count*r.I.carried_b);
				m.weight_c+=(r.F.weight*r.I.count*r.I.carried_c);
				r.D[2].weighttotal = (r.F.weight * r.I.count);
				r.D[2].weighttotal_a = (r.F.weight * r.I.count * r.I.carried_a);
				r.D[2].weighttotal_b = (r.F.weight * r.I.count * r.I.carried_b);
				r.D[2].weighttotal_c = (r.F.weight * r.I.count * r.I.carried_c);
				r.D[2].costtotal = (r.F.cost * r.I.count);
				r.D[2].costtotal_a = (r.F.cost * r.I.count * r.I.carried_a);
				r.D[2].costtotal_b = (r.F.cost * r.I.count * r.I.carried_b);
				r.D[2].costtotal_c = (r.F.cost * r.I.count * r.I.carried_c);
				m.cost+=(r.F.cost*r.I.count);
				m.cost_a+=(r.F.cost*r.I.count*r.I.carried_a);
				m.cost_b+=(r.F.cost*r.I.count*r.I.carried_b);
				m.cost_c+=(r.F.cost*r.I.count*r.I.carried_c);
				return m;			
			},{weight:0,cost:0,weight_a:0,cost_a:0,weight_b:0,cost_b:0,weight_c:0,cost_c:0},function(m,r,a){          
				a.D[2].total_weight_x=m.weight;
				a.D[2].total_cost_x=m.cost;
				a.D[2].total_weight_a=m.weight_a;
				a.D[2].total_cost_a=m.cost_a;
				a.D[2].total_weight_b=m.weight_b;
				a.D[2].total_cost_b=m.cost_b;
				a.D[2].total_weight_c=m.weight_c;
				a.D[2].total_cost_c=m.cost_c;
				})
				.execute();
	});

	on('sheet:opened change:loadoutchoice change:total_weight_a change:total_weight_b change:total_weight_c',
		function (e) {
			getAttrs(['loadoutchoice', 'total_weight_a', 'total_weight_b',
				'total_weight_c'
			], function (v) {
				var weight;
				switch (+v.loadoutchoice) {
				case 1:
					weight = +v.total_weight_a;
					break;
				case 2:
					weight = +v.total_weight_b;
					break;
				case 3:
					weight = +v.total_weight_c;
					break;
				}
				setAttrs({
					total_weight: weight
				});
			});
		});

	// Get Encumbrance Level:
	on('change:total_weight change:basic_lift', function (e) {
		updateEncLevel();
	});
	function updateEncLevel(callback) {
		getAttrs(['basic_lift', 'total_weight'], function (v) {
			callback = callback || noop;
			var basicLift = +v.basic_lift;
			var encumbranceLevel = Math.floor(v.total_weight / basicLift);
			if (encumbranceLevel > 0 && (v.total_weight % basicLift) ===
				0) {
				encumbranceLevel--;
			}
			if (encumbranceLevel >= 10) {
				encumbranceLevel = 4;
			} else if (encumbranceLevel >= 6) {
				encumbranceLevel = 4;
			} else if (encumbranceLevel >= 3) {
				encumbranceLevel = 3;
			}
			setAttrs(
				{ encumbrance_level: encumbranceLevel },
					{silent: false},
				callback
			);
		});
	}
  // check to see if ground move mod or move points changed
    on("change:enhanced_ground_move_mod change:enhanced_ground_move_points change:basic_move change:encumbrance_level change:hit_points change:fatigue_points", function(e) {
        
        updateEnhancedMove();
        
    });
    
    /**
     * Get the attributes for enhanced ground move modifier and points spent
     * Update the fields for ground multiple and ground move based on mod and points
     */
   function updateEnhancedMove() {
        
        console.log('***** UPDATE ENHANCED MOVE *****');
		    
        getAttrs(["enhanced_ground_move_mod", "enhanced_ground_move_points", "basic_move", "encumbrance_level", "hit_points", "hit_points_max", "fatigue_points", "fatigue_points_max"], function(values) {

            // + sign converts value to a number
            var groundModifier = +values.enhanced_ground_move_mod;
            
            var groundPoints = +values.enhanced_ground_move_points;
            
            var groundModifierFromPoints = 0;
            
            var totalModifier = 0;
            
            var basicMove = +values.basic_move;
            
            var enhancedMove = 0;
            
            // encumbrance levels
            var enhancedMove0 = "";
            
            var enhancedMove1 = "";
            
            var enhancedMove2 = "";
            
            var enhancedMove3 = "";
            
            var enhancedMove4 = "";
            
            var enhancedMove5 = "";
            
            var encumberedEnhancedMove1 = 0;
            
            var encumberedEnhancedMove2 = 0;
            
            var encumberedEnhancedMove3 = 0; 
            
            var encumberedEnhancedMove4 = 0; 
            
            // current speed based on encumbrance and pain/fatigue
            var currentEnhancedMove = "";
            
            var injuryFatigueMoveModifier = 1;
            
            // validate groundModifer
            if (groundModifier < 0) {
                groundModifier = 0;
            }
            
            // make sure groundModifier is multiple of .5
            // https://stackoverflow.com/questions/25209849/javascript-round-up-to-nearest-5 
            groundModifier = Math.ceil(groundModifier * 2) / 2;
            
            // validate groundPoints
            if (groundPoints < 0) {
                groundPoints = 0;
            }
            
            // make sure groundPoints is multiple of 10
            // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
            groundPoints = Math.ceil(groundPoints / 10) * 10;
            
            groundModifierFromPoints = groundPoints / 20;
            
            totalModifier = groundModifier + groundModifierFromPoints;
            
            enhancedMove = getEnhancedValue(basicMove, totalModifier);
            
            if (totalModifier > 0) {            
                encumberedDisplayMove0 = basicMove + "/" + enhancedMove;     
                
				move1 = getEncumberedMove(basicMove, 1);
				encumberedEnhancedMove1 = getEncumberedMove(enhancedMove, 1);
                encumberedDisplayMove1 = move1 + "/" + encumberedEnhancedMove1;
               
			    move2 = getEncumberedMove(basicMove, 2);
                encumberedEnhancedMove2 = getEncumberedMove(enhancedMove, 2);
                encumberedDisplayMove2 = move2 + "/" + encumberedEnhancedMove2;
                
                move3 = getEncumberedMove(basicMove, 3);
                encumberedEnhancedMove3 = getEncumberedMove(enhancedMove, 3);
                encumberedDisplayMove3 = move3 + "/" + encumberedEnhancedMove3;
                    
                move4 = getEncumberedMove(basicMove, 4);
                encumberedEnhancedMove4 = getEncumberedMove(enhancedMove, 4);
                encumberedDisplayMove4 = move4 + "/" + encumberedEnhancedMove4;
                } else {
				encumberedDisplayMove0 = basicMove;
				encumberedDisplayMove1 = getEncumberedMove(basicMove, 1);
				encumberedDisplayMove2 = getEncumberedMove(basicMove, 2);
				encumberedDisplayMove3 = getEncumberedMove(basicMove, 3);
				encumberedDisplayMove4 = getEncumberedMove(basicMove, 4);
				}
                
                // check for half move
                injuryFatigueMoveModifier = getInjuryFatigueModifier(values.hit_points, values.hit_points_max, values.fatigue_points, values.fatigue_points_max);
                
                // determine the current encumbrance move
                switch(values.encumbrance_level) {
                    
                    case 0:
                        currentEnhancedMove = Math.floor(+basicMove * injuryFatigueMoveModifier) + "/" + Math.floor(+enhancedMove * injuryFatigueMoveModifier);
                        break;
                        
                    case 1:
                        currentEnhancedMove = Math.floor(+move1 * injuryFatigueMoveModifier) + "/" + Math.floor(+encumberedEnhancedMove1 * injuryFatigueMoveModifier);
                        break;
                        
                    case 2:
                        currentEnhancedMove = Math.floor(+move2 * injuryFatigueMoveModifier) + "/" + Math.floor(+encumberedEnhancedMove2 * injuryFatigueMoveModifier);
                        break;
                        
                    case 3:
                        currentEnhancedMove = Math.floor(+move3 * injuryFatigueMoveModifier) + "/" + Math.floor(+encumberedEnhancedMove3 * injuryFatigueMoveModifier);
                        break;
                        
                    case 4:
                    case 5:
                    default:
                        currentEnhancedMove = Math.floor(+move4 * injuryFatigueMoveModifier) + "/" + Math.floor(+encumberedEnhancedMove4 * injuryFatigueMoveModifier);
                        break;
                    
                }
                
            
            
            // set values and making sure modifiers are correct multiples
            setAttrs({
                "enhanced_ground_move_mod": groundModifier, 
                "enhanced_ground_move_points": groundPoints,
                "enhanced_ground_move_multiple": totalModifier,
                "enhanced_ground_move": enhancedMove,
                "move_0": encumberedDisplayMove0,
                "move_1": encumberedDisplayMove1,
                "move_2": encumberedDisplayMove2,
                "move_3": encumberedDisplayMove3,
                "move_4": encumberedDisplayMove4,
                "move_5": enhancedMove5,
                "move_current": currentEnhancedMove
            });

			
		});
        
    }
    
    /**
     * Calculates move based on encumbrance level
     * encumbrance level 1-4. 5 is the same as 4, just costs fatigue
     * 
     * @param int    basicMove Starting basic move
     * @param string encumbranceLevel Encumbrance level 1-4
     * 
     * @return int
     */
    function getEncumberedMove(basicMove, encumbranceLevel) {
        
        var newMove = 0;
        
        var encumbranceModifier = 0;
        
        // make sure we have a good value
        if (encumbranceLevel < 1) {
            encumbranceLevel = 1;    
        } else if (encumbranceLevel > 4) {
            encumbranceLevel = 4;
        }
        
        encumbranceModifier = 1 - ((encumbranceLevel*2)/10);
        
        // fix floating point bug
        // see: https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary
        encumbranceModifier = Math.round(encumbranceModifier * 100) / 100; 
        
        newMove = Math.floor(basicMove * encumbranceModifier);
        
        // minimum move is 1
        if (newMove <= 0) {
            newMove = 1;
        }
        
        return newMove;
        
    }
    
    /**
     * Calculate the enhanced value for multiples of 2. 
     * If .5 value, then multiply by 1.5
     * see GURPS Basic Set, page 52 enhanced move
     * 
     * @param int     baseValue Value to multiply
     * @param decimal level     Level of enhanced move to apply to baseValue
     * 
     * @return int
     */
    function getEnhancedValue(baseValue, level) {
        
        var enhancedValue = 0;
        
        // check for formula to use
        if (level == 0) {
            
            enhancedValue = 0;
            
        } else if (level % 1 == 0) {
        
            // if no remainder, use this formula
            enhancedValue = baseValue * Math.pow(2, level);
            
        } else {
            
            // if there is a remainder, use this formula
            // remove the .5 and then multiply by 1.5
            enhancedValue = (baseValue * Math.pow(2, Math.floor(level))) * 1.5;
            
            enhancedValue = Math.floor(enhancedValue);
            
        }
        return enhancedValue;
            
    }
    
    /**
     * Checks for 1/3 HP and 1/3 FP. 
     * Apply move modifies
     * 
     * @param int hit_points         Current hit points of character
     * @param int hit_points_max     Max HP of character
     * @param int fatigue_points     Current FP of character
     * @param int fatigue_points_max Max FP of character
     * 
     * @return decimal
     */
    function getInjuryFatigueModifier(hit_points, hit_points_max, fatigue_points, fatigue_points_max) {
        
        var modifier = 1;
        
        if (+hit_points < +hit_points_max / 3) {
				
			modifier = modifier / 2;
			
		}
		
		if (+fatigue_points < +fatigue_points_max / 3 ) {
			
			modifier = modifier / 2;
			
		}
			
        return modifier;
        
    } 
    
    // check for changes that affect flight speed
    on("change:flight_checked change:basic_speed change:basic_air_move_points change:basic_air_move_mod change:enhanced_air_level change:enhanced_air_move_points change:encumbrance_level change:hit_points change:fatigue_points", function(e) {
        
        updateFlightValues();
        
    });
    
    /**
     * Update flight values, including encumbered and current speed
     * 
     * @return void
     */
    function updateFlightValues() {
        
        console.log('***** UPDATE FLIGHT VALUES *****');
		    
        getAttrs(["flight_checked", "basic_speed", "enhanced_air_level", "basic_air_move", "basic_air_move_mod", 
                  "basic_air_move_points", "enhanced_air_level", "enhanced_air_move_points", 
                  "encumbrance_level", "hit_points", "hit_points_max", "fatigue_points", "fatigue_points_max"], function(values) {
            
            // + sign converts value to a number
            var airMovePoints = +values.basic_air_move_points;
            
            // ensure valid airMovePoints
            if (airMovePoints < 0) {
                airMovePoints = 0;
            }
            
            var basicAirMoveMod = +values.basic_air_move_mod;
            
            // ensure valid basicAirMoveMod
            if (basicAirMoveMod < 0) {
                basicAirMoveMod = 0;    
            }
            
            var airMoveUnmodified = 0;
            
            var airMove = 0;
            
            var airModifierFromPoints = 0;
            
            var baseEnhancedAirMove = "";
            
            var enhancedAirLevel = 0;
            
            var enhancedEnteredLevel = +values.enhanced_air_level;
            
            var encumberedDisplayMove0 = "";
            
            var encumberedDisplayMove1 = "";
            
            var encumberedDisplayMove2 = "";
            
            var encumberedDisplayMove3 = "";
            
            var encumberedDisplayMove4 = "";
            
            var encumberedDisplayMove5 = "";
            
            var currentAirMove = "";
            
            // ensure valid enhancedEnteredLevel
            if (enhancedEnteredLevel < 0) {
                enhancedEnteredLevel = 0;
            }    
            
            var enhancedEnteredPoints = +values.enhanced_air_move_points;
            
            // ensure valid enhancedEnteredPoints
            if (enhancedEnteredPoints < 0) {
                enhancedEnteredPoints = 0;
            }
            
            var enhancedAirLevelFromPoints = 0;
            
            var totalEnhancedLevel = 0;
            
            var injuryFatigueMoveModifier = 1;
            
            // if flight is checked, calculate the values
            if (values.flight_checked == 1) {
                
                //----------------
                // calculate air move
                airMoveUnmodified = Math.floor(+values.basic_speed * 2);
                
                // base is basis_speed * 2
                airMove = Math.floor(+values.basic_speed * 2);
                
                // add air move modifier
                airMove = airMove + basicAirMoveMod;
                
                // make sure airMovePoints is multiple of 2
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                airMovePoints = Math.ceil(airMovePoints / 2) * 2;    
                
                airModifierFromPoints = airMovePoints/2;
                
                // add in the air move from spent points
                airMove = airMove + airModifierFromPoints;
                
                //-----------------
                // calculate top air speed
                // make sure groundPoints is multiple of 10
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                enhancedEnteredPoints = Math.ceil(enhancedEnteredPoints / 10) * 10;
                
                enhancedAirLevelFromPoints = enhancedEnteredPoints / 20;
                
                // make sure enhancedEnteredLevel is multiple of .5
                // https://stackoverflow.com/questions/25209849/javascript-round-up-to-nearest-5 
                enhancedEnteredLevel = Math.ceil(enhancedEnteredLevel * 2) / 2;
                
                totalEnhancedLevel = enhancedEnteredLevel + enhancedAirLevelFromPoints;
                
                baseEnhancedAirMove = getEnhancedValue(airMove, totalEnhancedLevel);
                
                // get the encumbered levels
                if (baseEnhancedAirMove > 0) {
                
                    // show the enhanced move
                    encumberedDisplayMove0 = airMove + "/" + baseEnhancedAirMove;
                
                    encumberedDisplayMove1 = getEncumberedMove(airMove, 1) + "/" + getEncumberedMove(baseEnhancedAirMove, 1);
                    
                    encumberedDisplayMove2 = getEncumberedMove(airMove, 2) + "/" + getEncumberedMove(baseEnhancedAirMove, 2);
                    
                    encumberedDisplayMove3 = getEncumberedMove(airMove, 3) + "/" + getEncumberedMove(baseEnhancedAirMove, 3);
                    
                    encumberedDisplayMove4 = getEncumberedMove(airMove, 4) + "/" + getEncumberedMove(baseEnhancedAirMove, 4);
                    
                    encumberedDisplayMove5 = encumberedDisplayMove4;
                        
                } else {
                    
                    // don't need the enhanced move
                    encumberedDisplayMove0 = airMove;
                
                    encumberedDisplayMove1 = getEncumberedMove(airMove, 1);
                    
                    encumberedDisplayMove2 = getEncumberedMove(airMove, 2);
                    
                    encumberedDisplayMove3 = getEncumberedMove(airMove, 3);
                    
                    encumberedDisplayMove4 = getEncumberedMove(airMove, 4);
                    
                    encumberedDisplayMove5 = encumberedDisplayMove4;
                
                }
                
                // check for half move
                injuryFatigueMoveModifier = getInjuryFatigueModifier(values.hit_points, values.hit_points_max, values.fatigue_points, values.fatigue_points_max);
                
                // determine the current encumbrance move
                switch(values.encumbrance_level) {
                    
                    case 0:
                        currentAirMove = (airMove * injuryFatigueMoveModifier);
                        
                        if (baseEnhancedAirMove > 0) {
                            
                            currentAirMove = currentAirMove + "/" + (baseEnhancedAirMove * injuryFatigueMoveModifier);
                        }
                        
                        break;
                        
                    case 1:
                        
                        currentAirMove = (getEncumberedMove(airMove, 1) * injuryFatigueMoveModifier);
                        
                        if (baseEnhancedAirMove > 0) {
                            
                            currentAirMove = currentAirMove + "/" + (getEncumberedMove(baseEnhancedAirMove, 1) * injuryFatigueMoveModifier);
                        }
                        
                        break;
                        
                    case 2:
                        
                        currentAirMove = (getEncumberedMove(airMove, 2) * injuryFatigueMoveModifier);
                        
                        if (baseEnhancedAirMove > 0) {
                            
                            currentAirMove = currentAirMove + "/" + (getEncumberedMove(baseEnhancedAirMove, 2) * injuryFatigueMoveModifier);
                        }
                        
                        break;
                        
                    case 3:
                        
                        currentAirMove = (getEncumberedMove(airMove, 3) * injuryFatigueMoveModifier);
                        
                        if (baseEnhancedAirMove > 0) {
                            
                            currentAirMove = currentAirMove + "/" + (getEncumberedMove(baseEnhancedAirMove, 3) * injuryFatigueMoveModifier);
                        }
                        
                        break;
                        
                    case 4:
                    case 5:
                    default:
                        
                        currentAirMove = (getEncumberedMove(airMove, 4) * injuryFatigueMoveModifier);
                        
                        if (baseEnhancedAirMove > 0) {
                            
                            currentAirMove = currentAirMove + "/" + (getEncumberedMove(baseEnhancedAirMove, 4) * injuryFatigueMoveModifier);
                        }
                        
                        break;
                    
                }
                        

            } else {
                
                airMove = 0;
                
                baseEnhancedAirMove = 0;
                
                currentAirMove = 0;
				
				encumberedDisplayMove0 = 0;
				encumberedDisplayMove1 = 0;
				encumberedDisplayMove2 = 0;
				encumberedDisplayMove3 = 0;
				encumberedDisplayMove4 = 0;
                
            }
            
            // set air moves
            setAttrs({
                "basic_air_move": airMove, 
                "basic_air_move_unmodified": airMoveUnmodified, 
                "enhanced_air_move": baseEnhancedAirMove,
                "enhanced_air_move_level": totalEnhancedLevel,
                "basic_air_move_points": airMovePoints,
                "enhanced_air_move_points": enhancedEnteredPoints,
                "air_0": encumberedDisplayMove0,
                "air_1": encumberedDisplayMove1,
                "air_2": encumberedDisplayMove2,
                "air_3": encumberedDisplayMove3,
                "air_4": encumberedDisplayMove4,
                "current_air": currentAirMove
            });
                
            
        });
        
    }
    
    // check for changes that affect water speed
    on("change:amphibious_checked change:basic_move change:basic_water_move_points change:basic_water_move_mod change:enhanced_water_level change:enhanced_water_move_points change:encumbrance_level change:hit_points change:fatigue_points", function(e) {
        
        updateWaterMoveValues();
        
    });
    
    /**
     * Update water move values, including encumbered and current speed
     * 
     * @return void
     */
    function updateWaterMoveValues() {
        
        console.log('***** UPDATE WATER MOVE VALUES *****');
		    
        getAttrs(["amphibious_checked", "basic_move", "enhanced_water_level", "basic_water_move", "basic_water_move_mod", 
                  "basic_water_move_points", "enhanced_water_level", "enhanced_water_move_points", 
                  "encumbrance_level", "hit_points", "hit_points_max", "fatigue_points", "fatigue_points_max"], function(values) {
            
            // + sign converts value to a number
            var waterMovePoints = +values.basic_water_move_points;
            
            // ensure valid waterMovePoints
            if (waterMovePoints < 0) {
                waterMovePoints = 0;
            }
            
            var basicWaterMoveMod = +values.basic_water_move_mod;
            
            // ensure valid basicWaterMoveMod
            if (basicWaterMoveMod < 0) {
                basicWaterMoveMod = 0;    
            }
            
            var waterMoveUnmodified = 0;
            
            var waterMove = 0;
            
            var waterModifierFromPoints = 0;
            
            var baseEnhancedWaterMove = "";
            
            var enhancedWaterLevel = 0;
            
            var enhancedEnteredLevel = +values.enhanced_water_level;
            
            var encumberedDisplayMove0 = "";
            
            var encumberedDisplayMove1 = "";
            
            var encumberedDisplayMove2 = "";
            
            var encumberedDisplayMove3 = "";
            
            var encumberedDisplayMove4 = "";
            
            var encumberedDisplayMove5 = "";
            
            var currentWaterMove = "";
            
            // ensure valid enhancedEnteredLevel
            if (enhancedEnteredLevel < 0) {
                enhancedEnteredLevel = 0;
            }    
            
            var enhancedEnteredPoints = +values.enhanced_water_move_points;
            
            // ensure valid enhancedEnteredPoints
            if (enhancedEnteredPoints < 0) {
                enhancedEnteredPoints = 0;
            }
            
            var enhancedWaterLevelFromPoints = 0;
            
            var totalEnhancedLevel = 0;
            
            var injuryFatigueMoveModifier = 1;
            
            // if flight is checked, calculate the values
            if (values.amphibious_checked == 1 && (enhancedEnteredPoints > 0 || enhancedEnteredLevel > 0)) {
                
                //----------------
                // calculate water move
                waterMoveUnmodified = +values.basic_move;
                
                // determine move
                if (values.amphibious_checked == 1) {
                    // base is basis_move
                    waterMove = +values.basic_move;    
                    
                } else {
                
                    // base is basis_move / 5
                    waterMove = +values.basic_move / 5;    
                }
                
                // add water move modifier
                waterMove = waterMove + basicWaterMoveMod;
                
                // make sure waterMovePoints is multiple of 5
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                waterMovePoints = Math.ceil(waterMovePoints / 5) * 5;    
                
                waterModifierFromPoints = waterMovePoints/5;
                
                // add in the water move from spent points
                waterMove = waterMove + waterModifierFromPoints;
                
                waterMove = Math.floor(waterMove);
                
                // make sure it's a minimum of 1.
                if (waterMove <= 0) {
                    waterMove = 1;
                }
                
                //-----------------
                // calculate top water speed
                // make sure groundPoints is multiple of 10
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                enhancedEnteredPoints = Math.ceil(enhancedEnteredPoints / 10) * 10;
                
                enhancedWaterLevelFromPoints = enhancedEnteredPoints / 20;
                
                // make sure enhancedEnteredLevel is multiple of .5
                // https://stackoverflow.com/questions/25209849/javascript-round-up-to-nearest-5 
                enhancedEnteredLevel = Math.ceil(enhancedEnteredLevel * 2) / 2;
                
                totalEnhancedLevel = enhancedEnteredLevel + enhancedWaterLevelFromPoints;
                
                baseEnhancedWaterMove = getEnhancedValue(waterMove, totalEnhancedLevel);
                
                // get the encumbered levels
                encumberedDisplayMove0 = waterMove + "/" + baseEnhancedWaterMove;
                
                encumberedDisplayMove1 = getEncumberedMove(waterMove, 1) + "/" + getEncumberedMove(baseEnhancedWaterMove, 1);
                
                encumberedDisplayMove2 = getEncumberedMove(waterMove, 2) + "/" + getEncumberedMove(baseEnhancedWaterMove, 2);
                
                encumberedDisplayMove3 = getEncumberedMove(waterMove, 3) + "/" + getEncumberedMove(baseEnhancedWaterMove, 3);
                
                encumberedDisplayMove4 = getEncumberedMove(waterMove, 4) + "/" + getEncumberedMove(baseEnhancedWaterMove, 4);
                
                encumberedDisplayMove5 = encumberedDisplayMove4;
                
                // check for half move
                injuryFatigueMoveModifier = getInjuryFatigueModifier(values.hit_points, values.hit_points_max, values.fatigue_points, values.fatigue_points_max);
                
                // determine the current encumbrance move
                switch(values.encumbrance_level) {
                    
                    case 0:
                        currentWaterMove = (waterMove * injuryFatigueMoveModifier) + "/" + (baseEnhancedWaterMove * injuryFatigueMoveModifier);
                        break;
                        
                    case 1:
                        currentWaterMove = (getEncumberedMove(waterMove, 1) * injuryFatigueMoveModifier) + "/" + (getEncumberedMove(baseEnhancedWaterMove, 1) * injuryFatigueMoveModifier);
                        break;
                        
                    case 2:
                        currentWaterMove = (getEncumberedMove(waterMove, 2) * injuryFatigueMoveModifier) + "/" + (getEncumberedMove(baseEnhancedWaterMove, 2) * injuryFatigueMoveModifier);
                        break;
                        
                    case 3:
                        currentWaterMove = (getEncumberedMove(waterMove, 3) * injuryFatigueMoveModifier) + "/" + (getEncumberedMove(baseEnhancedWaterMove, 3) * injuryFatigueMoveModifier);
                        break;
                        
                    case 4:
                    case 5:
                    default:
                        currentWaterMove = (getEncumberedMove(waterMove, 4) * injuryFatigueMoveModifier) + "/" + (getEncumberedMove(baseEnhancedWaterMove, 4) * injuryFatigueMoveModifier);
                        break;
                    
                }

            } else {
                
                //----------------
                // calculate water move
                waterMoveUnmodified = +values.basic_move;
                
                // determine move
                if (values.amphibious_checked == 1) {
                    // base is basis_move
                    waterMove = +values.basic_move;    
                    
                } else {
                
                    // base is basis_move / 5
                    waterMove = +values.basic_move / 5;    
                }
                
                // add water move modifier
                waterMove = waterMove + basicWaterMoveMod;
                
                waterMove = Math.floor(waterMove);
                
                // make sure it's a minimum of 1.
                if (waterMove <= 0) {
                    waterMove = 1;
                }
                
                // make sure waterMovePoints is multiple of 5
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                waterMovePoints = Math.ceil(waterMovePoints / 5) * 5;    
                
                waterModifierFromPoints = waterMovePoints/5;
                
                // add in the water move from spent points
                waterMove = waterMove + waterModifierFromPoints;
                
                baseEnhancedWaterMove = 0;
                
                currentWaterMove = 0;
                
                // get the encumbered levels
                encumberedDisplayMove0 = waterMove;
                
                encumberedDisplayMove1 = getEncumberedMove(waterMove, 1);
                
                encumberedDisplayMove2 = getEncumberedMove(waterMove, 2);
                
                encumberedDisplayMove3 = getEncumberedMove(waterMove, 3);
                
                encumberedDisplayMove4 = getEncumberedMove(waterMove, 4);
                
                encumberedDisplayMove5 = encumberedDisplayMove4;
                
                // check for half move
                injuryFatigueMoveModifier = getInjuryFatigueModifier(values.hit_points, values.hit_points_max, values.fatigue_points, values.fatigue_points_max);
                
                // determine the current encumbrance move
                switch(values.encumbrance_level) {
                    
                    case 0:
                        currentWaterMove = (waterMove * injuryFatigueMoveModifier);
                        break;
                        
                    case 1:
                        currentWaterMove = (getEncumberedMove(waterMove, 1) * injuryFatigueMoveModifier);
                        break;
                        
                    case 2:
                        currentWaterMove = (getEncumberedMove(waterMove, 2) * injuryFatigueMoveModifier);
                        break;
                        
                    case 3:
                        currentWaterMove = (getEncumberedMove(waterMove, 3) * injuryFatigueMoveModifier);
                        break;
                        
                    case 4:
                    case 5:
                    default:
                        currentWaterMove = (getEncumberedMove(waterMove, 4) * injuryFatigueMoveModifier);
                        break;
                    
                }
                
            }
            
            // set water moves
            setAttrs({
                "basic_water_move": waterMove, 
                "basic_water_move_unmodified": waterMoveUnmodified, 
                "enhanced_water_move": baseEnhancedWaterMove,
                "enhanced_water_move_level": totalEnhancedLevel,
                "basic_water_move_points": waterMovePoints,
                "enhanced_water_move_points": enhancedEnteredPoints,
                "water_0": encumberedDisplayMove0,
                "water_1": encumberedDisplayMove1,
                "water_2": encumberedDisplayMove2,
                "water_3": encumberedDisplayMove3,
                "water_4": encumberedDisplayMove4,
                "current_water": currentWaterMove
            });
                
            
        });
        
    }
    
    // check for changes that affect jump distance
    on("change:use_st_for_jump change:jump_skill change:basic_move change:enhanced_ground_move change:super_jump_entered_level change:super_jump_points change:jump_concentration change:running_jump_yards_moved change:running_high_jump_yards_moved change:strength change:encumbrance_level change:hit_points change:fatigue_points", function(e) {
        
        updateJumpDistanceValues();
        
    });
    
    /**
     * Update jump distance values
     */
    function updateJumpDistanceValues() {
        
        console.log('***** UPDATE JUMP VALUES *****');
		    
        getAttrs(["use_st_for_jump", "jump_skill", "basic_move", "enhanced_ground_move", "super_jump_entered_level", 
                  "super_jump_points", "strength", "jump_concentration", "running_jump_yards_moved", "running_high_jump_yards_moved", 
                  "encumbrance_level", "hit_points", "hit_points_max", "fatigue_points", "fatigue_points_max"], function(values) {
            
            var jumpSkill = +values.jump_skill;
            
            if (jumpSkill < 0) {
                jumpSkill = 0;
            }
            
            var jumpST = +values.strength;
            
            if (jumpST < 0) {
                jumpST = 0;
            }
            
            // + sign converts value to a number
            var superJumpPoints = +values.super_jump_points;
            
            // ensure valid superJumpPoints
            if (superJumpPoints < 0) {
                superJumpPoints = 0;
            }
            
            var superJumpEnteredLevel = +values.super_jump_entered_level;
            
            if (superJumpEnteredLevel < 0) {
                superJumpEnteredLevel = 0;
            }
            
            var basicMove = +values.basic_move;
            
            // ensure valid basicWaterMoveMod
            if (basicMove < 0) {
                basicMove = 0;    
            }
            
            // check for super move
            var enhancedGroundMove = +values.enhanced_ground_move;
            
            if (enhancedGroundMove < 0) {
                enhancedGroundMove = 0;
            }
            
            // check for running jump
            var runningJumpYardsMoved = +values.running_jump_yards_moved;
            
            runningJumpYardsMoved = Math.floor(runningJumpYardsMoved);
            
            var runningHighJumpYardsMoved = +values.running_high_jump_yards_moved;
            
            runningHighJumpYardsMoved = Math.floor(runningHighJumpYardsMoved);
            
            var runningMoveToUse = 0;
            
            var runningHighMoveToUse = 0;
            
            var jumpBroadFeet = 0;
            
            var jumpBroadYards = 0;
            
            var runningBroadJumpFeet = 0;
            
            var runningBroadJumpYards = 0;
            
            var jumpHighFeet = 0;
            
            var jumpHighYards = 0;
            
            var runningHighJumpFeet = 0;
            
            var runningHighJumpYards = 0;
            
            var superJumpLevelFromPoints = 0;
            
            var totalSuperJumpLevel = 0;
            
            var encumberedDisplayMove0 = "";
            
            var encumberedDisplayMove1 = "";
            
            var encumberedDisplayMove2 = "";
            
            var encumberedDisplayMove3 = "";
            
            var encumberedDisplayMove4 = "";
            
            var encumberedDisplayMove5 = "";
            
            var totalSuperJumpLevel = 0;
            
            var injuryFatigueMoveModifier = 1;
            
            var jumpMoveSpeed = 0;
            
            var finalJumpMoveSpeed = 0;
            
            var statUsedForJump = "";
            
            var statUsedForRunningJump = "";
            
            var baseJumpMove = "";
            
            // calculate broad and high jump
            if (jumpSkill > 0) {
                
                // -------------
                // USE JUMP SKILL
                baseJumpMove = Math.floor(jumpSkill/2);
                
                // calc. standing broad jump
                jumpBroadFeet = baseJumpMove;
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                statUsedForJump = "Jump Skill/2 = " + jumpBroadFeet;
                
                jumpBroadFeet = (jumpBroadFeet * 2) - 3;
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                // calc. running broad jump
                if (enhancedGroundMove > Math.floor(jumpSkill/2)) {
                    
                    // use enhanced move instead of jump skill
                    statUsedForRunningJump = "Basic Move * (2 ^ Enh MV Mod)";
                    
                    runningMoveToUse = enhancedGroundMove;
                    
                    runningHighMoveToUse = enhancedGroundMove;
                    
                } else {
                    
                    // use jump skill for running jump
                    statUsedForRunningJump = statUsedForJump + " + Yards Run";
                    
                    runningMoveToUse = Math.floor(jumpSkill/2) + runningJumpYardsMoved;
                    
                    runningHighMoveToUse = Math.floor(jumpSkill/2) + runningHighJumpYardsMoved;
                    
                }
                
                runningBroadJumpFeet = (runningMoveToUse * 2) - 3;
                
                if (runningBroadJumpFeet <= 0) {
                    
                    runningBroadJumpFeet = 1;
                    
                }
                
                // calc. standing high jump
                jumpHighFeet = Math.floor(jumpSkill/2);
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                jumpHighFeet = (6 * jumpHighFeet) - 10;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // convert to feet
                // round to 2 decimals
                // https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary
                jumpHighFeet = Math.round( (jumpHighFeet / 12) * 100) / 100;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // calc. running high jump
                runningHighJumpFeet = (6 * runningHighMoveToUse) - 10;
                
                if (runningHighJumpFeet <= 0) {
                    runningHighJumpFeet = 1;
                }
                
                // convert to feet
                runningHighJumpFeet = Math.floor(runningHighJumpFeet / 12);
                
                if (runningHighJumpFeet <= 0) {
                    
                    runningHighJumpFeet = 1;
                    
                } else if (runningHighJumpFeet > jumpHighFeet * 2) {
                    
                    // can't be greater than twice standing broad jump
                    runningHighJumpFeet = jumpHighFeet * 2;
                    
                }
                
            } else if (values.use_st_for_jump == "1") {
                
                //-------------------------------
                // USE Strength to determine jump
                baseJumpMove = Math.floor(jumpST/4);
                
                // calc. standing broad jump
                jumpBroadFeet = baseJumpMove;
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                statUsedForJump = "ST / 4 = " + jumpBroadFeet;
                
                jumpBroadFeet = (jumpBroadFeet * 2) - 3;
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                // calc. running broad jump
                if (enhancedGroundMove > Math.floor(jumpST/4)) {
                    
                    // use enhanced move instead of strength
                    statUsedForRunningJump = "Basic Move * (2 ^ Enh MV Mod)";
                    
                    runningMoveToUse = enhancedGroundMove;
                    
                    runningHighMoveToUse = enhancedGroundMove;
                    
                } else {
                    
                    statUsedForRunningJump = statUsedForJump + " + Yards Run";
                    
                    runningMoveToUse = Math.floor(jumpST/4) + runningJumpYardsMoved;
                    
                    runningHighMoveToUse = Math.floor(jumpST/2) + runningHighJumpYardsMoved;
                }
                
                runningBroadJumpFeet = (runningMoveToUse * 2) - 3;
                
                if (runningBroadJumpFeet <= 0) {
                    
                    runningBroadJumpFeet = 1;
                    
                }
                
                // calc. standing high jump
                jumpHighFeet = Math.floor(jumpST/4);
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                jumpHighFeet = (6 * jumpHighFeet) - 10;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // convert to feet
                // round to 2 decimals
                // https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary
                jumpHighFeet = Math.round( (jumpHighFeet / 12) * 100) / 100;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // calc. running high jump
                runningHighJumpFeet = (6 * runningHighMoveToUse) - 10;
                
                if (runningHighJumpFeet <= 0) {
                    runningHighJumpFeet = 1;
                }
                
                // convert to feet
                runningHighJumpFeet = Math.floor(runningHighJumpFeet / 12);
                
                if (runningHighJumpFeet <= 0) {
                
                    runningHighJumpFeet = 1;
                    
                } else if (runningHighJumpFeet > jumpHighFeet * 2) {
                    
                    // can't be greater than twice standing broad jump
                    runningHighJumpFeet = jumpHighFeet * 2;
                    
                }
                
            } else {
                
                //---------------
                // USE Basic Move
                baseJumpMove = basicMove;
                
                statUsedForJump = "Basic Move = " + basicMove;
                
                // calc. standing broad jump
                jumpBroadFeet = (basicMove * 2) - 3;
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                // calc. running broad jump
                if (enhancedGroundMove > basicMove) {
                    
                    // use enhanced move instead of strength
                    statUsedForRunningJump = "Basic Move * (2 ^ Enh MV Mod)";
                    
                    runningMoveToUse = enhancedGroundMove;
                    
                    runningHighMoveToUse = enhancedGroundMove;
                    
                } else {
                    
                    statUsedForRunningJump = statUsedForJump + " + Yards Run";
                    
                    runningMoveToUse = basicMove + runningJumpYardsMoved;
                    
                    runningHighMoveToUse = basicMove + runningHighJumpYardsMoved;
                    
                }
                
                runningBroadJumpFeet = (runningMoveToUse * 2) - 3;
                
                if (runningBroadJumpFeet <= 0) {
                
                    runningBroadJumpFeet = 1;
                    
                } else if (runningBroadJumpFeet > jumpBroadFeet * 2) {
                    
                    // can't be greater than twice standing broad jump
                    runningBroadJumpFeet = jumpBroadFeet * 2;
                    
                }
                
                // calc. high jump
                jumpHighFeet = (6 * basicMove) - 10;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // convert to feet
                // round to 2 decimals
                // https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary
                jumpHighFeet = Math.round( (jumpHighFeet / 12) * 100) / 100;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                // calc. running high jump
                runningHighJumpFeet = (6 * runningHighMoveToUse) - 10;
                
                if (runningHighJumpFeet <= 0) {
                    runningHighJumpFeet = 1;
                }
                
                // convert to feet
                runningHighJumpFeet = Math.floor(runningHighJumpFeet / 12);
                
                if (runningHighJumpFeet <= 0) {
                    
                    runningHighJumpFeet = 1;
                    
                } else if (runningHighJumpFeet > jumpHighFeet * 2) {
                    
                    // can't be greater than twice standing broad jump
                    runningHighJumpFeet = jumpHighFeet * 2;
                    
                }
                
            }
            
            // If no concentration, divide distance by 2
            if (values.jump_concentration != "1") {
                
                jumpBroadFeet = Math.floor(jumpBroadFeet / 2);
                
                if (jumpBroadFeet <= 0) {
                    jumpBroadFeet = 1;
                }
                
                runningBroadJumpFeet = Math.floor(runningBroadJumpFeet / 2);    
                
                if (runningBroadJumpFeet <= 0 ) {
                    runningBroadJumpFeet = 1;
                }
                
                // reduce in half
                // round to 2 decimals
                // https://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-only-if-necessary
                jumpHighFeet = Math.round( (jumpHighFeet / 2) * 100) / 100;
                
                if (jumpHighFeet <= 0) {
                    jumpHighFeet = 1;
                }
                
                runningHighJumpFeet = Math.floor(runningHighJumpFeet / 2);
                
                if (runningHighJumpFeet <= 0) {
                    
                    runningHighJumpFeet = 1;
                }
                
            }
            
            // check for super jump
            if (superJumpPoints > 0 || superJumpEnteredLevel > 0) {
                
                //-----------------
                // calculate super jump
                // make sure points is multiple of 10
                // https://stackoverflow.com/questions/18953384/javascript-round-up-to-the-next-multiple-of-5 
                superJumpPoints = Math.ceil(superJumpPoints / 10) * 10;
                
                superJumpLevelFromPoints = superJumpPoints / 10;
                
                // -------
                // make sure entered super jump level is an integer, min of 1
                superJumpEnteredLevel = Math.floor(superJumpEnteredLevel);
                
                if (superJumpEnteredLevel < 0) {
                    superJumpEnteredLevel = 0;
                }
                
                totalSuperJumpLevel = superJumpEnteredLevel + superJumpLevelFromPoints;
                
                // get the new jump feet values based on super level
                jumpBroadFeet = getEnhancedValue(jumpBroadFeet, totalSuperJumpLevel);
                
                runningBroadJumpFeet = getEnhancedValue(runningBroadJumpFeet, totalSuperJumpLevel);
                
                jumpHighFeet = getEnhancedValue(jumpHighFeet, totalSuperJumpLevel);
                
                runningHighJumpFeet = getEnhancedValue(runningHighJumpFeet, totalSuperJumpLevel);
                
            }
            
            // get broad jump in yards. Minimum of 1
            jumpBroadYards = Math.floor(jumpBroadFeet / 3);
            
            // get running jump in yards. Min of 1
            runningBroadJumpYards = Math.floor(runningBroadJumpFeet / 3)
            
            // get high jump in yards
            jumpHighYards = Math.floor(jumpHighFeet / 3);
            
            // get running high in yards
            runningHighJumpYards = Math.floor(runningHighJumpFeet / 3);
            
            // calculate jump move speed
            jumpMoveSpeed = Math.floor(jumpBroadYards / 5);
            
            if (jumpMoveSpeed <= 0) {
                jumpMoveSpeed = 1;
            }
            
            // determine which one to use
            if (jumpMoveSpeed > basicMove) {
                
                finalJumpMoveSpeed = jumpMoveSpeed;
                
            } else {
                
                finalJumpMoveSpeed = basicMove;
                
            }
            
            // set jump distances
            setAttrs({
                "broad_jump_distance_feet": jumpBroadFeet, 
                "broad_jump_distance_yards": jumpBroadYards, 
                "high_jump_distance_feet": jumpHighFeet,
                "high_jump_distance_yards": jumpHighYards,
                "super_jump_level": totalSuperJumpLevel,
                "super_jump_entered_level": superJumpEnteredLevel,
                "super_jump_points": superJumpPoints,
                "running_jump_distance_feet": runningBroadJumpFeet,
                "running_jump_distance_yards": runningBroadJumpYards,
                "running_high_jump_distance_feet": runningHighJumpFeet,
                "running_high_jump_distance_yards": runningHighJumpYards,
                "broad_jump_base": baseJumpMove,
                "standing_broad_jump_stat_to_use": statUsedForJump,
                "running_broad_jump_stat_to_use": statUsedForRunningJump,
                "high_jump_base": baseJumpMove,
                "standing_high_jump_stat_to_use": statUsedForJump,
                "running_high_jump_stat_to_use": statUsedForRunningJump,
                "jump_move_speed": finalJumpMoveSpeed
            });
            
        });
        
    }

	// <!-- ==== ==== ==== CHARACTER POINT CALCULATION ==== ==== ==== -->	
	// Update Attributes
	on('sheet:opened change:strength_points change:dexterity_points change:intelligence_points change:health_points change:perception_points change:willpower_points change:hit_points_points change:fatigue_points_points change:basic_speed_points change:basic_move_points',
		function (e) {
			getAttrs(['strength_points', 'dexterity_points', 'intelligence_points', 'health_points', 'perception_points', 'willpower_points', 'hit_points_points', 'fatigue_points_points', 'basic_speed_points', 'basic_move_points'], function (v) {
				var vals = Object.values(v);
				vals.push(0);
				setAttrs({
					att_points: vals.reduce(getSum)
				});
			});
		});
	// Update the total cost of Advantages
	on('change:repeating_traits remove:repeating_traits',function(){
	TAS.repeatingSimpleSum('traits','points','advantages_points');
	});
	// Update the total cost of Disadvantages
	on('change:repeating_disadvantages remove:repeating_disadvantages',function(){
	TAS.repeatingSimpleSum('disadvantages','points','disadvantages_points');
	});
	// Update the total cost of Quirks
	on('change:repeating_quirks remove:repeating_quirks',function(){
	TAS.repeatingSimpleSum('quirks','points','quirks_points');
	});
	// Update the total cost of Racial
	on('change:repeating_racial remove:repeating_racial',function(){
	TAS.repeatingSimpleSum('racial','points','racial_points');
	});
	// Update the total cost of Skills
	on('change:repeating_skills remove:repeating_skills',function(){
	TAS.repeatingSimpleSum('skills','points','skills_points');
	});
	// Update the total cost of Techniques
	on('change:repeating_techniques remove:repeating_techniques',function(){
	TAS.repeatingSimpleSum('techniques','points','techniques_points');
	});
		// Add together skills_points and techniques_points
		on('sheet:opened change:skills_points change:techniques_points', function(e) {
			getAttrs(['skills_points', 'techniques_points'],
				function(v) {
					var vals = Object.values(v);
					vals.push(0);
					setAttrs({
						skillstechniques_points: vals.reduce(getSum)
					});
				});
		});
	// Update the total cost of Spells
	on('change:repeating_spells remove:repeating_spells',function(){
	TAS.repeatingSimpleSum('spells','points','spells_points');
	});
	// Update the total cost of Experience
	on('change:repeating_experience remove:repeating_experience',function(){
	TAS.repeatingSimpleSum('experience','points','ex_points');
	});	

	// Update Lines on Techniques
	on('change:repeating_techniques', function () {
	TAS.repeating('techniques')
		.fields('difficulty', 'defaultlvl', 'mlevel', 'bonus', 'points',
			'level')
		.each(function (r) {
			r.D[0].level = Math.min(Math.max(r.F.difficulty + r.F
				.defaultlvl + r.F.bonus + r.F.points, r.F
				.defaultlvl), r.F.mlevel);
		})
		.execute();
		});

	// Update Total Points Value
	on('sheet:opened change:ex_points change:base_points change:repeating_experience:points remove:repeating_experience:points', function(e) {
		getAttrs(['ex_points', 'base_points'],
			function(v) {
				var vals = Object.values(v);
				vals.push(0);
				setAttrs({
					total_points: vals.reduce(getSum)
				});
			});
	});

	on('sheet:opened change:strength_points change:dexterity_points change:intelligence_points change:health_points change:perception_points change:willpower_points change:hit_points_points change:fatigue_points_points change:energy_points_points change:basic_speed_points change:basic_move_points change:striking_st_points change:lift_st_points change:att_points change:advantages_points change:disadvantages_points change:quirks_points change:racial_points change:skills_points change:techniques_points change:spells_points change:ex_points change:total_points', function(e) {
		getAttrs(['att_points', 'advantages_points', 'disadvantages_points', 'quirks_points', 'racial_points', 'skills_points', 'techniques_points', 'spells_points', 'total_points'], function(v) {
			var att = +v.att_points;
			var race = +v.racial_points;
			var adv = +v.advantages_points;
			var dis = +v.disadvantages_points;
			var quirk = +v.quirks_points;
			var skill = +v.skills_points;
			var tech = +v.techniques_points;
			var spell = +v.spells_points;
			var ttlp = +v.total_points;
			var spent = att + race + adv + dis + quirk + skill + tech + spell;
			var unspnt = ttlp - spent;
			setAttrs({
				unspentpoints: unspnt
			});
		});
	});


// <!-- ==== ==== ==== Combat Calculations ==== ==== ==== -->
// Active Defense Dodge Calculator
	on('sheet:opened change:dodge_bonus change:current_dodge change:combat_reflexes', function(e) {
		getAttrs(['dodge_bonus', 'current_dodge', 'combat_reflexes'],
		function(v) {
			var vals = Object.values(v);
			vals.push(0);
			setAttrs({
				ad_dodge: vals.reduce(getSum)
			});
		});
	});

	// Manuever Generator
	on("sheet:opened change:manuever", function () {
		getAttrs(["manuever"], function(values) {
			const manuevers = {
			   Aim: {name: "Aim", AD: "Any*", move: "Step | None", descr: "Description: Aim a ranged weapon to get its Acc bonus (+1 for bracing, +1 for 2 turns, +2 for 3+ turns, the combined bonus from all targeting systems cannot exceed the weapon’s base Accuracy) | You get no step if your two-handed weapon is braced. Check Aiming box to add aiming bonus to total attack modifiers", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: "Note: * Taking an active defense spoils your Aim; if you are injured, make a Will roll or lose your Aim."},
			   AoAMDD: {name: "All-Out Attack - Melee Double", AD: "None", move: "1/2 forward", descr: "2 attacks on same foe with ready weapon (-4 to off-hand without Ambidexterity)", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   AoAMDT: {name: "All-Out Attack - Melee Determined", AD: "None", move: "1/2 forward", descr: "+4 to hit", page: "B363", defmod: "0", meleemod: "4", rangedmod: "0", note: ""},
			   AoAMF: {name: "All-Out Attack - Melee Feint", AD: "None", move: "1/2 forward", descr: "Make one feint and one attack on the same foe", page: "B363", defmod: "0", meleemod: "4", rangedmod: "0", note: ""},
			   AoAML: {name: "All-Out Attack - Melee Long", AD: "None", move: "1/2 forward", descr: "Increase reach by 1 yard (Swing attacks at -2 dmg or -1 per die), may end in crouch.", page: "MA87", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   AoAMS: {name: "All-Out Attack - Melee Strong", AD: "None", move: "1/2 forward", descr: "+2 to damage (or +1 per damage die)", page: "B363", defmod: "0", meleemod: "4", rangedmod: "0", note: ""},
			   AoARD: {name: "All-Out Attack - Ranged Determined", AD: "None", move: "1/2 forward", descr: "+1 to hit", page: "B363", defmod: "0", meleemod: "0", rangedmod: "1", note: ""},
			   AoARS: {name: "All-Out Attack - Ranged Suppression Fire", AD: "None", move: "1/2 forward", descr: "RoF 5+ targets 2 yard zone - RoF 10+ suppress multiple, adjacent 2 yard zones with 5+ Shots/zone", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   AoDID: {name: "All-Out Defense Increased Defense", AD: "Any", move: "Step (1/2)", descr: "+2 to one Active Defense until next turn (Increased Dodge allows up to Half Move)", page: "B363", defmod: "2", meleemod: "0", rangedmod: "0", note: ""},
			   AoDDD: {name: "All-Out Defense Double Defense", AD: "Any", move: "Step", descr: "Two different Defenses against one attack", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   AoDMD: {name: "All-Out Defense Mental Defense", AD: "Any", move: "Step (1/2)", descr: "+2 to one Active Defense until next turn (Increased Dodge allows up to Half Move)", page: "B363", defmod: "2", meleemod: "0", rangedmod: "0", note: ""},
			   Atk: {name: "Attack", AD: "Any", move: "Step", descr: "Attack unarmed or with a ready weapon, you make take a step before or after you attack", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   CP: {name: "Change Posture", AD: "Any", move: "None", descr: "Standing, sitting, kneeling, crawling, prone, lying face up (see B364/MA98). Prone to standing takes two turns (Exception Acrobatic Stand)", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   Conc: {name: "Concentrate", AD: "Any †", move: "Step", descr: "Focus on mental task. All-Out Concentrate (DF14:34) gives +1 to roll but loose active defenses. Must make Will-2 if injured or distracted", page: "B366", defmod: "0", meleemod: "0", rangedmod: "0", note: "† Taking an active defense or being knocked down, injured, distracted etc. requires a Will-3 roll to maintain."},
			   CAMD: {name: "Committed Attack - Melee Determined", AD: "Special ‡", move: "Step", descr: "+2 to hit, or take two steps at -2 to hit for a total modifier of 0, may move before or after an attack", page: "MA100", defmod: "0", meleemod: "0", rangedmod: "0", note: "‡ The attacker cannot parry with the hand(s) he used to attack, block if he attacked with his shield or cloak, or dodge if he kicked. He can use any other defense, but at -2. He cannot retreat."},
			   CAMS: {name: "Committed Attack - Melee Strong", AD: "Special ‡", move: "Step", descr: "+1 to damage (or +1 per two full damage dice), ST-based attacks only, may take 2 steps at -2 to skill, may move before or after an attack", page: "MA100", defmod: "0", meleemod: "0", rangedmod: "0", note: "‡ The attacker cannot parry with the hand(s) he used to attack, block if he attacked with his shield or cloak, or dodge if he kicked. He can use any other defense, but at -2. He cannot retreat."},
			   DAtk: {name: "Defensive Attack", AD: "Any", move: "Step**", descr: "Balanced weapon = +1 Parry/Block, Unbalanced weapon: +1 Parry/Block with different weapon or Parry with the same weapon, Kick: +2 to avoid Leg Grapple and DX rolls to avoid falling. -2 to damage (or -1 per die if worse), foe gets +1 to defend against a grab or grapple", page: "MA100", defmod: "0", meleemod: "0", rangedmod: "0", note: "** Before or after attack."},
			   DN: {name: "Do Nothing", AD: "Any", move: "None", descr: "Take no action (Active Defenses at -4 if taking Do Nothing due to Stun; roll vs HT/IQ)", page: "B364", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   Eval: {name: "Evaluate", AD: "Any", move: "Step", descr: "Study a foe prior to a melee attack (+1 per turn to subsequent attacks or feints, max. +3); may also use the Evaluate Bonus to cancel out penalties from Deceptive Attacks or feints", page: "B364", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   FMB: {name: "Feint - Melee Beat", AD: "Any", move: "Step", descr: "Contest of ST-based combat skill vs foe’s ST- or DX-based skill", page: "MA100", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   FMDF: {name: "Feint - Melee Defensive Feint", AD: "Any", move: "Step", descr: "Apply the penalty from a successful Beat, Feint or Ruse to foe’s attacks roll instead of defense", page: "MA100", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   Fnt: {name: "Feint", AD: "Any", move: "Step", descr: "Contest of combat skill (melee or ranged) vs. combat skill, cloak/shield or DX", page: "B363", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   FMR: {name: "Feint - Melee Ruse", AD: "Any", move: "Step", descr: "Contest of IQ-based combat skill vs. foe’s Per-based skill, DX-based skill or Tactics", page: "MA101", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   MA: {name: "Move and Attack", AD: "Special §", move: "Full Move", descr: "Move and attack at a penalty (Ranged: -2 or weapon’s bulk; non-slam Melee: -4, max. skill 9). For thrusting attacks, may use slam damage (HP x velocity/100). Not compatible with Flurry of Blows, Mighty Blow, Giant Step, Combos, Rapid Strike or Deceptive Attack (except slams or cinematic techniques which require final effective skill of at least 10). If tripped or stunble -2 to avoid falling", page: "MA101", defmod: "0", meleemod: "0", rangedmod: "0", note: "§ If you attacked using an arm, you cannot use that arm to parry (if the attack involved a fist, elbow, or weapon) or block (if you used a shield or cloak). If you used any other body part to attack, you cannot dodge. You can use any other defense, but you cannot retreat."},
			   Move: {name: "Move", AD: "Any", move: "Full Move", descr: "Do nothing but move (See Sprinting B354 and Acrobatic move MA105+)", page: "B364", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   Rdy: {name: "Move", AD: "Any", move: "Step", descr: "Ready or reload a weapon, adjust reach (B269), change grip, change hands (MA102)", page: "B364", defmod: "0", meleemod: "0", rangedmod: "0", note: ""},
			   Wait: {name: "Wait", AD: "Any", move: "Wait", descr: "Hold your action, then take an Attack, All-Out Attack, Committed Attack, Defensive Attack, Feint, Ready or Stop Hit. Specify exactly what your action will be and what will trigger it. You may also perform a Step and Wait, loosing your Step in the proceeding Maneuver", page: "B364", defmod: "0", meleemod: "0", rangedmod: "0", note: ""}
			};
			let manuever = values.manuever;        
			if (!manuevers.hasOwnProperty( manuever )) {
			   // I reversed the order from the example above for simplicity
			   console.log("Error: The item " + manuever + " is not found within the manuever Object.");
			   return;
			}
			// set Active Defense, Movement, Description, Ref, Mods, Notes
			setAttrs({
				"man_active_defense": manuevers[manuever].AD,
				"man_description": manuevers[manuever].descr,
				"man_movement": manuevers[manuever].move,
				"man_ref": manuevers[manuever].page,
				"man_def_mod": manuevers[manuever].defmod,
				"man_melee_mod": manuevers[manuever].meleemod,
				"man_ranged_mod": manuevers[manuever].rangedmod,
				"man_notes": manuevers[manuever].note
			});
		});
	});


	
	on('sheet:opened change:condition', function () {
		getAttrs(["condition"], function (values) {
			let condition = values.condition;
			let name = "",
				notes = "",
				pen = "",
				ad = "";
			switch (condition) {
			case "none":
				name = "None";
				notes = "None";
				pen = "0";
				ad = "0";
				break;

			case "cough":
				name = "Coughing";
				notes =
					"You are at -3 to DX and -1 to IQ, and cannot use Stealth.";
				pen = "-3";
				ad = "-3";
				break;

			case "drowsy":
				name = "Drowsy";
				notes =
					"You are on the verge of falling asleep. Make a Will roll every two hours you spend inactive. On a failure, you fall asleep, and sleep until you are awakened or get a full night’s sleep. On a success, you have -2 to DX, IQ, and self-control rolls.";
				pen = "-2";
				ad = "-2";
				break;

			case "drunk":
				name = "Drunk";
				notes =
					"You are highly intoxicated: -2 to DX and IQ, and -4 to self-control rolls except those to resist Cowardice. Reduce Shyness by two levels, if you have it.";
				pen = "-2";
				ad = "-2";
				break;

			case "euph":
				name = "Euphoria";
				notes =
					"You have a -3 penalty to all DX, IQ, skill, and self-control rolls.";
				pen = "-3";
				ad = "-3";
				break;

			case "naus":
				name = "Nauseated";
				notes =
					"You have -2 to all attribute and skill rolls, and -1 to active defenses. As well, roll vs. HT after you eat, are exposed to a foul odor, fail a Fright Check, or are stunned, and every hour in free fall or in any situation where you might suffer motion sickness. A rich meal in the past hour gives -2; anti-nausea remedies give +2. On a failure, you vomit for (25 - HT) seconds – treat as Retching, below.";
				pen = "-2";
				ad = "-1";
				break;

			case "modpain":
				name = "Moderate Pain";
				notes =
					"You have a penalty to all DX, IQ, skill, and self-control rolls. This is -2 for Moderate Pain. High Pain Threshold halves these penalties; Low Pain Threshold doubles them.";
				pen = "-2";
				ad = "-2";
				break;

			case "svrpain":
				name = "Severe Pain";
				notes =
					"You have a penalty to all DX, IQ, skill, and self-control rolls. This is -4 for Severe Pain. High Pain Threshold halves these penalties; Low Pain Threshold doubles them.";
				pen = "-4";
				ad = "-4";
				break;

			case "terpain":
				name = "Terrible Pain";
				notes =
					"You have a penalty to all DX, IQ, skill, and self-control rolls. This is -6 for Terrible Pain. High Pain Threshold halves these penalties; Low Pain Threshold doubles them.";
				pen = "-6";
				ad = "-6";
				break;

			case "tipsy":
				name = "Tipsy";
				notes =
					"You are slightly intoxicated: -1 to DX and IQ, and -2 to self-control rolls except those to resist Cowardice. Reduce Shyness by one level, if you have it.";
				pen = "-1";
				ad = "-1";
				break;

			case "agony":
				name = "Agony";
				notes =
					"No voluntary action for the duration. In addition to the folowwing effects, you’re effectively stunned (-4 to active defenses). You are conscious but in such terrible pain that you can do nothing but moan or scream. If standing or sitting, you fall down. While the affliction endures, you lose 1 FP per minute or fraction thereof.";
				pen = "-99";
				ad = "-99";
				break;

			case "choke":
				name = "Choking";
				notes =
					"You are unable to breathe or speak. You may do nothing but drop. While the choking endures, you suffer the effects of suffocation (see Suffocation, p. 436). ";
				pen = "-99";
				ad = "-99";
				break;

			case "daze":
				name = "Daze";
				notes =
					"You are conscious – if you are standing, you remain upright – but you can do nothing. If you are struck, slapped, or shaken, you recover on your next turn.";
				pen = "-99";
				ad = "-99";
				break;

			case "ecst":
				name = "Ecstacy";
				notes =
					"You’re incapacitated with overwhelming pleasure. Treat as Agony, but neither Low Pain Threshold nor High Pain Threshold has any effect – and instead of a bonus for torture, someone offering to continue the pleasure gets +3 to any Influence roll! If you have Killjoy, you’re immune.";
				pen = "-99";
				ad = "-99";
				break;

			case "hallu":
				name = "Hallucinating";
				notes =
					"You can try to act, but you must roll vs. Will before each success roll. On a success, you merely suffer 2d6 seconds of disorientation.";
				pen = "-99";
				ad = "-99";
				break;

			case "paral":
				name = "Paralysis";
				notes =
					"You cannot move any voluntary muscles, and fall over if you are not in a balanced position. You remain conscious, and can still use advantages or spells that require neither speech nor movement.";
				pen = "-99";
				ad = "-99";
				break;

			case "retch":
				name = "Retching";
				notes =
					"You are conscious but vomiting (or suffering dry heaves). You can try to act, but you will be at -5 to DX, IQ, and Per, and automatically fail at any action that requires a Concentrate maneuver.";
				pen = "-99";
				ad = "-99";
				break;

			case "seize":
				name = "Seizure";
				notes =
					"You suffer a fit of some kind. Your limbs tremble uncontrollably, you fall down if standing, and you cannot speak or think clearly. You can do nothing. At the end of the seizure, you lose 1d6 FP";
				pen = "-99";
				ad = "-99";
				break;

			case "uncon":
				name = "Unconscious";
				notes =
					"You are knocked out, just as if you had suffered injury.";
				pen = "-99";
				ad = "-99";
				break;

			case "coma":
				name = "Coma";
				notes =
					"You collapse just as if you had been wounded to -1xHP or below and passed out; see Recovering from Unconsciousness (p. 423). You get a single HT roll to awaken after 12 hours. On a failure, you won’t recover without medical treatment. Until you receive treatment, roll vs. HT every 12 hours. On any failure, you die.";
				pen = "-99";
				ad = "-99";
				break;

			case "hrtatk":
				name = "Heart Attack";
				notes =
					"Your heart stops functioning (“cardiac arrest”). You immediately drop to -1xFP. Regardless of your current HP, you will die in HT/3 minutes unless resuscitated – see Resuscitation (p. 425).";
				pen = "-99";
				ad = "-99";
				break;
			}
			setAttrs({
				"affliction_name": name,
				"cond_notes": notes,
				"aff_penalty": pen,
				"condition_ad_penalty": ad
			});
		});
	});

	// Death State
	on('sheet:opened change:hit_points', function () {
		console.log('****!!!Update-State!!!*****');
		getAttrs(['hit_points', 'hit_points_max'],
			function (v) {
				var hp = v.hit_points;
				var hpm = +v.hit_points_max;
				if (hp >= hpm) {
					state = "Fully Healed";
					notes = " ";
				} else if (hp >= (Math.floor(hpm / 3)) && hp < hpm) {
					state = "Injured";
					notes = " ";
				} else if (hp < (Math.floor(hpm / 3)) && hp > 0) {
					state = "Reeling";
					notes =
						"You are reeling from your wounds - Halve your Move and Dodge (round up).";
				} else if (hp <= 0 && hp > (hpm * -1)) {
					state = "Verge of Collapse";
					notes =
						"You are in immediate danger of collapse; halve your Move and Dodge(round up), make a HT roll at the start of your next turn, at -1 per full multiple of HP below zero. Failure means you fall unconscious. Success means you can act normally, but must roll again every turn to continue functioning. Exception: If you choose Do Nothing on your turn, and do not attempt any defense rolls, you can remain conscious without rolling. Roll only on turns during which you attempt a defense roll or choose a maneuver other than Do Nothing. Pg 419";
				} else if (hp <= (hpm * -1) && hp > (hpm * -5)) {
					state = "Verge of Death";
					notes =
						"make an immediate HT roll or die. (If you fail by only 1 or 2, you’re dying, but not dead – see Mortal Wounds, p. 423). If you succeed, you can still talk, fight, etc., as above (until you fail a HT roll and collapse). Roll again each time you suffer injury equal to a further multiple of your HP, whether as a result of one wound or many. Pg 419";
				} else if (hp <= (hpm * -5) && hp > (hpm * -10)) {
					state = "Death";
					notes =
						"You die immediately. You have lost a total of 6 times your HP! Nobody can survive that much injury. Pg 419";
				} else if (hp < (hpm * -10)) {
					state = "Total Bodily Destruction";
					notes =
						"Total bodily destruction, if this makes sense given the source of the damage. The difference can be important in settings where resurrection, reanimation, etc. are possible! Implications are left to GM. Pg 419";
				}
				setAttrs({
					injury_state: state,
					injury_notes: notes
				});
			});
	});

	// Fatigue State
	on('sheet:opened change:fatigue_points change:fatigue_points_max', function () {
		console.log('******* Update-Fatigue!!!*********');
		getAttrs(['fatigue_points', 'fatigue_points_max'],
			function (v) {
				var fp = +v.fatigue_points;
				var fpm = +v.fatigue_points_max;
				if (fp >= fpm) {
					fat = "Fully Rested";
					notes = "none";
				} else if (fp <= (Math.floor(fpm / 3)) && fp > 0) {
					fat = "Very Tired";
					notes =
						"You are very tired. Halve your Move, Dodge, and ST (round up). This does not affect ST-based quantities, such as HP and damage.";
				} else if (fp <= 0 && fp > (fpm * -1)) {
					fat = "Verge of Collapse";
					notes =
						"If you suffer further fatigue, each FP you lose also causes 1 HP of injury. Thus, fatigue from starvation, dehydration, etc. will eventually kill you – and you can work yourself to death! To do anything besides talk or rest, you must make a Will roll; in combat, roll before each maneuver other than Do Nothing. On a success, you can act normally. You can use FP to cast spells, etc., and if you are drowning, you can continue to struggle, but you suffer the usual 1 HP per FP lost. On a failure, you collapse, incapacitated, and can do nothing until you recover to positive FP. On a critical failure, make an immediate HT roll. If you fail, you suffer a heart attack; see Mortal Conditions (p. 429).";
				} else if (fp <= (fpm * -1)) {
					fat = "You fall unconscious.";
					notes =
						"While unconscious, you recover lost FP at the same rate as for normal rest. You awaken when you reach positive FP. Your FP can never fall below this level. After this stage, any FP cost comes off your HP instead!";
				}
				setAttrs({
					fatigue_state: fat,
					fatigue_notes: notes
				});
			});
	});

	on('sheet:opened change:repeating_rituals', function () {
		TAS.repeating('rituals')
			.fields('greatereffects', 'greatereffectsmultiplier')
			.each(function (r) {
				r.greatereffectsmultiplier = ((2 * r.greatereffects) +
					1);
			})
			.execute();
	});

	on("sheet:opened change:posture",
		function () {
			getAttrs(["posture"], function (values) {
			let post = values.posture;
				attack = "",
				defend = "",
				target = "",
				move = "",
				name = "";
			switch(post){
				case "1": // Crouching -2 Normal -2 2/3 (+1/2 per hex)
				name = "Crouching";
				attack = "-2";
				defend = "0";
				target = "-2"
				move = "2/3 (+1/2 per hex)";
				break;
				case "2": // Kneeling
				name = "Kneeling";
				attack = "-2";
				defend = "-2";
				target = "-2"
				move = "1/3 (+2 per hex)";
				break;
				case "3": // Crawling
				name = "Crawling";
				attack = "-4";
				defend = "-3";
				target = "-2"
				move = "1/3 (+2 per hex)";
				break;
				case "4": // Sitting
				name = "Sitting";
				attack = "-2";
				defend = "-2";
				target = "-2"
				move = "None";
				break;
				case "5": // Lying down or prone
				name = "Lying down";
				attack = "-4";
				defend = "-3";
				target = "-2"
				move = "1 yard/second";
				break;
				default: // Standing
				name = "Standing";
				attack = "0";
				defend = "0";
				target = "0"
				move = "Normal; may sprint";
			}
			// Set Posture modifiers
			setAttrs ({
				posture_name: name,
				posture_attack: attack,
				posture_defend: defend,
				posture_target: target,
				posture_move: move
			});
		});
	});

	
	// Update Multiple Parry Penalty
	// Ref. GURPS B376
	on('sheet:opened change:multi_parry change:fencing change:trained_by_master change:weapon_master', function(e) {
		console.log('********* Update Multiple Parry Penalty *********');
		getAttrs(['multi_parry', 'fencing', 'trained_by_master', 'weapon_master' ],
		function(v) {
			var parry = +v.multi_parry;
			var fence = +v.fencing;
			var tm = +v.trained_by_master;
			var wm = +v.weapon_master;
			var def = fence + tm + wm;
			if (def == "1" || def == "3" || def == "5" || def == "8"){
				var mpp = parry * -2;
			} else if (def == "4" || def == "6" || def == "9"){
				var mpp = parry * -1;
			} else {
				var mpp = parry * -4;
			}
			
			setAttrs({
				mpp: mpp
			});
		});
	});

	// Update Acrobatic Dodge
	// Ref. GURPS B375
	on('change:ad_acrobatic_dodge change:ad_acrobatic_dodge_success',
		function (e) {
		console.log('********* Update Multiple Parry Penalty *********');
		getAttrs(['ad_acrobatic_dodge', 'ad_acrobatic_dodge_success'],
		function(v) {
			var dodge = +v.ad_acrobatic_dodge;
			var success = +v.ad_acrobatic_dodge_success;
			
			var mod = dodge * success;
			
			setAttrs({
				acro_dodge: mod
			});
		});
	});


	// Update Defense Bonus / Penalty
	// B287
	on('sheet:opened change:shield_name change:shield_large_melee_penalty change:shield_ready change:shield_location change:shield_db change:shield_dr change:shield_hp change:shield_ccbt ',
		function (e) {
		console.log('****** Update Shield Defense Bonus ******');
		getAttrs(['shield_ready', 'shield_db', 'shield_defense_bonus', 'shield_ccbt', 'shield_large_melee_penalty'],
			function(v) {
				
				// Set Variables
				var db = +v.shield_db; // Shield Defense Bonus from books input
				var equip = +v.shield_ready; // Shield Ready Checkbox 1/0
				var lg = +v.shield_large_melee_penalty; // Large Shield Checkbox -2/0
				var ccb = +v.shield_ccbt; // Shield in CCBT
				var equipped = "";
				var bonus = "";
				var lgpen = "";
				var lgequipped = "";
				var ccbpen = "";
				
				// Calculate Defense Bonus when equipped
				bonus = db * equip;
				
				// Calculate Large Shield Melee Yes/No
				lgpen = equip * lg;
				
				if (lgpen == "0"){
					lgequipped = "No";
				} else {
					lgequipped = "Yes";
					}
					
				// Calculate Melee Penalty in CCBT
				ccbpen = db * ccb;
							
				var penalty = lgpen + ccbpen;
				
				setAttrs ({
					shield_defense_bonus: bonus,
					shield_melee_penalty: penalty,
					lg_shield_equipped: lgequipped
				});
			});
		});

// Update Active Defense Modifier
// Ref. B374
on("sheet:opened change:dodge change:current_dodge change:combat_reflexes change:trained_by_master change:weapon_master change:ambidextrous change:manuever change:posture_defend change:fencing change:parryweapon change:unarmed_parry change:mpp change:def_above_atkr change:condition_ad_penalty change:ad_bad-foot change:ad_cant-see-attacker change:ad_mounted change:shield_defense_bonus change:acro_dodge change:ad_dodgeanddrop change:ad_feverish_defense change:opp change:ad_retreat change:hit_points change:ad_acrobatic_dodge",
		function (e) {
		console.log('****** Update Active Defense Bonus ******');
		getAttrs(["parryweapon", "unarmed_parry", "mpp", "def_above_atkr", "condition_ad_penalty", "ad_bad-foot", "ad_cant-see-attacker", "ad_mounted", "shield_defense_bonus", "acro_dodge", "ad_dodgeanddrop", "ad_feverish_defense", "opp", "ad_retreat", "combat_reflexes", "man_def_mod", "posture_defend"],
			function(v) {
			var vals = Object.values(v);
			vals.push(0);
			setAttrs({
				total_ad_mod: vals.reduce(getSum)
			});
		
		});
	});

	// Update Dodge ESL
	// Ref. B374
	on('sheet:opened change:dodge_bonus change:dodge change:total_ad_mod', function (e) {
		console.log('****** Update Dodge ESL ******');
		getAttrs(['dodge_bonus', 'current_dodge', 'total_ad_mod'],
		function(v){
			var vals = Object.values(v);
			vals.push(0);
			setAttrs({
				dodge_esl: vals.reduce(getSum)
			});
		});
	});
	
// Update Lines on Defense
	on('change:repeating_defense remove:repeating_defense change:total_ad_mod', function () {
		TAS.repeating('defense')
			.attrs('total_ad_mod')
			.fields('esl', 'ad_bonus', 'lvl')
			.each(function(r,a){
			r.D[0].esl = r.I.ad_bonus + r.I.lvl + a.I.total_ad_mod;
		})
			.execute();
	});

// Update Rapid Strike
// Ref. B372
on("sheet:opened change:trained_by_master change:weapon_master change:melee_rapidstrike",
	function(e) {
		console.log('*** Update Rapid Strike ***');
		getAttrs(['trained_by_master', 'weapon_master', 'melee_rapidstrike'],
		function(v){
			var tm = +v.trained_by_master;
			var wm = +v.weapon_master;
			var rs = +v.melee_rapidstrike;
			var pen = "";
				if (tm > "0" || wm > "0") {
					pen = rs / 2;
				} else {
					pen = rs;
				}
				setAttrs({
				rs_penalty: pen
			});
		});
	});

// Update Melee Dual Weapon Attack Penalty
// Ref. B417
on('sheet:opened change:melee_dualweapon change:melee_dualweapon_atk change:ambidextrous',
	function(e) {
		console.log('** Update Dual Weapon Attack Penalty **');
		getAttrs(['melee_dualweapon', 'melee_dualweapon_atk', 'ambidextrous'],
		function(v) {
			var amb = +v.ambidextrous;
			var dual = +v.melee_dualweapon;
			var atk = +v.melee_dualweapon_atk;
			var pen = "";
			var ttlpen = "";
			if (amb == "4" && atk == "-8") {
				pen = amb + atk;
			} else {
				pen = atk;
			}
			var ttlpen = dual * pen;
			setAttrs({
				dual_weapon_penalty: ttlpen
			});
		
		});
	});
	
// Update Melee Off-Hand Attack Penalty
on('sheet:opened change:ambidextrous change:melee_offhand', function(e) {
	console.log('****** Update Off-Hand Attack Penalty ******');
	getAttrs(['ambidextrous', 'melee_offhand'],
		function(v) {
			var amb = +v.ambidextrous;  // 4 or 0
			var moh = +v.melee_offhand; // -4 or 0
			var pen = "";
			if (amb == "4" && moh == "-4") {
				pen = amb + moh;
				} else {
				pen = moh;
			}

			setAttrs({
			melee_offhand_penalty: pen
		});
	});
});

// Update Cannot See Penalty
// Ref. B394

on('sheet:opened change:melee_cannot_see_onoff change:melee_cannot_see' , function(e){
	console.log('*** Update Melee Visibility ***');
	getAttrs(['melee_cannot_see_onoff', 'melee_cannot_see'],
	function(v){
		var off = +v.melee_cannot_see_onoff;
		var see = +v.melee_cannot_see;
		var pen = off * see;
		setAttrs({
				melee_cannot_see_penalty: pen
			});
		
		});
	});
on('sheet:opened change:melee_cannot_foe_onoff change:melee_cannot_foe' , function(e){
	console.log('*** Update Melee Visibility ***');
	getAttrs(['melee_cannot_foe_onoff', 'melee_cannot_foe'],
	function(v){
		var off = +v.melee_cannot_foe_onoff;
		var foe = +v.melee_cannot_foe;
		var pen = off * foe;
		setAttrs({
				melee_cannot_foe_penalty: pen
			});
		
		});
	});
	
on('sheet:opened change:melee_cannot_see_penalty change:melee_cannot_foe_penalty change:partial_vis change:night_vision change:partial_vis change:night_vision', function(e){
	console.log('*** Update Melee Visibility ***');
	getAttrs(['melee_cannot_see_penalty', 'melee_cannot_foe_penalty', 'partial_vis', 'night_vision'],
	function(v){
		var seepen = +v.melee_cannot_see_penalty;
		var foepen = +v.melee_cannot_foe_penalty;
		var part = +v.partial_vis;
		var night = +v.night_vision;
		
		var pen = foepen + seepen + part + night;
		
		
		var ttlpen = Math.min(Math.max(pen, -10), 0)
		setAttrs({
				melee_vis_penalty: ttlpen
			});
		
		});
	});


// Grand Unified Hit Locations Table v2.4
on("sheet:opened change:melee_target", function () {
    getAttrs(["melee_target"], function (values) {
        console.log("*** Update Melee Hit Location ***");
        const targets = {
            random: {
                name: "Random",
                penalty: 0,
                restr: "none",
                effects: "Random Grand Unified Hit Locations Table v2.4",
                table: 0,
                subtable: 0
            },
            // Skull
            skull: {
                name: "Skull",
                penalty: -7,
                restr: "-5 from behind",
                effects: "2 DR; if not tox: x4 inj; if not tox: any injury causing shock requires stun/knockdown roll, major wound roll -10 vs stun/knockdown; bleed at 30 seconds not 1 minute",
                table: 3,
                subtable: 0
            },
            skullr: {
                name: "Skull (Rear)",
                penalty: -5,
                restr: "-5 from behind",
                effects: "2 DR; if not tox: x4 inj; if not tox: any injury causing shock requires stun/knockdown roll, major wound roll -10 vs stun/knockdown; bleed at 30 seconds not 1 minute",
                table: 3,
                subtable: 1
            },
            // Face
            facef: {
                name: "Face (Front)",
                penalty: -5,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 0
            },
            Jaw: {
                name: "Jaw",
                penalty: -6,
                restr: "front only",
                effects: "Miss by 1 hit chest; any injury causing shock requires -1 stun/knockdown roll; major wound roll -6 to stun/knockdown.",
                table: 5,
                subtable: 1
            },
            Nose: {
                name: "Nose",
                penalty: -7,
                restr: "front only",
                effects: "Miss by 1 hit chest; cripple over 1/4 HP and causes No Sense of Smell/Taste (non-cutting) or Appearance loss (cutting, x2 crippling threshold), non-cutting major wound -5 to stun/knockdown.",
                table: 5,
                subtable: 2
            },
            Ear: {
                name: "Ear",
                penalty: -7,
                restr: "cutting or treat as face",
                effects: "Miss by 1 hit chest; cripple over 1/4 HP, no -5 to stun/knockdown, major wound only on sever; lost ear causes Appearance penalties.",
                table: 5,
                subtable: 3
            },
            Cheek: {
                name: "Cheek",
                penalty: -5,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 4
            },
            Eye: {
                name: "Eye",
                penalty: -9,
                restr: "-10 in helmet; imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Cripple over 1/10 hp; otherwise skull hit w/no DR. Tox has no spec. effect beyond cripple; bleed at 30 seconds not 1 min.",
                table: 5,
                subtable: 6
            },
            facer: {
                name: "Face (Rear)",
                penalty: -7,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 0
            },
            // Leg (Right)
            LegR: {
                name: "Leg (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 0
            },
            Shinr: {
                name: "Shin (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 1
            },
            Kneer: {
                name: "Knee (Right)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 6,
                subtable: 4
            },
            Thighr: {
                name: "Thigh (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 5
            },
            Veinrl: {
                name: "Vein/Artery, Leg (Right)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 6,
                subtable: 6
            },
            // Arm (Right)
            ArmR: {
                name: "Arm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "Roll on sub-table C; pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 0
            },
            Forearmr: {
                name: "Forearm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 1
            },
            Elbowr: {
                name: "Elbow (Right)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 8,
                subtable: 4
            },
            Upperr: {
                name: "Upper Arm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 5
            },
            Shoulderr: {
                name: "Shoulder (Right)",
                penalty: -5,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 6
            },
            Veinra: {
                name: "Vein/Artery, Arm (Right)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 8,
                subtable: 7
            },
            // Chest
            Chest: {
                name: "Chest",
                penalty: 0,
                restr: "none",
                effects: "Default location. Roll on sub table D; injury can't exceed 2xHP (1xHP if using bleeding); any excess is lost",
                table: 9,
                subtable: 0
            },
            Vitalsc: {
                name: "Vitals",
                penalty: -3,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty",
                table: 9,
                subtable: 1
            },
            Spinec: {
                name: "Spine",
                penalty: -8,
                restr: "behind only, cr, cut, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit chest; 3 DR; as per chest but enough injury for shock penalty (even with HPT) gives stun/knockdown, -5 if a major wound. Cripple over 1xHP Bad Back (Severe) and Lame (Paraplegic) until healed",
                table: 9,
                subtable: 7
            },
            Heart: {
                name: "Vitals (Heart)",
                penalty: -5,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty. May be special for some characters (e.g. Vampires).",
                table: 9,
                subtable: 8
            },
            // Abdomen
            Abdomen: {
                name: "Abdomen",
                penalty: -1,
                restr: "none",
                effects: "Roll on sub-table E; Injury can't exceed 2xHP (1xHP if using bleeding); any excess is lost",
                table: 11,
                subtable: 0
            },
            Vitalsa: {
                name: "Vitals, Abdomen",
                penalty: -3,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty",
                table: 11,
                subtable: 1
            },
            Digest: {
                name: "Digestive Tract",
                penalty: -3,
                restr: "none",
                effects: "As abdomen; on major wound HT-3 to avoid special",
                table: 11,
                subtable: 2
            },
            Pelvis: {
                name: "Pelvis",
                penalty: -3,
                restr: "none",
                effects: "As abdomen; on major wound: fall down, cannot stand, Lame (Missing Legs) until healed",
                table: 11,
                subtable: 5
            },
            Groin: {
                name: "Groin",
                penalty: -3,
                restr: "none",
                effects: "double shock; major wound -5 stun/knockdown",
                table: 11,
                subtable: 5
            },
            // Arm (Left)
            ArmL: {
                name: "Arm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "Roll on sub-table C; pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 0
            },
            Forearm: {
                name: "Forearm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 1
            },
            Elbowl: {
                name: "Elbow (Left)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 12,
                subtable: 4
            },
            Upperl: {
                name: "Upper Arm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 5
            },
            Shoulderl: {
                name: "Shoulder (Left)",
                penalty: -5,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 6
            },
            Veinla: {
                name: "Vein/Artery, Arm (Left)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 12,
                subtable: 7
            },
            LegL: {
                name: "Leg (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 0
            },
            Shinl: {
                name: "Shin (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 1
            },
            Kneel: {
                name: "Knee (Left)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 13,
                subtable: 4
            },
            Thighl: {
                name: "Thigh (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 5
            },
            Veinll: {
                name: "Vein/Artery, Leg (Left)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 13,
                subtable: 6
            },
            Hand: {
                name: "Hand",
                penalty: -4,
                restr: "-8 with shield",
                effects: "Roll on sub-table F; pi+, pi++, imp: x1 inj; cripple over 1/3 HP",
                table: 15,
                subtable: 0
            },
            HJoint: {
                name: "Hand (Joint)",
                penalty: -7,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit extremity; as per extremity but cripple over 1/4 HP; dismember as per extremity, not per joint; recover from cripple at -2",
                table: 15,
                subtable: 1
            },
            Foot: {
                name: "Foot",
                penalty: -4,
                restr: "none",
                effects: "Roll on sub-table F; pi+, pi++, imp: x1 inj; cripple over 1/3 HP",
                table: 16,
                subtable: 0
            },
            FJoint: {
                name: "Hand (Joint)",
                penalty: -7,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit extremity; as per extremity but cripple over 1/4 HP; dismember as per extremity, not per joint; recover from cripple at -2",
                table: 16,
                subtable: 1
            },
            Neck: {
                name: "Neck",
                penalty: -5,
                restr: "none",
                effects: "Roll on sub-table G; Miss by 1 hit chest; Cr, corr: x1.5 inj; cut x2 inj; bleed at 30 seconds not 1 minute; -2 bleed penalty; optional: treat any crushing injury over HP/2 to the neck hit location as a crippling injury which crushes the windpipe, causing choking.",
                table: 17,
                subtable: 0
            },
            Veeinn: {
                name: "Neck Vein/Artery",
                penalty: -8,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit neck; Cr, corr: x2 inj; cut x2.5 inj; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 17,
                subtable: 1
            },
            Spinen: {
                name: "Spine, Neck (Rear)",
                penalty: -8,
                restr: "behind only, cr, cut, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit chest; 3 DR; as per chest but enough injury for shock penalty (even with HPT) gives stun/knockdown, -5 if a major wound. Cripple over 1xHP Broken Neck (Severe) Lame, No Manipulators (Quadriplegic) until healed",
                table: 17,
                subtable: 2
            },
            ChinksT: {
                name: "Chinks (Torso)",
                penalty: -8,
                restr: "none",
                effects: "Halves DR over Torso",
                table: 9,
                subtable: 0
            },
            ChinksO: {
                name: "Chinks (Other)",
                penalty: -10,
                restr: "none",
                effects: "Halves DR over any other hit location",
                table: 20,
                subtable: 0
            },
            // Harsh Realism Armor Gaps -------
            ArmpitR: {
                name: "Right Armpit",
                penalty: -8,
                restr: "imp only",
                effects: "Armor gap over Vitals; on Critical Hit: instead of rolling on table, cripple arm (in addition to vitals damage)",
                table: 8,
                subtable: 6
            },
			ArmpitL: {
                name: "Left Armpit",
                penalty: -8,
                restr: "imp only",
                effects: "Armor gap over Vitals; on Critical Hit: instead of rolling on table, cripple arm (in addition to vitals damage)",
                table: 12,
                subtable: 6
            },
            BoKR: {
                name: "Back of Right Knee",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 6,
                subtable: 4
            },
			BoKL: {
                name: "Back of Left Knee",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 13,
                subtable: 4
            },
            Eyeslit: {
                name: "Eyeslit(s)",
                penalty: -10,
                restr: "imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Armor gap over eyes",
                table: 5,
                subtable: 6
            },
            Cod: {
                name: "Codpiece",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over groin",
                table: 11,
                subtable: 6
            },
            InsideER: {
                name: "Inside Right Elbow",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 8,
                subtable: 4
            },
			InsideEL: {
                name: "Inside Left Elbow",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 12,
                subtable: 4
            },
            InsideTR: {
                name: "Inside Right Thigh",
                penalty: -8,
                restr: "-3 from the back",
                effects: "Armor gap over Leg (Thigh); optional: cu, imp, pi, bu (tb) hits Limb Vein/Artery.",
                table: 6,
                subtable: 6
            },
			InsideTL: {
                name: "Inside Left Thigh",
                penalty: -8,
                restr: "-3 from the back",
                effects: "Armor gap over Leg (Thigh); optional: cu, imp, pi, bu (tb) hits Limb Vein/Artery.",
                table: 13,
                subtable: 6
            },
            NeckAG: {
                name: "Neck Armor Gap",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over neck",
                table: 17,
                subtable: 0
            },
            Palm: {
                name: "Open Palm",
                penalty: -8,
                restr: "-6 if unarmed",
                effects: "Armor gap over hand",
                table: 15,
                subtable: 0
            },
            // Weapons and Equipment --------
            ReachC: {
                name: "Reach C Weapon",
                penalty: -5,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            },
            Reach1: {
                name: "Reach 1 Weapon",
                penalty: -4,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            },
            Reach2: {
                name: "Reach 2 Weapon",
                penalty: -3,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            }
        };
        let melee_target = values.melee_target;
        if (!targets.hasOwnProperty(melee_target)) {
            // I reversed the order from the example above for simplicity
            console.log("Error: The item " + melee_target + " is not found within the melee_target Object.");
            return;
        }
        setAttrs({
            "melee_target_name": targets[melee_target].name,
            "melee_target_penalty": targets[melee_target].penalty,
            "melee_target_restr": targets[melee_target].restr,
            "melee_target_effects": targets[melee_target].effects,
            "melee_target_table": targets[melee_target].table,
            "melee_target_subtable": targets[melee_target].subtable
        });
    });
});


	
// Update Melee Modifier
// Ref. B374
on("sheet:opened change:trained_by_master change:weapon_master change:ambidextrous change:man_melee_mod change:posture_attack change:condition change:melee_bad-foot change:melee-grappled change:shield_melee_penalty change:melee_min_distraction change:melee_maj_distraction change:melee_mount_attacked change:melee_mount_velocity change:STdeficit change:deceptive_atk change:dual_weapon_penalty change:evaluate change:melee_offhand change:melee_offhand_penalty change:rs_penalty change:melee_strikeccbt change:melee_wild change:melee_tgtsize change:melee_vis_penalty change:melee_target_penalty",
		function (e) {
		console.log("****** Update Melee Modifier ******");
		getAttrs(["man_melee_mod", "posture_attack", "aff_penalty", "melee_bad-foot", "melee-grappled", "shield_melee_penalty", "melee_min_distraction", "melee_maj_distraction", "melee_mount_attacked", "melee_mount_velocity", "STdeficit", "deceptive_atk", "dual_weapon_penalty", "evaluate", "melee_offhand_penalty", "rs_penalty", "melee_strikeccbt", "melee_wild", "melee_tgtsize", "melee_vis_penalty", "melee_target_penalty"  ],
			function(v) {
			var vals = Object.values(v);
			vals.push(0);
			setAttrs({
				total_melee_mod: vals.reduce(getSum)
			});
		
		});
	});
	


// Update Lines on Melee
	on('change:repeating_melee remove:repeating_melee change:total_melee_mod', function () {
		TAS.repeating('melee')
			.attrs('total_melee_mod')
			.fields('esl', 'skill')
			.each(function(r,a){
			r.D[0].esl = r.I.skill + a.I.total_melee_mod;
		})
			.execute();
	});
	
// <================ RANGED SHEET WORKERS =========================== >

on ("sheet:opened change:oppfire change:oppfire_check change:oppfire_hexes", function (e) {
	console.log('****** Update OppFire Modifier ******');
	getAttrs(['oppfire_check', 'oppfire_hexes', 'oppfire'],
	function (v) {
		var check = +v.oppfire_check;
		var hexes = +v.oppfire_hexes;
		var on = +v.oppfire;
		var pen = on * (check + hexes);
		setAttrs ({
			oppfire_penalty: pen
		});
	});
});

on('sheet:opened change:ranged_dualweapon change:ranged_dualweapon_atk change:ambidextrous',
	function(e) {
		console.log('** Update Dual Weapon Attack Penalty **');
		getAttrs(['ranged_dualweapon', 'ranged_dualweapon_atk', 'ambidextrous'],
		function(v) {
			var amb = +v.ambidextrous;
			var dual = +v.ranged_dualweapon;
			var atk = +v.ranged_dualweapon_atk;
			var pen = "";
			var ttlpen = "";
			if (amb == "4" && atk == "-8") {
				pen = amb + atk;
			} else {
				pen = atk;
			}
			var ttlpen = dual * pen;
			setAttrs({
				ranged_dual_weapon_penalty: ttlpen
			});
		
		});
	});

	// Update ranged Off-Hand Attack Penalty
on('sheet:opened change:ambidextrous change:ranged_offhand', function(e) {
	console.log('****** Update Off-Hand Attack Penalty ******');
	getAttrs(['ambidextrous', 'ranged_offhand'],
		function(v) {
			var amb = +v.ambidextrous;  // 4 or 0
			var moh = +v.ranged_offhand; // -4 or 0
			var pen = "";
			if (amb == "4" && moh == "-4") {
				pen = amb + moh;
				} else {
				pen = moh;
			}
			setAttrs({
			ranged_offhand_penalty: pen
		});
	});
});

// Update Cannot See Penalty
// Ref. B394

on('sheet:opened change:ranged_cannot_see_onoff change:ranged_cannot_see' , function(e){
	console.log('*** Update ranged Visibility ***');
	getAttrs(['ranged_cannot_see_onoff', 'ranged_cannot_see'],
	function(v){
		var off = +v.ranged_cannot_see_onoff;
		var see = +v.ranged_cannot_see;
		var pen = off * see;
		setAttrs({
				ranged_cannot_see_penalty: pen
			});
		
		});
	});
on('sheet:opened change:ranged_cannot_foe_onoff change:ranged_cannot_foe' , function(e){
	console.log('*** Update ranged Visibility ***');
	getAttrs(['ranged_cannot_foe_onoff', 'ranged_cannot_foe'],
	function(v){
		var off = +v.ranged_cannot_foe_onoff;
		var foe = +v.ranged_cannot_foe;
		var pen = off * foe;
		setAttrs({
				ranged_cannot_foe_penalty: pen
			});
		
		});
	});

// Update Tgt Behind
on('sheet:opened change:ranged_target_behind change:ranged_number_behind', function (e) {
	console.log('********* updateTgtBehind ************');
	getAttrs(['ranged_target_behind', 'ranged_number_behind'], function (v) {
		var a = +v.ranged_number_behind || 0;
		var b = a * -4;
		var c = +v.ranged_target_behind;
		var pen = c * b;
		setAttrs({
			rangedbehindpenalty: pen
		});
	});
});

// Update Aiming
on("sheet:opened change:ranged_aim_onoff change:rangedbaseacc change:ranged_scope_onoff change:ranged_scope change:ranged_extra_aim change:ranged_vehtgtsys change:ranged_laser change:rangedbraced change:ranged_hndsr change:ranged_exposedrider change:ranged_vehicletype change:weapon_mount change:terrain change:ranged_turnedrider change:ranged_mountdodged change:ranged_mountdodgedgroundair change:ranged_vehiclefailedctrl change:ranged_vehtgtsys",
    function (e) {
        console.log("********* updateAiming ************");
        getAttrs(["ranged_aim_onoff", "rangedbaseacc", "ranged_extra_aim",
            "ranged_scope_onoff", "ranged_scope",
            "ranged_vehtgtsys", "ranged_laser", "rangedbraced",
            "mountedrangedcombat", "ranged_exposedrider",
            "ranged_turnedrider", "ranged_mountdodged",
            "rangedmountdodgepenalty",
            "ranged_mountdodgedgroundair",
            "ranged_vehiclefailedctrl", "ranged_hndsr",
            "weaponmountpenalty", "rangedmountedstab"
        ], function (v) {
            var aimOnOff = +v.ranged_aim_onoff || 0;
            var mountedOnOff = +v.mountedrangedcombat || 0;
            var sr = +v.ranged_hndsr || 0;
            var stab = +v.rangedmountedstab || 0;
            var baseAcc = +v.rangedbaseacc || 0;
            var vTgtSys = +v.ranged_vehtgtsys || 0;
            var braced = +v.rangedbraced || 0;
            var extraAim = +v.ranged_extra_aim || 0;
            var laser = +v.ranged_laser || 0;
            var scopeOnOff = +v.ranged_scope_onoff || 0; // Turns scope acc on/off
            var scopeAcc = +v.ranged_scope || 0;
            var exRider = +v.ranged_exposedrider || 0;
            var turnedRider = +v.ranged_turnedrider || 0;
            var mountDodgedOnOff = +v.ranged_mountdodged || 0;
            var mDodgedAir = +v.ranged_mountdodgedgroundair || 0;
            var scopeBonus = scopeOnOff * scopeAcc; // Scope Acc * On/Off
            var abase = aimOnOff * baseAcc; // Turns base acc on/off
            var mountDodgedPenalty = mountDodgedOnOff * mDodgedAir;
            var failedCtrl = (Math.abs(+v.ranged_vehiclefailedctrl) * -1);
            var wMountPen = +v.weaponmountpenalty;
            var vehiclePen = mountedOnOff * (exRider + turnedRider + mountDodgedPenalty + failedCtrl + wMountPen); // Penalties for Mounted
            var vTgtSysBonus = mountedOnOff * vTgtSys; // Vehicle Tgt Sys OnOff
            var x = braced + extraAim + laser + scopeBonus + vTgtSysBonus; // Sum of braced, extra aim, laser, scope, (vehicle system * mtcbt)
            var xAcc = Math.min(baseAcc, x); // extra acc is capped by base acc
			var ttlAim = baseAcc + xAcc; // Sum of Extra Aiming (capped) and Base Accuracy
			var totalAimBonus;
            if (mountedOnOff == "1" && stab == "0") {
                var totalAimBonus = (Math.min(sr, (aimOnOff * ttlAim))) + vehiclePen;
            } else if (mountedOnOff == "1" && stab == "1") {
				var totalAimBonus = vehiclePen + (aimOnOff * ttlAim);
			} else {
                var totalAimBonus = aimOnOff * ttlAim;
            }
            setAttrs({
                rangedaimbonus: totalAimBonus
            });
        });
    });


	
on("sheet:opened change:ranged_vehicletype change:weapon_mount change:terrain",
    function (e) {
        console.log("***** Update Weapon Mount *****");
        getAttrs(["ranged_vehicletype", "weapon_mount", "terrain"],
            function (values) {
                var mode = values.ranged_vehicletype;
                var mount = values.weapon_mount;
                var terrain = values.terrain;
                var pen;
                var stab;
                switch (mode) {
                case "air":
                    switch (mount) {
                    case "hh":
                        pen = "-1";
                        stab = "0";
                        break;
                    case "st":
                    case "esom":
                    case "am":
                        stab = "1";
                        break;
                    default:
                        pen = "0";
                        stab = "0";
                    }
                    break;
                case "space":
                    switch (mount) {
                    case "st":
                    case "esom":
                    case "am":
                        pen = "0";
                        stab = "1";
                        break;
                    default:
                        pen = "0";
                        stab = "0";
                    }
                    break;
                case "ground":
                    switch (terrain) {
                    case "good":
                        switch (mount) {
                        case "hh":
                            pen = "-1";
                            stab = "0";
                            break;
                        case "st":
                        case "esom":
                        case "am":
                            pen = "0";
                            stab = "1";
                            break;
                        default:
                            pen = "0";
                            stab = "0";
                        }
                        break;
                    case "bad":
                        switch (mount) {
                        case "st":
                        case "esom":
                        case "am":
                            pen = "0";
                            stab = "1";
                            break;
                        case "fm":
                        case "hp":
                        case "cg":
                        case "tt":
                            pen = "-1";
                            stab = "0";
                            break;
                        case "eom":
                            pen = "-2";
                            stab = "0";
                            break;
                        case "hh":
                            pen = "-3";
                            stab = "0";
                            break;
                        }
                        break;
                    case "off":
                        switch (mount) {
                        case "st":
                        case "esom":
                        case "am":
                            pen = "-1";
                            stab = "1";
                            break;
                        case "fm":
                        case "hp":
                        case "cg":
                        case "tt":
                            pen = "-2";
                            stab = "0";
                            break;
                        case "eom":
                            pen = "-3";
                            stab = "0";
                            break;
                        case "hh":
                            pen = "-4";
                            stab = "0";
                            break;
                        }
                        break;
                    }
                    break;
                case "water":
                    switch (terrain) {
                    case "calm":
                        switch (mount) {
                        case "st":
                        case "esom":
                        case "am":
                            pen = "0";
                            stab = "1";
                            break;
                        case "fm":
                        case "hp":
                        case "cg":
                        case "tt":
                            pen = "-1";
                            stab = "0";
                            break;
                        case "eom":
                            pen = "-2";
                            stab = "0";
                            break;
                        case "hh":
                            pen = "-3";
                            stab = "0";
                            break;
                        }
                        break;
                    case "rough":
                        switch (mount) {
                        case "st":
                        case "esom":
                        case "am":
                            pen = "-1";
                            stab = "1";
                            break;
                        case "fm":
                        case "hp":
                        case "cg":
                        case "tt":
                            pen = "-2";
                            stab = "0";
                            break;
                        case "eom":
                            pen = "-3";
                            stab = "0";
                            break;
                        case "hh":
                            pen = "-4";
                            stab = "0";
                            break;
                        }
                        break;
                    }
                    break;
                }
                setAttrs({
                    weaponmountpenalty: pen,
                    rangedmountedstab: stab
                });
            });
    });

	on("clicked:range_calc_reset", function() {
			resetRangeCalculator();
		});
		
		function resetRangeCalculator() {
			
			setAttrs(
				{
					"firing_distance": 0,
					"firing_speed_difference": 0,
					"firing_size_mod": 0,
					"firing_direction": "linear",
					"firing_up_dwn_distance": 0
				});
			
		}

	// Range Calculator
	on('change:firing_distance change:firing_speed_difference change:firing_size_mod change:firing_direction change:firing_up_dwn_distance change:range_rule', function (event) {

	    updateRangeModifier();

	});

	/**
	 * Determine new range based on fields
	 * and then get the final to hit modifier
	 */
	function updateRangeModifier() {

	    var fields = [
	        "firing_distance",
	        "firing_speed_difference",
	        "firing_size_mod",
	        "firing_direction",
	        "firing_up_dwn_distance",
			"range_rule"
	    ];

	    getAttrs(fields, function (values) {

	        var linearDistance = +values.firing_distance;

	        var sizeMod = +values.firing_size_mod;

	        var speed = +values.firing_speed_difference;

	        var elevation = +values.firing_up_dwn_distance;
			
			var rangeRule = +values.range_rule;

	        var elevationDown = 0;

	        var rangeToTarget = 0;

	        var speedRangeValue = 0;

	        var finalSpeedRangeValue = 0;
			

	        // make sure value is valid
	        if (linearDistance < 0)
	            linearDistance = 0;

	        if (elevation > 0 && values.firing_direction == "up") {

	            rangeToTarget = linearDistance + elevation;

	        } else if (elevation > 0 && values.firing_direction == "dn") {

	            elevationDown = Math.floor(elevation / 2);

	            // max elevation is half of ground distance
	            if (elevationDown > Math.floor(linearDistance / 2)) {

	                elevationDown = Math.floor(linearDistance / 2);

	            }

	            rangeToTarget = linearDistance - elevationDown;

	        } else {

	            rangeToTarget = linearDistance;

	        }

			
			
			
	        finalSpeedRangeValue = rangeToTarget + speed;
			
			if (rangeRule === 1) {
				var hitModifier = getModBySpeedRange(finalSpeedRangeValue);
			} else if (rangeRule === 2) {
				var hitModifier = getModBySimpleSpeedRange(finalSpeedRangeValue);
			}

	        // add in size modifier
	        hitModifier = hitModifier + sizeMod;

	        setAttrs({
	            'firing_new_range': finalSpeedRangeValue,
	            'rangedspeedrangesize': hitModifier
	        });

	    });

	}
	
on("sheet:opened change:ranged_target", function () {
    getAttrs(["ranged_target"], function (values) {
        console.log("*** Update ranged Hit Location ***");
        const targets = {
            random: {
                name: "Random",
                penalty: 0,
                restr: "none",
                effects: "Random Grand Unified Hit Locations Table v2.4",
                table: 0,
                subtable: 0
            },
            // Skull
            skull: {
                name: "Skull",
                penalty: -7,
                restr: "-5 from behind",
                effects: "2 DR; if not tox: x4 inj; if not tox: any injury causing shock requires stun/knockdown roll, major wound roll -10 vs stun/knockdown; bleed at 30 seconds not 1 minute",
                table: 3,
                subtable: 0
            },
            skullr: {
                name: "Skull (Rear)",
                penalty: -5,
                restr: "-5 from behind",
                effects: "2 DR; if not tox: x4 inj; if not tox: any injury causing shock requires stun/knockdown roll, major wound roll -10 vs stun/knockdown; bleed at 30 seconds not 1 minute",
                table: 3,
                subtable: 1
            },
            // Face
            facef: {
                name: "Face (Front)",
                penalty: -5,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 0
            },
            Jaw: {
                name: "Jaw",
                penalty: -6,
                restr: "front only",
                effects: "Miss by 1 hit chest; any injury causing shock requires -1 stun/knockdown roll; major wound roll -6 to stun/knockdown.",
                table: 5,
                subtable: 1
            },
            Nose: {
                name: "Nose",
                penalty: -7,
                restr: "front only",
                effects: "Miss by 1 hit chest; cripple over 1/4 HP and causes No Sense of Smell/Taste (non-cutting) or Appearance loss (cutting, x2 crippling threshold), non-cutting major wound -5 to stun/knockdown.",
                table: 5,
                subtable: 2
            },
            Ear: {
                name: "Ear",
                penalty: -7,
                restr: "cutting or treat as face",
                effects: "Miss by 1 hit chest; cripple over 1/4 HP, no -5 to stun/knockdown, major wound only on sever; lost ear causes Appearance penalties.",
                table: 5,
                subtable: 3
            },
            Cheek: {
                name: "Cheek",
                penalty: -5,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 4
            },
            Eye: {
                name: "Eye",
                penalty: -9,
                restr: "-10 in helmet; imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Cripple over 1/10 hp; otherwise skull hit w/no DR. Tox has no spec. effect beyond cripple; bleed at 30 seconds not 1 min.",
                table: 5,
                subtable: 6
            },
            facer: {
                name: "Face (Rear)",
                penalty: -7,
                restr: "-7 from behind",
                effects: "Roll on sub-table A; Cor x1.5 inj; any injury causing shock requires stun/knockdown roll, major wound roll -5 stun/knockdown",
                table: 5,
                subtable: 0
            },
            // Leg (Right)
            LegR: {
                name: "Leg (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 0
            },
            Shinr: {
                name: "Shin (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 1
            },
            Kneer: {
                name: "Knee (Right)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 6,
                subtable: 4
            },
            Thighr: {
                name: "Thigh (Right)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 6,
                subtable: 5
            },
            Veinrl: {
                name: "Vein/Artery, Leg (Right)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 6,
                subtable: 6
            },
            // Arm (Right)
            ArmR: {
                name: "Arm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "Roll on sub-table C; pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 0
            },
            Forearmr: {
                name: "Forearm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 1
            },
            Elbowr: {
                name: "Elbow (Right)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 8,
                subtable: 4
            },
            Upperr: {
                name: "Upper Arm (Right)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 5
            },
            Shoulderr: {
                name: "Shoulder (Right)",
                penalty: -5,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 8,
                subtable: 6
            },
            Veinra: {
                name: "Vein/Artery, Arm (Right)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 8,
                subtable: 7
            },
            // Chest
            Chest: {
                name: "Chest",
                penalty: 0,
                restr: "none",
                effects: "Default location. Roll on sub table D; injury can't exceed 2xHP (1xHP if using bleeding); any excess is lost",
                table: 9,
                subtable: 0
            },
            Vitalsc: {
                name: "Vitals",
                penalty: -3,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty",
                table: 9,
                subtable: 1
            },
            Spinec: {
                name: "Spine",
                penalty: -8,
                restr: "behind only, cr, cut, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit chest; 3 DR; as per chest but enough injury for shock penalty (even with HPT) gives stun/knockdown, -5 if a major wound. Cripple over 1xHP Bad Back (Severe) and Lame (Paraplegic) until healed",
                table: 9,
                subtable: 7
            },
            Heart: {
                name: "Vitals (Heart)",
                penalty: -5,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty. May be special for some characters (e.g. Vampires).",
                table: 9,
                subtable: 8
            },
            // Abdomen
            Abdomen: {
                name: "Abdomen",
                penalty: -1,
                restr: "none",
                effects: "Roll on sub-table E; Injury can't exceed 2xHP (1xHP if using bleeding); any excess is lost",
                table: 11,
                subtable: 0
            },
            Vitalsa: {
                name: "Vitals, Abdomen",
                penalty: -3,
                restr: "cr, imp; pi-, pi, pi+, pi++; bu (tb) only",
                effects: "Imp, pi-, pi, pi+, pi++: x3 inj; bu (tb) x2 inj; cr x1, shock force HT roll for Knockdown, major wound -5 stun/knockdown; bleed at 30 seconds not 1 minute; -4 bleed penalty",
                table: 11,
                subtable: 1
            },
            Digest: {
                name: "Digestive Tract",
                penalty: -3,
                restr: "none",
                effects: "As abdomen; on major wound HT-3 to avoid special",
                table: 11,
                subtable: 2
            },
            Pelvis: {
                name: "Pelvis",
                penalty: -3,
                restr: "none",
                effects: "As abdomen; on major wound: fall down, cannot stand, Lame (Missing Legs) until healed",
                table: 11,
                subtable: 5
            },
            Groin: {
                name: "Groin",
                penalty: -3,
                restr: "none",
                effects: "double shock; major wound -5 stun/knockdown",
                table: 11,
                subtable: 5
            },
            // Arm (Left)
            ArmL: {
                name: "Arm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "Roll on sub-table C; pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 0
            },
            Forearm: {
                name: "Forearm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 1
            },
            Elbowl: {
                name: "Elbow (Left)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 12,
                subtable: 4
            },
            Upperl: {
                name: "Upper Arm (Left)",
                penalty: -2,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 5
            },
            Shoulderl: {
                name: "Shoulder (Left)",
                penalty: -5,
                restr: "-4 with shield",
                effects: "pi+, pi++, imp: x1 inj; cripple over 1/2 HP",
                table: 12,
                subtable: 6
            },
            Veinla: {
                name: "Vein/Artery, Arm (Left)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 12,
                subtable: 7
            },
            LegL: {
                name: "Leg (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 0
            },
            Shinl: {
                name: "Shin (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 1
            },
            Kneel: {
                name: "Knee (Left)",
                penalty: -5,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; as per limb but cripple over 1/3 HP; dismember as per limb, not per joint; recover from cripple at -2",
                table: 13,
                subtable: 4
            },
            Thighl: {
                name: "Thigh (Left)",
                penalty: -2,
                restr: "none",
                effects: "Roll on sub-table B; pi+, pi++, imp: x1 inj; cripple over 1/2 H",
                table: 13,
                subtable: 5
            },
            Veinll: {
                name: "Vein/Artery, Leg (Left)",
                penalty: -5,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit limb; Cr, corr: x1.5 inj; cut x2 inj; no cripple, no inj limit; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 13,
                subtable: 6
            },
            Hand: {
                name: "Hand",
                penalty: -4,
                restr: "-8 with shield",
                effects: "Roll on sub-table F; pi+, pi++, imp: x1 inj; cripple over 1/3 HP",
                table: 15,
                subtable: 0
            },
            HJoint: {
                name: "Hand (Joint)",
                penalty: -7,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit extremity; as per extremity but cripple over 1/4 HP; dismember as per extremity, not per joint; recover from cripple at -2",
                table: 15,
                subtable: 1
            },
            Foot: {
                name: "Foot",
                penalty: -4,
                restr: "none",
                effects: "Roll on sub-table F; pi+, pi++, imp: x1 inj; cripple over 1/3 HP",
                table: 16,
                subtable: 0
            },
            FJoint: {
                name: "Hand (Joint)",
                penalty: -7,
                restr: "cr, cut, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit extremity; as per extremity but cripple over 1/4 HP; dismember as per extremity, not per joint; recover from cripple at -2",
                table: 16,
                subtable: 1
            },
            Neck: {
                name: "Neck",
                penalty: -5,
                restr: "none",
                effects: "Roll on sub-table G; Miss by 1 hit chest; Cr, corr: x1.5 inj; cut x2 inj; bleed at 30 seconds not 1 minute; -2 bleed penalty; optional: treat any crushing injury over HP/2 to the neck hit location as a crippling injury which crushes the windpipe, causing choking.",
                table: 17,
                subtable: 0
            },
            Veeinn: {
                name: "Neck Vein/Artery",
                penalty: -8,
                restr: "cu, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit neck; Cr, corr: x2 inj; cut x2.5 inj; bleed at -3 (-4 if cu); make bleed rolls every 30s",
                table: 17,
                subtable: 1
            },
            Spinen: {
                name: "Spine, Neck (Rear)",
                penalty: -8,
                restr: "behind only, cr, cut, imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Miss by 1 hit chest; 3 DR; as per chest but enough injury for shock penalty (even with HPT) gives stun/knockdown, -5 if a major wound. Cripple over 1xHP Broken Neck (Severe) Lame, No Manipulators (Quadriplegic) until healed",
                table: 17,
                subtable: 2
            },
            // Harsh Realism Armor Gaps -------
            ChinksT: {
                name: "Chinks (Torso)",
                penalty: -8,
                restr: "none",
                effects: "Halves DR over Torso",
                table: 9,
                subtable: 0
            },
            ChinksO: {
                name: "Chinks (Other)",
                penalty: -10,
                restr: "none",
                effects: "Halves DR over any other hit location",
                table: 20,
                subtable: 0
            },
            // Harsh Realism Armor Gaps -------
            ArmpitR: {
                name: "Right Armpit",
                penalty: -8,
                restr: "imp only",
                effects: "Armor gap over Vitals; on Critical Hit: instead of rolling on table, cripple arm (in addition to vitals damage)",
                table: 8,
                subtable: 6
            },
			ArmpitL: {
                name: "Left Armpit",
                penalty: -8,
                restr: "imp only",
                effects: "Armor gap over Vitals; on Critical Hit: instead of rolling on table, cripple arm (in addition to vitals damage)",
                table: 12,
                subtable: 6
            },
            BoKR: {
                name: "Back of Right Knee",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 6,
                subtable: 4
            },
			BoKL: {
                name: "Back of Left Knee",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 13,
                subtable: 4
            },
            Eyeslit: {
                name: "Eyeslit(s)",
                penalty: -10,
                restr: "imp, pi-, pi, pi+, pi++, bu (tb) only",
                effects: "Armor gap over eyes",
                table: 5,
                subtable: 6
            },
            Cod: {
                name: "Codpiece",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over groin",
                table: 11,
                subtable: 6
            },
            InsideER: {
                name: "Inside Right Elbow",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 8,
                subtable: 4
            },
			InsideEL: {
                name: "Inside Left Elbow",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over joint",
                table: 12,
                subtable: 4
            },
            InsideTR: {
                name: "Inside Right Thigh",
                penalty: -8,
                restr: "-3 from the back",
                effects: "Armor gap over Leg (Thigh); optional: cu, imp, pi, bu (tb) hits Limb Vein/Artery.",
                table: 6,
                subtable: 6
            },
			InsideTL: {
                name: "Inside Left Thigh",
                penalty: -8,
                restr: "-3 from the back",
                effects: "Armor gap over Leg (Thigh); optional: cu, imp, pi, bu (tb) hits Limb Vein/Artery.",
                table: 13,
                subtable: 6
            },
            NeckAG: {
                name: "Neck Armor Gap",
                penalty: -8,
                restr: "none",
                effects: "Armor gap over neck",
                table: 17,
                subtable: 0
            },
            Palm: {
                name: "Open Palm",
                penalty: -8,
                restr: "-6 if unarmed",
                effects: "Armor gap over hand",
                table: 15,
                subtable: 0
            },
            // Weapons and Equipment --------
            ReachC: {
                name: "Reach C Weapon",
                penalty: -5,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            },
            Reach1: {
                name: "Reach 1 Weapon",
                penalty: -4,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            },
            Reach2: {
                name: "Reach 2 Weapon",
                penalty: -3,
                restr: "see weapon breakage p.401",
                effects: "Roll normal damage against the weapon.",
                table: 40,
                subtable: 1
            }
        };
        let ranged_target = values.ranged_target;
        if (!targets.hasOwnProperty(ranged_target)) {
            // I reversed the order from the example above for simplicity
            console.log("Error: The item " + ranged_target + " is not found within the ranged_target Object.");
            return;
        }
        setAttrs({
            "ranged_target_name": targets[ranged_target].name,
            "ranged_target_penalty": targets[ranged_target].penalty,
            "ranged_target_restr": targets[ranged_target].restr,
            "ranged_target_effects": targets[ranged_target].effects,
            "ranged_target_table": targets[ranged_target].table,
            "ranged_target_subtable": targets[ranged_target].subtable
        });
    });
});
	
on('sheet:opened change:ranged_cannot_see_penalty change:ranged_cannot_foe_penalty change:ranged_partial_vis change:night_vision change:partial_vis change:ranged_night_vision', function(e){
	console.log('*** Update ranged Visibility ***');
	getAttrs(['ranged_cannot_see_penalty', 'ranged_cannot_foe_penalty', 'ranged_partial_vis', 'ranged_night_vision'],
	function(v){
		var seepen = +v.ranged_cannot_see_penalty;
		var foepen = +v.ranged_cannot_foe_penalty;
		var part = +v.ranged_partial_vis;
		var night = +v.ranged_night_vision;
		var pen = foepen + seepen + part + night;
		var ttlpen = Math.min(Math.max(pen, -10), 0)
		setAttrs({
				ranged_vis_penalty: ttlpen
			});
		});
	});

// Total Ranged Modifier Calculator
on("sheet:opened change:trained_by_master change:weapon_master change:ambidextrous change:man_ranged_mod change:aff_penalty change:ranged_bad-foot change:ranged_bulk change:ranged_damagedweapon change:ranged_min_distraction change:ranged_maj_distraction change:rangedaimbonus change:rangedpopup change:rangedrapidfire change:rangedunfam change:oppfire_penalty change:ranged_dual_weapon_penalty change:ranged_offhand_penalty change:rangedlightcover change:rangedbehindpenalty change:rangedtargetposture change:rangedtargetpartialcover change:rangedspeedrangesize change:ranged_target_penalty change:ranged_vis_penalty change:rangedmountedcbtpenalty",
    function (e) {
        console.log("***** Update Total Ranged Modifier *****");
        getAttrs(["man_ranged_mod", "ranged_bad-foot", "ranged_bulk", "ranged_damagedweapon", "ranged_min_distraction", "ranged_maj_distraction", "rangedaimbonus", "rangedpopup", "rangedrapidfire", "rangedunfam", "oppfire_penalty", "ranged_dual_weapon_penalty", "ranged_offhand_penalty", "rangedlightcover", "rangedbehindpenalty", "rangedtargetposture", "rangedtargetpartialcover", "rangedspeedrangesize", "ranged_target_penalty", "ranged_vis_penalty", "rangedmountedcbtpenalty"], function(v) {
			var vals = Object.values(v);
			vals.push(0);
			setAttrs({
				total_ranged_mod: vals.reduce(getSum)
			});
		});
	});
	
// Update Lines on Ranged
	on('change:repeating_ranged remove:repeating_ranged change:total_ranged_mod', function () {
		TAS.repeating('ranged')
			.attrs('total_ranged_mod')
			.fields('esl', 'skill', 'notes_onoff', 'notestext', 'notes')
			.each(function(r,a){
			r.D[0].esl = r.I.skill + a.I.total_ranged_mod;			
		})
			.execute();
	});

		// check for changes that affect thrown object stats
	on('change:thrown_object_weight change:striking_st change:basic_lift change:super_throw_level change:thrown_object_strength_mod change:thrown_object_damage_mod', function(event) {
	    
	    updateThrownObjectStats();
	    
	});
	
	/**
	 * Update thrown objects stats
	 * Damage, range, etc.
	 */
	function updateThrownObjectStats() {
	
	    console.log("*********** Updating Thrown Object Stats ***********");
	    
	    var fields = ['thrown_object_weight',
            'striking_st',
            'thrown_object_strength_mod',
            'super_throw_level',
            'thrust',
            'basic_lift',
            'thrown_object_damage_mod'
        ];
	    
	    getAttrs(fields, function (values) {
	        
	        var weight = +values.thrown_object_weight;
	        
	        var basicLift = +values.basic_lift;
	        
	        var throwingST = +values.striking_st;
	        
	        var throwingStMod = parseInt(values.thrown_object_strength_mod);
	        
	        var superThrowLvl = parseInt(values.super_throw_level);
	        
	        var enteredDamageMod = parseInt(values.thrown_object_damage_mod);
	        
	        var damageMod = 0;
	        
	        throwingST = throwingST + throwingStMod;
	        
	        if (weight < 1) {
	            weight = 0;
	        }
	        
	        if (basicLift < 0) {
	            basicLift = 1;
	        }
	        
	        if (superThrowLvl < 0) {
	            superThrowLvl = 0;
	        }
	        
	        var weightRatio = weight/basicLift;
	        
	        var distanceMod = distanceModifier(weightRatio);
	        
	        var distance = throwingST * distanceMod;
	        
	        var damageMod = getThrownDamageModifier(basicLift, weight);
	        
	        // check for super throw
	        if (superThrowLvl > 0) {
	            
	            distance = distance * Math.pow(2,superThrowLvl);
	            
	            damageMod = damageMod + (superThrowLvl * 2);
	            
	        }
	        
	        // check to see if they entered a modifier
	        if (enteredDamageMod != 0) {
	            damageMod = damageMod + enteredDamageMod; 
	        }
	        
	        distance = Math.floor(distance);
	        
	        var finalDamage = getModifiedDamage(values.thrust, damageMod);
	        
            //
	        setAttrs({
	            'thrown_object_strength': throwingST,
	            'thrown_object_range': distance,
	            'thrown_object_damage': finalDamage
	        });
	        
	    });
	    
	}
	
	/*
	 * Get damage modifier
	 *
	 * @param int basicLift In pounds
	 * @param int weight    Weight of thrown object
	 *
	 * @return int
	 */
	function getThrownDamageModifier(basicLift, weight) {
	    
	    var damageMod = 0;
	    
	    if (weight <= Math.floor(basicLift/8)) {
	        damageMod = -2;
	    } else if (Math.floor(basicLift/8) < weight && weight <= Math.floor(basicLift/4)) {
	        damageMod = -1;
	    } else if (Math.floor(basicLift/4) < weight && weight <= Math.floor(basicLift/2)) {
	        damageMod = 0;
	    } else if (Math.floor(basicLift/2) < weight && weight <= Math.floor(basicLift)) {
	        damageMod = 1;
	    } else if (Math.floor(basicLift) < weight && weight <= Math.floor(basicLift*2)) {
	        damageMod = 0;
	    } else if (Math.floor(basicLift*2) < weight && weight <= Math.floor(basicLift*4)) {
	        damageMod = -.5;
	    } else if (Math.floor(basicLift*4) < weight && weight <= Math.floor(basicLift*8)) {
	        damageMod = -1;
	    } else {
	        damageMod = -10;
	    }
	    
	    return damageMod;
	    
	}
	
	/*
	 * Get distance modifier based on ratio
	 *
	 * @param decimal weightRatio Object Weight/Basic Lift
	 *
	 * @return decimal
	 */
	function distanceModifier(weightRatio) {
	    
	    var distanceMod = 0;
	    
	    if (weightRatio <= .05) {
	        distanceMod = 3.5;
	    } else if (.05 < weightRatio && weightRatio <= .10) {
	        distanceMod = 2.5;
	    } else if (.10 < weightRatio && weightRatio <= .15) {
	        distanceMod = 2.0;
	    } else if (.15 < weightRatio && weightRatio <= .20) {
	        distanceMod = 1.5;
	    } else if (.20 < weightRatio && weightRatio <= .25) {
	        distanceMod = 1.2;
	    } else if (.25 < weightRatio && weightRatio <= .30) {
	        distanceMod = 1.1;
	    } else if (.30 < weightRatio && weightRatio <= .40) {
	        distanceMod = 1.0;
	    } else if (.40 < weightRatio && weightRatio <= .50) {
	        distanceMod = .8;
	    } else if (.50 < weightRatio && weightRatio <= .75) {
	        distanceMod = .7;
	    } else if (.75 < weightRatio && weightRatio <= 1.00) {
	        distanceMod = .6;
	    } else if (1.00 < weightRatio && weightRatio <= 1.50) {
	        distanceMod = .4;
	    } else if (1.50 < weightRatio && weightRatio <= 2.0) {
	        distanceMod = .30;
	    } else if (2.0 < weightRatio && weightRatio <= 2.5) {
	        distanceMod = .25;
	    } else if (2.5 < weightRatio && weightRatio <= 3.0) {
	        distanceMod = .20;
	    } else if (3.0 < weightRatio && weightRatio <= 4.0) {
	        distanceMod = .15;
	    } else if (4.0 < weightRatio && weightRatio <= 5.0) {
	        distanceMod = .12;
	    } else if (5.0 < weightRatio && weightRatio <= 6.0) {
	        distanceMod = .10;
	    } else if (6.0 < weightRatio && weightRatio <= 7.0) {
	        distanceMod = .09;
	    } else if (7.0 < weightRatio && weightRatio <= 8.0) {
	        distanceMod = .08;
	    } else if (8.0 < weightRatio && weightRatio <= 9.0) {
	        distanceMod = .07;
	    } else if (9.0 < weightRatio && weightRatio <= 10.0) {
	        distanceMod = .06;
	    } else if (10.0 < weightRatio && weightRatio <= 12.0) {
	        distanceMod = .05;
	    } else {
	        distanceMod = 0;
	    }
	    
	    return distanceMod;
	    
	}

	/**
	 * Determines the final damage dice + modifier
	 * 
	 * @param string damageDice Original damage dice; 3d6
	 * @param int    damageMod  Damage modifier per dice; +1 per dice
	 * 
	 * @return string Modified damge dice
	 */
	function getModifiedDamage(damageDice, damageMod) {
	    
	    var newDamageDice = damageDice;
	    
	    damageDice = damageDice.toLowerCase();
	    
	    // split into array. 
	    // 3d6 = [3,6]
	    var arrDice = damageDice.split("d");
	    
	    if (arrDice.length == 2) {

            var diceCount = parseInt(arrDice[0]);
	    
    	    var diceType = arrDice[1];
    	    
    	    var arrDiceTypeModifier = [];
    	    
    	    var diceModifier = "";
	        
	        if (diceCount < 1) {
	            diceCount = 1;
	        }
	        
	        // check for dice modifier
	        // 3d6+1; diceType = 6+1; diceType=6; diceModifier=1;
	        if (diceType.includes("+")) {
	            
	            arrDiceTypeModifier = diceType.split("+");
	            
	            diceType = arrDiceTypeModifier[0];
	            
	            diceModifier = parseInt(arrDiceTypeModifier[1]);
	            
	        } else if (diceType.includes("-")) { 
	            
	            arrDiceTypeModifier = diceType.split("-");
	            
	            diceType = arrDiceTypeModifier[0];
	            
	            diceModifier = -1 * parseInt(arrDiceTypeModifier[1]);
	            
	        } else {
	            
	            diceModifier = 0;
	            
	        }
	        
	        newDamageDice = diceCount + "d" + diceType;
	        
	        // get the final damage modifier
	        damageMod = Math.floor(damageMod + diceModifier);
	        
	        if (damageMod < 0) {
	            
	            damageMod = Math.abs(damageMod) * diceCount;
	            
	            newDamageDice = newDamageDice + "-" + damageMod;
	            
	        } else if (damageMod > 0) {
	            
	            damageMod = Math.abs(damageMod) * diceCount;
	            
	            newDamageDice = newDamageDice + "+" + damageMod;
	            
	        }
	        
	    }
	    
	    return newDamageDice;
	    
	}
	
	
	on("change:yards_fallen change:gravity change:atmosphere", function() {
	    
	    var fields = [
	        "yards_fallen",
	        "gravity",
	        "atmosphere"
        ];
        
        getAttrs(fields, function(values) {
            
            var yards = Math.floor(+values.yards_fallen);
            
            var gravity = +values.gravity;
            
            var atmosphere = +values.atmosphere;
            
            if (yards <= 0)
                yards = 1;
                
            if (gravity < 0)
                gravity = 1;
                
            if (atmosphere < 0)
                atmosphere = 1;
                
            var velocity = (Math.sqrt(gravity * 21.4 * yards) / Math.sqrt(atmosphere));
            
            velocity = Math.round(velocity);
            
            setAttrs({
                falling_velocity: velocity
            });
            
        });
	    
	});
	
	// handle falling/collision damage
	on("change:falling_velocity change:falling_hit_points", function() {
	    
	    var strDmg = "";
	    
	    getAttrs(["falling_velocity", "falling_hit_points"], function(values) {
	        
	        strDmg = getCollisionDamage(values.falling_velocity, values.falling_hit_points);
	        
	        setAttrs({
	            "falling_damage": strDmg
	        });
	        
	    });
	    
	});
    
    on("change:collision_velocity change:collision_hit_points", function() {
        
        var strDmg = "";
	    
	    getAttrs(["collision_velocity", "collision_hit_points"], function(values) {
	        
	        strDmg = getCollisionDamage(values.collision_velocity, values.collision_hit_points);
	        
	        setAttrs({
	            "collision_damage": strDmg
	        });
	        
	    });
	    
    });
    
    function getCollisionDamage(velocity, hit_points) {
        
        var strDmg = "1d6-3";
        
        var remainder = 0;
        
        velocity = +velocity;
        
        if (velocity <= 0) {
            velocity = 1;
        }
        
        hit_points = +hit_points;
        
        if (hit_points <= 0) {
            hit_points = 1;
        }
        
        var ratio = (hit_points*velocity)/100;

        if (ratio <= .25) {
            
            strDmg = "1d6-3";
            
        } else if (ratio <= .5) {
            
            strDmg = "1d6-2";
            
        } else if (ratio < 1) {
            
            strDmg = "1d6-1";
            
        } else {
            
            remainder = ratio % 1;
            
            if (remainder < .5) {
                strDmg = Math.floor(ratio) + "d6";
            } else {
                strDmg = Math.ceil(ratio) + "d6";
            }
            
        }
        
        return strDmg;
    }	
	    on("clicked:falling_reset", function() {
        
        setAttrs({
            "yards_fallen": 1,
            "gravity": 1,
            "atmosphere": 1,
            "falling_hit_points": 10
        });
        
    });    
    
    on("clicked:collision_reset", function() {
        
        setAttrs({
            "collision_velocity": 1,
            "collision_hit_points": 10
        });
        
    });
	
on('change:repeating_grimoireenergy', function(){
TAS.repeating('grimoireenergy')
.fields('energy_points', 'energy_points_max', 'percent')
.each(function (r) {
	r.S.percent=( 100 * (r.D[2].energy_points / r.F.energy_points_max)) + "%";

})
.execute();
});
on('change:repeating_ritualenergy', function(){
TAS.repeating('ritualenergy')
.fields('energy_points', 'energy_points_max', 'percent')
.each(function (r) {
	r.S.percent=( 100 * (r.D[2].energy_points / r.F.energy_points_max)) + "%";

})
.execute();
});
	
</script>

	<!-- ===== ===== ===== ===== ROLL TEMPLATES ===== ===== ===== ===== -->
	<div class="sheet-hidden">
		<rolltemplate class="sheet-rolltemplate-GURPSATTR">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. effective {{roll_name}}: {{target}}</div>
		{{#success}}
				<div class="sheet-successbar">{{success}}</div>
		{{/success}}
		{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
		{{/fail}}
		{{#notes}}
				<div class="sheet-notebar">Notes</div>
				<div class="sheet-notestext">{{notes}}</div>
		{{/notes}}
			</div>			
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSBASIC">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-rollbar">Basic {{roll_type}} Damage: {{roll}}</div>
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSADV">
				<div class="sheet-name-box">
					<div class="sheet-namebar">{{charactername}}</div>
					<div class="sheet-titlebar">{{roll_name}}</div>
					<div class="sheet-rollbar">Roll: {{roll}} vs. Control Rating: {{target}}</div>
			{{#success}}
					<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
					<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
					<div class="sheet-notebar">Notes</div>
					<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
				</div>			
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDISAD">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Control Roll: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSTRAIT">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Control Roll: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSSKILL">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSTECH">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">({{parent_name}})</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDEFENSE">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">({{type}})</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSATTACK">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">{{usage}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDAMAGE">
			{{#damage}}
			<div class="sheet-damage-box">
				<div class="sheet-damagebar">
					<div class="sheet-dam0">Damage</div>
					<div class="sheet-dam1">Type</div>
					<div class="sheet-dam2">Location</div>
					<div class="sheet-dam3">Mod</div>
				</div>
				<div class="sheet-damagetext">
					<div class="sheet-dam0">{{damage}}</div>
					<div class="sheet-dam1">{{type}}</div>
					<div class="sheet-dam2">{{location}}</div>
					<div class="sheet-dam3">{{wm}}</div>
				</div>
				<div class="sheet-woundbar">Wound Notes</div>
				<div class="sheet-woundtext">{{wound_notes}}</div>
			</div>
			{{/damage}}
			{{#criteffect}}
				<div class="sheet-critical-box">
					<div class="sheet-critnotes">{{criteffect}}</div>
				</div>
			{{/criteffect}}			
		</rolltemplate>
		
		<rolltemplate class="sheet-rolltemplate-GURPSMAGIC">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				{{#clss}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Class: </div>
					<div class="sheet-cell2">{{clss}}</div>
					<div class="sheet-cell1">College: </div>
					<div class="sheet-cell2">{{college}}</div>
				</div>
				{{/clss}}
				{{#casttime}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Cast Time: </div>
					<div class="sheet-cell2">{{casttime}}</div>
					<div class="sheet-cell1">Duration: </div>
					<div class="sheet-cell2">{{duration}}</div>
				</div>
				{{/casttime}}
				{{#cost}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Cost Cast: </div>
					<div class="sheet-cell2">{{cost}}</div>
					<div class="sheet-cell1">Maintain: </div>
					<div class="sheet-cell2">{{maintain}}</div>
				</div>
				{{/cost}}
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSRITUAL">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			{{#effects}}
				<div class="sheet-ritualbar">Spell Effects</div>
				<div class="sheet-notestext">{{effects}}</div>
			{{/effects}}
			{{#inherentmod}}
				<div class="sheet-ritualbar">Inherent Modifiers</div>
				<div class="sheet-notestext">{{inherentmod}}</div>
			{{/inherentmod}}
			{{#descr}}
				<div class="sheet-ritualbar">Ritual Dscription</div>
				<div class="sheet-notestext">{{descr}}</div>
			{{/descr}}
			{{#typical}}
				<div class="sheet-ritualbar">This Casting</div>
				<div class="sheet-notestext">{{typical}}</div>
			{{/typical}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSFRIGHT">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{fright_table}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#fright_result}}
				<div class="sheet-feartext">{{fright_result}}</div>
			{{/fright_result}}
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSGM">
			<div class="sheet-critical-box">
				<div class="sheet-critnotes">{{criteffect}}</div>
			</div>
		</rolltemplate>
				<rolltemplate class="sheet-rolltemplate-GURPSATTRGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. effective {{roll_name}}: {{target}}</div>
		{{#success}}
				<div class="sheet-successbar">{{success}}</div>
		{{/success}}
		{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
		{{/fail}}
		{{#notes}}
				<div class="sheet-notebar">Notes</div>
				<div class="sheet-notestext">{{notes}}</div>
		{{/notes}}
			</div>			
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSBASICGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-rollbar">Basic {{roll_type}} Damage: {{roll}}</div>
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSADVGM">
				<div class="sheet-name-box">
					<div class="sheet-namebar">{{charactername}}</div>
					<div class="sheet-titlebar">{{roll_name}}</div>
					<div class="sheet-rollbar">Roll: {{roll}} vs. Control Rating: {{target}}</div>
			{{#success}}
					<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
					<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
					<div class="sheet-notebar">Notes</div>
					<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
				</div>			
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDISADGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Control Roll: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSTRAITGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Control Roll: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSSKILLGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSTECHGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">({{parent_name}})</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDEFENSEGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">({{type}})</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>	
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSATTACKGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-parentbar">{{usage}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSDAMAGEGM">
			{{#damage}}
			<div class="sheet-damage-box">
				<div class="sheet-damagebar">
					<div class="sheet-dam0">Damage</div>
					<div class="sheet-dam1">Type</div>
					<div class="sheet-dam2">Location</div>
					<div class="sheet-dam3">Mod</div>
				</div>
				<div class="sheet-damagetext">
					<div class="sheet-dam0">{{damage}}</div>
					<div class="sheet-dam1">{{type}}</div>
					<div class="sheet-dam2">{{location}}</div>
					<div class="sheet-dam3">{{wm}}</div>
				</div>
				<div class="sheet-woundbar">Wound Notes</div>
				<div class="sheet-woundtext">{{wound_notes}}</div>
			</div>
			{{/damage}}
			{{#criteffect}}
				<div class="sheet-critical-box">
					<div class="sheet-critnotes">{{criteffect}}</div>
				</div>
			{{/criteffect}}			
		</rolltemplate>
		
		<rolltemplate class="sheet-rolltemplate-GURPSMAGICGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				{{#clss}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Class: </div>
					<div class="sheet-cell2">{{clss}}</div>
					<div class="sheet-cell1">College: </div>
					<div class="sheet-cell2">{{college}}</div>
				</div>
				{{/clss}}
				{{#casttime}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Cast Time: </div>
					<div class="sheet-cell2">{{casttime}}</div>
					<div class="sheet-cell1">Duration: </div>
					<div class="sheet-cell2">{{duration}}</div>
				</div>
				{{/casttime}}
				{{#cost}}
				<div class="sheet-magictext">
					<div class="sheet-cell1">Cost Cast: </div>
					<div class="sheet-cell2">{{cost}}</div>
					<div class="sheet-cell1">Maintain: </div>
					<div class="sheet-cell2">{{maintain}}</div>
				</div>
				{{/cost}}
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSRITUALGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{roll_name}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#notes}}
				<div class="sheet-notestext">{{notes}}</div>
			{{/notes}}
			{{#effects}}
				<div class="sheet-ritualbar">Spell Effects</div>
				<div class="sheet-notestext">{{effects}}</div>
			{{/effects}}
			{{#inherentmod}}
				<div class="sheet-ritualbar">Inherent Modifiers</div>
				<div class="sheet-notestext">{{inherentmod}}</div>
			{{/inherentmod}}
			{{#descr}}
				<div class="sheet-ritualbar">Ritual Dscription</div>
				<div class="sheet-notestext">{{descr}}</div>
			{{/descr}}
			{{#typical}}
				<div class="sheet-ritualbar">This Casting</div>
				<div class="sheet-notestext">{{typical}}</div>
			{{/typical}}
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSFRIGHTGM">
			<div class="sheet-name-box">
				<div class="sheet-namebar">{{charactername}}</div>
				<div class="sheet-titlebar">{{fright_table}}</div>
				<div class="sheet-rollbar">Roll: {{roll}} vs. Effective Skill Level: {{target}}</div>
			{{#success}}
				<div class="sheet-successbar">{{success}}</div>
			{{/success}}
			{{#fail}}
				<div class="sheet-failbar">{{fail}}</div>
			{{/fail}}
			{{#fright_result}}
				<div class="sheet-feartext">{{fright_result}}</div>
			{{/fright_result}}
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSGMGM">
			<div class="sheet-critical-box">
				<div class="sheet-critnotes">{{criteffect}}</div>
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSGMROLLING">
			<div class="sheet-GM-box">
				<div class="sheet-gmrolling">{{gmrolling}}</div>
			</div>
		</rolltemplate>
		<rolltemplate class="sheet-rolltemplate-GURPSFALLCOLL">
			<div class="sheet-GM-box">
				<div class="sheet-gmrolling">{{CF}} {{damage}}</div>
			</div>
		</rolltemplate>
	</div>
</div>
